{"ast":null,"code":"// This file is part of the bwip-js project available at:\n//\n//    http://metafloor.github.io/bwip-js\n//\n// Copyright (c) 2011-2024 Mark Warren\n//\n// This file contains code automatically generated from:\n// Barcode Writer in Pure PostScript - Version 2024-01-03\n// Copyright (c) 2004-2024 Terry Burton\n//\n// The MIT License\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\"use strict\";\n\nimport { bwipp_auspost, bwipp_azteccode, bwipp_azteccodecompact, bwipp_aztecrune, bwipp_bc412, bwipp_channelcode, bwipp_codablockf, bwipp_code11, bwipp_code128, bwipp_code16k, bwipp_code2of5, bwipp_code32, bwipp_code39, bwipp_code39ext, bwipp_code49, bwipp_code93, bwipp_code93ext, bwipp_codeone, bwipp_coop2of5, bwipp_daft, bwipp_databarexpanded, bwipp_databarexpandedcomposite, bwipp_databarexpandedstacked, bwipp_databarexpandedstackedcomposite, bwipp_databarlimited, bwipp_databarlimitedcomposite, bwipp_databaromni, bwipp_databaromnicomposite, bwipp_databarstacked, bwipp_databarstackedcomposite, bwipp_databarstackedomni, bwipp_databarstackedomnicomposite, bwipp_databartruncated, bwipp_databartruncatedcomposite, bwipp_datalogic2of5, bwipp_datamatrix, bwipp_datamatrixrectangular, bwipp_datamatrixrectangularextension, bwipp_dotcode, bwipp_ean13, bwipp_ean13composite, bwipp_ean14, bwipp_ean2, bwipp_ean5, bwipp_ean8, bwipp_ean8composite, bwipp_flattermarken, bwipp_gs1_128, bwipp_gs1_128composite, bwipp_gs1_cc, bwipp_gs1datamatrix, bwipp_gs1datamatrixrectangular, bwipp_gs1dldatamatrix, bwipp_gs1dlqrcode, bwipp_gs1dotcode, bwipp_gs1northamericancoupon, bwipp_gs1qrcode, bwipp_hanxin, bwipp_hibcazteccode, bwipp_hibccodablockf, bwipp_hibccode128, bwipp_hibccode39, bwipp_hibcdatamatrix, bwipp_hibcdatamatrixrectangular, bwipp_hibcmicropdf417, bwipp_hibcpdf417, bwipp_hibcqrcode, bwipp_iata2of5, bwipp_identcode, bwipp_industrial2of5, bwipp_interleaved2of5, bwipp_isbn, bwipp_ismn, bwipp_issn, bwipp_itf14, bwipp_jabcode, bwipp_japanpost, bwipp_kix, bwipp_leitcode, bwipp_mailmark, bwipp_mands, bwipp_matrix2of5, bwipp_maxicode, bwipp_micropdf417, bwipp_microqrcode, bwipp_msi, bwipp_onecode, bwipp_pdf417, bwipp_pdf417compact, bwipp_pharmacode, bwipp_pharmacode2, bwipp_planet, bwipp_plessey, bwipp_posicode, bwipp_postnet, bwipp_pzn, bwipp_qrcode, bwipp_rationalizedCodabar, bwipp_raw, bwipp_rectangularmicroqrcode, bwipp_royalmail, bwipp_sscc18, bwipp_swissqrcode, bwipp_symbol, bwipp_telepen, bwipp_telepennumeric, bwipp_ultracode, bwipp_upca, bwipp_upcacomposite, bwipp_upce, bwipp_upcecomposite, bwipp_lookup, bwipp_encode, BWIPP_VERSION } from './bwipp.mjs';\n\n// exports.js\nconst BWIPJS_VERSION = '4.3.0 (2024-03-12)';\n\n// bwipjs.toCanvas(canvas, options)\n// bwipjs.toCanvas(options, canvas)\n//\n// Uses the built-in canvas drawing.\n//\n// `canvas` can be an HTMLCanvasElement or an ID string or unique selector string.\n// `options` are a bwip-js/BWIPP options object.\n//\n// This function is synchronous and throws on error.\n//\n// Returns the HTMLCanvasElement.\nfunction ToCanvas(cvs, opts) {\n  if (typeof opts == 'string' || opts instanceof HTMLCanvasElement) {\n    let tmp = cvs;\n    cvs = opts;\n    opts = tmp;\n  }\n  return _ToAny(bwipp_lookup(opts.bcid), opts, cvs);\n}\n// Entry point for the symbol-specific exports\n//\n// Polymorphic internal interface\n// _ToAny(encoder, string, opts) : HTMLCanvasElement\n// _ToAny(encoder, HTMLCanvasElement, opts) : HTMLCanvasElement\n// _ToAny(encoder, opts, string) : HTMLCanvasElement\n// _ToAny(encoder, opts, HTMLCanvasElement) : HTMLCanvasElement\n// _ToAny(encoder, opts, drawing) : any\n//\n// 'string` can be either an `id` or query selector returning a single canvas element.\nfunction _ToAny(encoder, opts, drawing) {\n  if (typeof opts == 'string') {\n    var canvas = document.getElementById(opts) || document.querySelector(opts);\n    if (!(canvas instanceof HTMLCanvasElement)) {\n      throw new Error('bwipjs: `' + opts + '`: not a canvas');\n    }\n    opts = drawing;\n    drawing = DrawingCanvas(canvas);\n  } else if (opts instanceof HTMLCanvasElement) {\n    var canvas = opts;\n    opts = drawing;\n    drawing = DrawingCanvas(canvas);\n  } else if (typeof drawing == 'string') {\n    var canvas = document.getElementById(drawing) || document.querySelector(drawing);\n    if (!(canvas instanceof HTMLCanvasElement)) {\n      throw new Error('bwipjs: `' + drawing + '`: not a canvas');\n    }\n    drawing = DrawingCanvas(canvas);\n  } else if (drawing instanceof HTMLCanvasElement) {\n    drawing = DrawingCanvas(drawing);\n  } else if (!drawing || typeof drawing != 'object' || !drawing.init) {\n    throw new Error('bwipjs: not a canvas or drawing object');\n  }\n  return _Render(encoder, opts, drawing);\n}\n\n// bwipjs.toSVG(options)\n//\n// Uses the built-in svg drawing interface.\n//\n// `options` are a bwip-js/BWIPP options object.\n//\n// This function is synchronous and throws on error.\n//\n// Returns a string containing a fully qualified SVG definition,\n// including the natural width and height of the image, in pixels:\n//\n//  <svg viewBox=\"0 0 242 200\" xmlns=\"http://www.w3.org/2000/svg\">\n//   ...\n//  </svg>\n//\n// Available on all platforms.\nfunction ToSVG(opts) {\n  return _Render(bwipp_lookup(opts.bcid), opts, DrawingSVG());\n}\nfunction FixupOptions(opts) {\n  var scale = opts.scale || 2;\n  var scaleX = +opts.scaleX || scale;\n  var scaleY = +opts.scaleY || scaleX;\n\n  // Fix up padding.\n  opts.paddingleft = padding(opts.paddingleft, opts.paddingwidth, opts.padding, scaleX);\n  opts.paddingright = padding(opts.paddingright, opts.paddingwidth, opts.padding, scaleX);\n  opts.paddingtop = padding(opts.paddingtop, opts.paddingheight, opts.padding, scaleY);\n  opts.paddingbottom = padding(opts.paddingbottom, opts.paddingheight, opts.padding, scaleY);\n\n  // We override BWIPP's background color functionality.  If in CMYK, convert to RRGGBB so\n  // the drawing interface is consistent.  Likewise, if in CSS-style #rgb or #rrggbb.\n  if (opts.backgroundcolor) {\n    var bgc = '' + opts.backgroundcolor;\n    if (/^[0-9a-fA-F]{8}$/.test(bgc)) {\n      var c = parseInt(bgc.substr(0, 2), 16) / 255;\n      var m = parseInt(bgc.substr(2, 2), 16) / 255;\n      var y = parseInt(bgc.substr(4, 2), 16) / 255;\n      var k = parseInt(bgc.substr(6, 2), 16) / 255;\n      var r = Math.floor((1 - c) * (1 - k) * 255).toString(16);\n      var g = Math.floor((1 - m) * (1 - k) * 255).toString(16);\n      var b = Math.floor((1 - y) * (1 - k) * 255).toString(16);\n      opts.backgroundcolor = (r.length == 1 ? '0' : '') + r + (g.length == 1 ? '0' : '') + g + (b.length == 1 ? '0' : '') + b;\n    } else {\n      if (bgc[0] == '#') {\n        bgc = bgc.substr(1);\n      }\n      if (/^[0-9a-fA-F]{6}$/.test(bgc)) {\n        opts.backgroundcolor = bgc;\n      } else if (/^[0-9a-fA-F]{3}$/.test(bgc)) {\n        opts.backgroundcolor = bgc[0] + bgc[0] + bgc[1] + bgc[1] + bgc[2] + bgc[2];\n      } else {\n        throw new Error('bwip-js: invalid backgroundcolor: ' + opts.backgroundcolor);\n      }\n    }\n  }\n  return opts;\n  function padding(a, b, c, s) {\n    if (a != null) {\n      return a * s;\n    }\n    if (b != null) {\n      return b * s;\n    }\n    return c * s || 0;\n  }\n}\nvar BWIPJS_OPTIONS = {\n  bcid: 1,\n  text: 1,\n  scale: 1,\n  scaleX: 1,\n  scaleY: 1,\n  rotate: 1,\n  padding: 1,\n  paddingwidth: 1,\n  paddingheight: 1,\n  paddingtop: 1,\n  paddingleft: 1,\n  paddingright: 1,\n  paddingbottom: 1,\n  backgroundcolor: 1\n};\n\n// bwipjs.render(options, drawing)\n//\n// Renders a barcode using the provided drawing object.\n//\n// This function is synchronous and throws on error.\n//\n// Browser and nodejs usage.\nfunction Render(options, drawing) {\n  return _Render(bwipp_lookup(options.bcid), options, drawing);\n}\n\n// Called by the public exports\nfunction _Render(encoder, options, drawing) {\n  var text = options.text;\n  if (!text) {\n    throw new ReferenceError('bwip-js: bar code text not specified.');\n  }\n\n  // setopts() is optional on the drawing object.\n  FixupOptions(options);\n  drawing.setopts && drawing.setopts(options);\n\n  // Set the bwip-js defaults\n  var scale = options.scale || 2;\n  var scaleX = +options.scaleX || scale;\n  var scaleY = +options.scaleY || scaleX;\n  var rotate = options.rotate || 'N';\n\n  // Create a barcode writer object.  This is the interface between\n  // the low-level BWIPP code, the bwip-js graphics context, and the\n  // drawing interface.\n  var bw = new BWIPJS(drawing);\n\n  // Set the BWIPP options\n  var bwippopts = {};\n  for (var id in options) {\n    if (!BWIPJS_OPTIONS[id]) {\n      bwippopts[id] = options[id];\n    }\n  }\n\n  // Fix a disconnect in the BWIPP rendering logic\n  if (bwippopts.alttext) {\n    bwippopts.includetext = true;\n  }\n  // We use mm rather than inches for height - except pharmacode2 height\n  // which is already in mm.\n  if (+bwippopts.height && encoder != bwipp_pharmacode2) {\n    bwippopts.height = bwippopts.height / 25.4 || 0.5;\n  }\n  // Likewise, width\n  if (+bwippopts.width) {\n    bwippopts.width = bwippopts.width / 25.4 || 0;\n  }\n\n  // Scale the image\n  bw.scale(scaleX, scaleY);\n\n  // Call into the BWIPP cross-compiled code and render the image.\n  bwipp_encode(bw, encoder, text, bwippopts);\n\n  // Returns whatever drawing.end() returns, or `false` if nothing rendered.\n  return bw.render();\n}\n\n// bwipjs.raw(options)\n// bwipjs.raw(bcid, text, opts-string)\n//\n// Invokes the low level BWIPP code and returns the raw encoding data.\n//\n// This function is synchronous and throws on error.\n//\n// Browser and nodejs usage.\nfunction ToRaw(bcid, text, options) {\n  if (arguments.length == 1) {\n    options = bcid;\n    bcid = options.bcid;\n    text = options.text;\n  }\n\n  // The drawing interface is just needed for the pre-init() calls.\n  // Don't need to fixup the options - drawing specific.\n  var drawing = DrawingBuiltin();\n  drawing.setopts(options);\n  var bw = new BWIPJS(drawing);\n  var stack = bwipp_encode(bw, bwipp_lookup(bcid), text, options, true);\n\n  // bwip-js uses Maps to emulate PostScript dictionary objects; but Maps\n  // are not a typical/expected return value.  Convert to plain-old-objects.\n  var ids = {\n    pixs: 1,\n    pixx: 1,\n    pixy: 1,\n    sbs: 1,\n    bbs: 1,\n    bhs: 1,\n    width: 1,\n    height: 1\n  };\n  for (var i = 0; i < stack.length; i++) {\n    var elt = stack[i];\n    if (elt instanceof Map) {\n      var obj = {};\n      // Could they make Maps any harder to iterate over???\n      for (var keys = elt.keys(), size = elt.size, k = 0; k < size; k++) {\n        var id = keys.next().value;\n        if (ids[id]) {\n          var val = elt.get(id);\n          if (val instanceof Array) {\n            // The postscript arrays have extra named properties\n            // to emulate array views.  Return cleaned up arrays.\n            obj[id] = val.b.slice(val.o, val.o + val.length);\n          } else {\n            obj[id] = val;\n          }\n        }\n      }\n      stack[i] = obj;\n    } else {\n      // This should never exec...\n      stack.splice(i--, 1);\n    }\n  }\n  return stack;\n}\n// file : bwipjs.js\n//\n// Graphics-context interface to the BWIPP cross-compiled code\n\nvar BWIPJS = function () {\n  // Math.floor(), etc. are notoriously slow.  Caching seems to help.\n  var floor = Math.floor;\n  var round = Math.round;\n  var ceil = Math.ceil;\n  var min = Math.min;\n  var max = Math.max;\n  function BWIPJS(drawing) {\n    if (this.constructor !== BWIPJS) {\n      return new BWIPJS(drawing);\n    }\n    this.gstk = []; // Graphics save/restore stack\n    this.cmds = []; // Graphics primitives to replay when rendering\n    this.drawing = drawing; // Drawing interface\n\n    this.reset();\n\n    // Drawing surface bounding box\n    this.minx = this.miny = Infinity;\n    this.maxx = this.maxy = -Infinity;\n  }\n  ;\n\n  // All graphics state that must be saved/restored is given a prefix of g_\n  BWIPJS.prototype.reset = function () {\n    // Current Transform Matrix - since we don't do rotation, we can fake\n    // the matrix math\n    this.g_tdx = 0; // CTM x-offset\n    this.g_tdy = 0; // CTM y-offset\n    this.g_tsx = 1; // CTM x-scale factor\n    this.g_tsy = 1; // CTM y-scale factor\n\n    this.g_posx = 0; // current x position\n    this.g_posy = 0; // current y position\n    this.g_penw = 1; // current line/pen width\n    this.g_path = []; // current path\n    this.g_font = null; // current font object\n    this.g_rgb = [0, 0, 0]; // current color (black)\n    this.g_clip = false; // clip region active\n  };\n  BWIPJS.prototype.save = function () {\n    // clone all g_ properties\n    var ctx = {};\n    for (var id in this) {\n      if (id.indexOf('g_') == 0) {\n        ctx[id] = clone(this[id]);\n      }\n    }\n    this.gstk.push(ctx);\n\n    // Perform a deep clone of the graphics state properties\n    function clone(v) {\n      if (v instanceof Array) {\n        var t = [];\n        for (var i = 0; i < v.length; i++) t[i] = clone(v[i]);\n        return t;\n      }\n      if (v instanceof Object) {\n        var t = {};\n        for (var id in v) t[id] = clone(v[id]);\n        return t;\n      }\n      return v;\n    }\n  };\n  BWIPJS.prototype.restore = function () {\n    if (!this.gstk.length) {\n      throw new Error('grestore: stack underflow');\n    }\n    var ctx = this.gstk.pop();\n    var self = this;\n    if (this.g_clip && !ctx.g_clip) {\n      this.cmds.push(function () {\n        self.drawing.unclip();\n      });\n    }\n    for (var id in ctx) {\n      this[id] = ctx[id];\n    }\n  };\n  // Per the postscript spec:\n  //  As discussed in Section 4.4.1, Current Path, points entered into a path\n  //  are immediately converted to device coordinates by the current\n  //  transformation matrix (CTM); subsequent modifications to the CTM do not\n  //  affect existing points.  `currentpoint` computes the user space\n  //  coordinates corresponding to the current point according to the current\n  //  value of the CTM. Thus, if a current point is set and then the CTM is\n  //  changed, the coordinates returned by currentpoint will be different\n  //  from those that were originally specified for the point. \n  BWIPJS.prototype.currpos = function () {\n    return {\n      x: (this.g_posx - this.g_tdx) / this.g_tsx,\n      y: (this.g_posy - this.g_tdy) / this.g_tsy\n    };\n  };\n  BWIPJS.prototype.currfont = function () {\n    return this.g_font;\n  };\n  BWIPJS.prototype.translate = function (x, y) {\n    this.g_tdx = this.g_tsx * x;\n    this.g_tdy = this.g_tsy * y;\n  };\n  BWIPJS.prototype.scale = function (x, y) {\n    this.g_tsx *= x;\n    this.g_tsy *= y;\n    var sxy = this.drawing.scale(this.g_tsx, this.g_tsy);\n    if (sxy && sxy[0] && sxy[1]) {\n      this.g_tsx = sxy[0];\n      this.g_tsy = sxy[1];\n    }\n  };\n  BWIPJS.prototype.setlinewidth = function (w) {\n    this.g_penw = w;\n  };\n  BWIPJS.prototype.selectfont = function (f, z) {\n    this.g_font = {\n      FontName: this.jsstring(f),\n      FontSize: +z\n    };\n  };\n  BWIPJS.prototype.getfont = function () {\n    return this.g_font.FontName;\n  };\n  // Special function for converting a Uint8Array string to string.\n  BWIPJS.prototype.jsstring = function (s) {\n    if (s instanceof Uint8Array) {\n      // Postscript (like C) treats nul-char as end of string.\n      //for (var i = 0, l = s.length; i < l && s[i]; i++);\n      //if (i < l) {\n      //  return String.fromCharCode.apply(null,s.subarray(0, i));\n      //}\n      return String.fromCharCode.apply(null, s);\n    }\n    return '' + s;\n  };\n  // Special function to replace setanycolor in BWIPP.\n  // Converts a string of hex digits either rgb, rrggbb or ccmmyykk.\n  // Or CSS-style #rgb and #rrggbb.\n  BWIPJS.prototype.setcolor = function (s) {\n    if (s instanceof Uint8Array) {\n      s = this.jsstring(s);\n    }\n    if (!s) {\n      return;\n    }\n    if (!/^(?:#?[0-9a-fA-F]{3}(?:[0-9a-fA-F]{3})?|[0-9a-fA-F]{8})$/.test(s)) {\n      throw new Error('bwip-js: invalid color: ' + s);\n    }\n    if (s[0] == '#') {\n      s = s.substr(1);\n    }\n    if (s.length == 3) {\n      var r = parseInt(s[0], 16);\n      var g = parseInt(s[1], 16);\n      var b = parseInt(s[2], 16);\n      this.g_rgb = [r << 4 | r, g << 4 | g, b << 4 | b];\n    } else if (s.length == 6) {\n      var r = parseInt(s.substr(0, 2), 16);\n      var g = parseInt(s.substr(2, 2), 16);\n      var b = parseInt(s.substr(4, 2), 16);\n      this.g_rgb = [r, g, b];\n    } else {\n      var c = parseInt(s.substr(0, 2), 16) / 255;\n      var m = parseInt(s.substr(2, 2), 16) / 255;\n      var y = parseInt(s.substr(4, 2), 16) / 255;\n      var k = parseInt(s.substr(6, 2), 16) / 255;\n      var r = round((1 - c) * (1 - k) * 255);\n      var g = round((1 - m) * (1 - k) * 255);\n      var b = round((1 - y) * (1 - k) * 255);\n      this.g_rgb = [r, g, b];\n    }\n  };\n  // Used only by swissqrcode\n  BWIPJS.prototype.setrgbcolor = function (r, g, b) {\n    this.g_rgb = [r, g, b];\n  };\n  // Returns the current rgb values as a 'RRGGBB'\n  BWIPJS.prototype.getRGB = function () {\n    var r = this.g_rgb[0].toString(16);\n    var g = this.g_rgb[1].toString(16);\n    var b = this.g_rgb[2].toString(16);\n    return '00'.substr(r.length) + r + '00'.substr(g.length) + g + '00'.substr(b.length) + b;\n  };\n  BWIPJS.prototype.newpath = function () {\n    this.g_path = [];\n  };\n  BWIPJS.prototype.closepath = function () {\n    var path = this.g_path;\n    var plen = path.length;\n    if (!plen) return;\n    var f = plen - 1;\n    for (; f >= 0 && path[f].op == 'l'; f--);\n    f++;\n    if (f < plen - 1) {\n      var poly = [];\n      var xmin = Infinity;\n      var ymin = Infinity;\n      var xmax = -Infinity;\n      var ymax = -Infinity;\n      for (var i = f; i < plen; i++) {\n        var a = path[i];\n        poly.push([a.x0, a.y0]);\n        if (xmin > a.x0) xmin = a.x0;\n        if (xmax < a.x0) xmax = a.x0;\n        if (ymin > a.y0) ymin = a.y0;\n        if (ymax < a.y0) ymax = a.y0;\n      }\n      var a = path[plen - 1];\n      var b = path[f];\n      if (a.x1 != b.x0 || a.y1 != b.y0) {\n        poly.push([a.x1, a.y1]);\n        if (xmin > a.x1) xmin = a.x1;\n        if (xmax < a.x1) xmax = a.x1;\n        if (ymin > a.y1) ymin = a.y1;\n        if (ymax < a.y1) ymax = a.y1;\n      }\n      path.splice(f, plen - f, {\n        op: 'p',\n        x0: xmin,\n        y0: ymin,\n        x1: xmax,\n        y1: ymax,\n        poly: poly\n      });\n    } else {\n      path.push({\n        op: 'c'\n      });\n    }\n  };\n  BWIPJS.prototype.moveto = function (x, y) {\n    this.g_posx = this.g_tdx + this.g_tsx * x;\n    this.g_posy = this.g_tdy + this.g_tsy * y;\n  };\n  BWIPJS.prototype.rmoveto = function (x, y) {\n    this.g_posx += this.g_tsx * x;\n    this.g_posy += this.g_tsy * y;\n  };\n  BWIPJS.prototype.lineto = function (x, y) {\n    var x0 = round(this.g_posx);\n    var y0 = round(this.g_posy);\n    this.g_posx = this.g_tdx + this.g_tsx * x;\n    this.g_posy = this.g_tdy + this.g_tsy * y;\n    var x1 = round(this.g_posx);\n    var y1 = round(this.g_posy);\n    this.g_path.push({\n      op: 'l',\n      x0: x0,\n      y0: y0,\n      x1: x1,\n      y1: y1\n    });\n  };\n  BWIPJS.prototype.rlineto = function (x, y) {\n    var x0 = round(this.g_posx);\n    var y0 = round(this.g_posy);\n    this.g_posx += this.g_tsx * x;\n    this.g_posy += this.g_tsy * y;\n    var x1 = round(this.g_posx);\n    var y1 = round(this.g_posy);\n    this.g_path.push({\n      op: 'l',\n      x0: x0,\n      y0: y0,\n      x1: x1,\n      y1: y1\n    });\n  };\n  // implements both arc and arcn\n  BWIPJS.prototype.arc = function (x, y, r, sa, ea, ccw) {\n    if (sa == ea) {\n      return;\n    }\n    // For now, we only implement full circles...\n    if (sa != 0 && sa != 360 || ea != 0 && ea != 360) {\n      throw new Error('arc: not a full circle (' + sa + ',' + ea + ')');\n    }\n    x = this.g_tdx + this.g_tsx * x;\n    y = this.g_tdy + this.g_tsy * y;\n\n    // e == ellipse\n    var rx = r * this.g_tsx;\n    var ry = r * this.g_tsy;\n    this.g_path.push({\n      op: 'e',\n      x0: x - rx,\n      y0: y - ry,\n      x1: x + rx,\n      y1: y + ry,\n      x: x,\n      y: y,\n      rx: rx,\n      ry: ry,\n      sa: sa,\n      ea: ea,\n      ccw: ccw\n    });\n  };\n  BWIPJS.prototype.stringwidth = function (str) {\n    var tsx = this.g_tsx;\n    var tsy = this.g_tsy;\n    var size = +this.g_font.FontSize || 10;\n\n    // The string can be either a uint8-string or regular string\n    str = this.toUCS2(this.jsstring(str));\n    var bbox = this.drawing.measure(str, this.g_font.FontName, size * tsx, size * tsy);\n    return {\n      w: bbox.width / tsx,\n      h: (bbox.ascent + bbox.descent) / tsy,\n      a: bbox.ascent / tsy,\n      d: bbox.descent / tsy\n    };\n  };\n  BWIPJS.prototype.charpath = function (str, b) {\n    var sw = this.stringwidth(str);\n\n    // Emulate the char-path by placing a rectangle around it\n    this.rlineto(0, sw.a);\n    this.rlineto(sw.w, 0);\n    this.rlineto(0, -sw.h);\n  };\n  BWIPJS.prototype.pathbbox = function () {\n    if (!this.g_path.length) throw new Error('pathbbox: --nocurrentpoint--');\n    var path = this.g_path;\n    var llx = Infinity;\n    var lly = Infinity;\n    var urx = -Infinity;\n    var ury = -Infinity;\n    for (var i = 0; i < path.length; i++) {\n      var a = path[i];\n      if (a.op == 'c') {\n        continue;\n      }\n      if (a.x0 < a.x1) {\n        if (llx > a.x0) llx = a.x0;\n        if (urx < a.x1) urx = a.x1;\n      } else {\n        if (llx > a.x1) llx = a.x1;\n        if (urx < a.x0) urx = a.x0;\n      }\n      if (a.y0 < a.y1) {\n        if (lly > a.y0) lly = a.y0;\n        if (ury < a.y1) ury = a.y1;\n      } else {\n        if (lly > a.y1) lly = a.y1;\n        if (ury < a.y0) ury = a.y0;\n      }\n    }\n\n    // Convert to user-space coordinates\n    var rv = {\n      llx: (llx - this.g_tdx) / this.g_tsx,\n      lly: (lly - this.g_tdy) / this.g_tsy,\n      urx: (urx - this.g_tdx) / this.g_tsx,\n      ury: (ury - this.g_tdy) / this.g_tsy\n    };\n    return rv;\n  };\n  // Tranforms the pts array to standard (not y-inverted), unscalled values.\n  BWIPJS.prototype.transform = function (pts) {\n    var minx = this.minx;\n    var maxy = this.maxy;\n    for (var i = 0; i < pts.length; i++) {\n      var pt = pts[i];\n      pt[0] = pt[0] - minx;\n      pt[1] = maxy - pt[1];\n    }\n  };\n  BWIPJS.prototype.stroke = function () {\n    var tsx = this.g_tsx;\n    var tsy = this.g_tsy;\n    var path = this.g_path;\n    var rgb = this.getRGB();\n    this.g_path = [];\n\n    // This is a \"super majority\" round i.e. if over .66 round up.\n    var penw = floor(this.g_penw * tsx + 0.66);\n    var penh = floor(this.g_penw * tsy + 0.66);\n\n    // Calculate the bounding boxes\n    var nlines = 0,\n      npolys = 0;\n    for (var i = 0; i < path.length; i++) {\n      var a = path[i];\n      if (a.op == 'l') {\n        // We only stroke vertical and horizontal lines.  Complex shapes are\n        // always filled.\n        if (a.x0 != a.x1 && a.y0 != a.y1) {\n          throw new Error('stroke: --not-orthogonal--');\n        }\n        var x0 = a.x0;\n        var y0 = a.y0;\n        var x1 = a.x1;\n        var y1 = a.y1;\n\n        // Half widths (may be factional)\n        var penw2 = penw / 2;\n        var penh2 = penh / 2;\n        if (x0 > x1) {\n          var t = x0;\n          x0 = x1;\n          x1 = t;\n        }\n        if (y0 > y1) {\n          var t = y0;\n          y0 = y1;\n          y1 = t;\n        }\n        if (x0 == x1) {\n          this.bbox(x0 - penw2, y0, x0 + penw - penw2 - 1, y1); // vertical line\n        } else {\n          this.bbox(x0, y0 - penh + penh2 + 1, x1, y1 + penh2); // horizontal line\n        }\n        nlines++;\n      } else if (a.op == 'p') {\n        // Closed (rectangular) poly (border around the barcode)\n        var minx = Infinity;\n        var miny = Infinity;\n        var maxx = -Infinity;\n        var maxy = -Infinity;\n        var pts = a.poly;\n        if (pts.length != 4) {\n          throw new Error('stroke: --not-a-rect--');\n        }\n        for (var i = 0, j = pts.length - 1; i < pts.length; j = i++) {\n          var xj = pts[j][0];\n          var yj = pts[j][1];\n          var xi = pts[i][0];\n          var yi = pts[i][1];\n          if (xi != xj && yi != yj) {\n            throw new Error('stroke: --not-orthogonal--');\n          }\n          if (xi < minx) minx = xi;\n          if (xi > maxx) maxx = xi;\n          if (yi < miny) miny = yi;\n          if (yi > maxy) maxy = yi;\n        }\n\n        // Half widths (integer)\n        var penw2 = ceil(penw / 2);\n        var penh2 = ceil(penh / 2);\n\n        // We render these as two polygons plus a fill.\n        // When border width is odd, allocate the bigger half to the outside.\n        this.bbox(minx - penw2, miny - penh2, maxx + penw2, maxy + penh2);\n        npolys++;\n      } else {\n        throw new Error('stroke: --not-a-line--');\n      }\n    }\n\n    // Draw the lines\n    var self = this;\n    this.cmds.push(function () {\n      // Half widths (big half and remaining half)\n      var bigw2 = ceil(penw / 2);\n      var bigh2 = ceil(penh / 2);\n      var remw2 = penw - bigw2;\n      var remh2 = penh - bigh2;\n      for (var i = 0; i < path.length; i++) {\n        var a = path[i];\n        if (a.op == 'l') {\n          var pts = [[a.x0, a.y0], [a.x1, a.y1]];\n          self.transform(pts);\n          self.drawing.line(pts[0][0], pts[0][1], pts[1][0], pts[1][1], a.x0 == a.x1 ? penw : penh, rgb);\n          self.fill(rgb);\n        } else {\n          var pts = a.poly;\n          self.transform(pts);\n          var x0 = min(pts[0][0], pts[2][0]);\n          var x1 = max(pts[0][0], pts[2][0]);\n          var y0 = min(pts[0][1], pts[2][1]);\n          var y1 = max(pts[0][1], pts[2][1]);\n\n          // Top and left edges are \"inside\" the polygon.\n          // Bottom and right edges are outside.\n          self.drawing.polygon([[x0 - bigw2, y0 - bigh2], [x0 - bigw2, y1 + bigh2 + 1], [x1 + bigw2 + 1, y1 + bigh2 + 1], [x1 + bigw2 + 1, y0 - bigh2]]);\n          self.drawing.polygon([[x0 + remw2, y0 + remh2], [x0 + remw2, y1 - remh2 + 1], [x1 - remw2 + 1, y1 - remh2 + 1], [x1 - remw2 + 1, y0 + remh2]]);\n          self.drawing.fill(rgb);\n        }\n      }\n    });\n  };\n  BWIPJS.prototype.fill = function () {\n    var path = this.g_path;\n    var rgb = this.getRGB();\n    this.g_path = [];\n\n    // Calculate the bounding boxes\n    for (var p = 0; p < path.length; p++) {\n      var a = path[p];\n      if (a.op == 'p') {\n        // polygon\n        var minx = Infinity;\n        var miny = Infinity;\n        var maxx = -Infinity;\n        var maxy = -Infinity;\n        var pts = a.poly;\n        for (var i = 0; i < pts.length; i++) {\n          var xi = pts[i][0];\n          var yi = pts[i][1];\n          if (xi < minx) minx = xi;\n          if (xi > maxx) maxx = xi;\n          if (yi < miny) miny = yi;\n          if (yi > maxy) maxy = yi;\n        }\n        // With polygons, the right and bottom edges are \"outside\" and do not\n        // contribute to the bounding box.  But we are in postscript inverted-y\n        // mode.\n        this.bbox(minx, miny + 1, maxx - 1, maxy);\n      } else if (a.op == 'e') {\n        // ellipse\n        this.bbox(a.x - a.rx, a.y - a.ry, a.x + a.rx, a.y + a.ry);\n      } else {\n        throw new Error('fill: --not-a-polygon--');\n      }\n    }\n\n    // Render the poly\n    var self = this;\n    this.cmds.push(function () {\n      for (var i = 0; i < path.length; i++) {\n        var a = path[i];\n        if (a.op == 'p') {\n          var pts = a.poly;\n          self.transform(pts);\n          self.drawing.polygon(pts);\n        } else if (a.op == 'e') {\n          var pts = [[a.x, a.y]];\n          self.transform(pts);\n          self.drawing.ellipse(pts[0][0], pts[0][1], a.rx, a.ry, a.ccw);\n        }\n      }\n      self.drawing.fill(rgb);\n    });\n  };\n  BWIPJS.prototype.clip = function () {\n    var path = this.g_path;\n    this.g_path = [];\n    this.g_clip = true;\n    var self = this;\n    this.cmds.push(function () {\n      var polys = [];\n      for (var i = 0; i < path.length; i++) {\n        var a = path[i];\n        if (a.op == 'p') {\n          var pts = a.poly;\n          self.transform(pts);\n          polys.push(pts);\n        } else {\n          throw new Error('clip: only polygon regions supported');\n        }\n      }\n      self.drawing.clip(polys);\n    });\n  };\n\n  // The pix array is in standard (not y-inverted postscript) orientation.\n  BWIPJS.prototype.maxicode = function (pix) {\n    var tsx = this.g_tsx;\n    var tsy = this.g_tsy;\n    var rgb = this.getRGB();\n\n    // Module width.  Module height is an integer multiple of tsy.\n    var twidth = 1.04 * tsx * 100;\n    var mwidth = twidth / 30 | 0;\n    if (twidth - (mwidth * 30 - 1) > 9) {\n      mwidth++;\n    }\n\n    // Dimensions needed for plotting the hexagons.  These must be integer values.\n    var w, h, wgap, hgap;\n    // if (opts.??? ) {\n    //  // Create a one or two pixel gap\n    //  wgap = (mwidth & 1) ? 1 : 2;\n    //  hgap = 1;\n    //  w = mwidth - gap;\n    //  h = 4 * tsy;\n    // } else {\n    // Create a 1/8mm gap\n    wgap = tsx / 2 | 0;\n    hgap = tsy / 2 | 0;\n    w = mwidth - wgap;\n    if (w & 1) {\n      w--;\n    }\n    h = (4 * tsy | 0) - hgap;\n    //}\n\n    // These must be integer values\n    var w2 = w / 2 - 1; // half width\n    var qh = (w2 + 1) / 2 | 0; // quarter height\n    var vh = h - 2 - 2 * qh; // side height\n\n    // Bounding box\n    this.bbox(0, 0, mwidth * 30 - wgap, tsy * 3 * 32 + tsy * 4 - hgap);\n\n    // Render the elements\n    var self = this;\n    this.cmds.push(function () {\n      // Draw the hexagons\n      for (var i = 0; i < pix.length; i++) {\n        var c = pix[i];\n        var x = c % 30;\n        var y = c / 30 | 0;\n\n        // Adjust x,y to the top of hexagon\n        x *= mwidth;\n        x += y & 1 ? mwidth : mwidth / 2;\n        x = x | 0;\n        y = 33 - y; // invert for postscript notation\n        y *= tsy * 3;\n        y += tsy * 2 - h / 2;\n        y = y | 0;\n\n        // Build bottom up so the drawing is top-down.\n        var pts = [[x - 0.5, y--]];\n        y -= qh - 1;\n        pts.push([x - 1 - w2, y--]);\n        y -= vh;\n        pts.push([x - 1 - w2, y--]);\n        y -= qh - 1;\n        pts.push([x - 0.5, y++]);\n        y += qh - 1;\n        pts.push([x + w2, y++]);\n        y += vh;\n        pts.push([x + w2, y++]);\n        self.transform(pts);\n        self.drawing.hexagon(pts, rgb);\n      }\n      self.drawing.fill(rgb);\n\n      // Draw the rings\n      var x = 14 * mwidth + mwidth / 2 + 0.01 | 0;\n      var y = (12 * 4 + 3) * tsy - qh / 2 + 0.01 | 0;\n      self.drawing.ellipse(x, y, 0.5774 * 3.5 * tsx + 0.01 | 0, 0.5774 * 3.5 * tsy + 0.01 | 0, true);\n      self.drawing.ellipse(x, y, 1.3359 * 3.5 * tsx + 0.01 | 0, 1.3359 * 3.5 * tsy + 0.01 | 0, false);\n      self.drawing.fill(rgb);\n      self.drawing.ellipse(x, y, 2.1058 * 3.5 * tsx + 0.01 | 0, 2.1058 * 3.5 * tsy + 0.01 | 0, true);\n      self.drawing.ellipse(x, y, 2.8644 * 3.5 * tsx + 0.01 | 0, 2.8644 * 3.5 * tsy + 0.01 | 0, false);\n      self.drawing.fill(rgb);\n      self.drawing.ellipse(x, y, 3.6229 * 3.5 * tsx + 0.01 | 0, 3.6229 * 3.5 * tsy + 0.01 | 0, true);\n      self.drawing.ellipse(x, y, 4.3814 * 3.5 * tsx + 0.01 | 0, 4.3814 * 3.5 * tsy + 0.01 | 0, false);\n      self.drawing.fill(rgb);\n    });\n  };\n  // UTF-8 to UCS-2 (no surrogates)\n  BWIPJS.prototype.toUCS2 = function (str) {\n    return str.replace(/[\\xc0-\\xdf][\\x80-\\xbf]|[\\xe0-\\xff][\\x80-\\xbf]{2}/g, function (s) {\n      var code;\n      if (s.length == 2) {\n        code = (s.charCodeAt(0) & 0x1f) << 6 | s.charCodeAt(1) & 0x3f;\n      } else {\n        code = (s.charCodeAt(0) & 0x0f) << 12 | (s.charCodeAt(1) & 0x3f) << 6 | s.charCodeAt(2) & 0x3f;\n      }\n      return String.fromCharCode(code);\n    });\n  };\n  // dx,dy are inter-character gaps\n  BWIPJS.prototype.show = function (str, dx, dy) {\n    if (!str.length) {\n      return;\n    }\n\n    // Capture current graphics state\n    var tsx = this.g_tsx;\n    var tsy = this.g_tsy;\n    var name = this.g_font.FontName || 'OCR-B';\n    var size = this.g_font.FontSize || 10;\n    var szx = size * tsx;\n    var szy = size * tsy;\n    var posx = this.g_posx;\n    var posy = this.g_posy;\n    var rgb = this.getRGB();\n\n    // The string can be either a uint8-string or regular string.\n    str = this.toUCS2(this.jsstring(str));\n\n    // Convert dx,dy to device space\n    dx = tsx * dx || 0;\n    dy = tsy * dy || 0;\n\n    // Bounding box.\n    var base = posy + dy;\n    var bbox = this.drawing.measure(str, name, szx, szy);\n    var width = bbox.width + (str.length - 1) * dx;\n    this.bbox(posx, base - bbox.descent + 1, posx + width - 1, base + bbox.ascent);\n    this.g_posx += width;\n    var self = this;\n    self.cmds.push(function () {\n      // self.transform()\n      var x = posx - self.minx;\n      var y = self.maxy - posy;\n      self.drawing.text(x, y, str, rgb, {\n        name: name,\n        width: szx,\n        height: szy,\n        dx: dx\n      });\n    });\n  };\n  // drawing surface bounding box\n  BWIPJS.prototype.bbox = function (x0, y0, x1, y1) {\n    if (x0 > x1) {\n      var t = x0;\n      x0 = x1;\n      x1 = t;\n    }\n    if (y0 > y1) {\n      var t = y0;\n      y0 = y1;\n      y1 = t;\n    }\n    x0 = floor(x0);\n    y0 = floor(y0);\n    x1 = ceil(x1);\n    y1 = ceil(y1);\n    if (this.minx > x0) this.minx = x0;\n    if (this.maxx < x1) this.maxx = x1;\n    if (this.miny > y0) this.miny = y0;\n    if (this.maxy < y1) this.maxy = y1;\n  };\n  BWIPJS.prototype.render = function () {\n    if (this.minx === Infinity) {\n      // Most likely, `dontdraw` was set in the options\n      return false;\n    }\n    // Draw the image\n    this.drawing.init(this.maxx - this.minx + 1, this.maxy - this.miny + 1, this.g_tsx, this.g_tsy);\n    for (var i = 0, l = this.cmds.length; i < l; i++) {\n      this.cmds[i]();\n    }\n    return this.drawing.end();\n  };\n  return BWIPJS;\n}(); // BWIPJS closure\n// drawing-builtin.js\n//\n// The aliased (except the fonts) graphics used by drawing-canvas.js and\n// drawing-zlibpng.js\n//\n// All x,y and lengths are integer values.\n//\n// For the methods that take a color `rgb` parameter, the value is always a\n// string with format RRGGBB.\nfunction DrawingBuiltin() {\n  var floor = Math.floor;\n\n  // Unrolled x,y rotate/translate matrix\n  var tx0 = 0,\n    tx1 = 0,\n    tx2 = 0,\n    tx3 = 0;\n  var ty0 = 0,\n    ty1 = 0,\n    ty2 = 0,\n    ty3 = 0;\n  var opts; // see setopts()\n  var gs_image, gs_rowbyte; // rowbyte will be 1 for png's, 0 for canvas\n  var gs_width, gs_height; // image size, in pixels\n  var gs_dx, gs_dy; // x,y translate (padding)\n  var gs_r, gs_g, gs_b; // rgb\n  var gs_xymap; // edge map\n  var gs_xyclip; // clip region map (similar to xymap)\n\n  return {\n    // setopts() is called after the options are fixed-up/normalized,\n    // but before calling into BWIPP.\n    // This method allows omitting the options in the constructor call.\n    // The method is optional.\n    setopts(options) {\n      opts = options;\n    },\n    // Ensure compliant bar codes by always using integer scaling factors.\n    scale: function (sx, sy) {\n      // swissqrcode requires clipping and drawing that are not scaled to the\n      // the barcode module size.\n      if (opts.bcid == 'swissqrcode') {\n        return [sx, sy];\n      } else {\n        return [sx | 0 || 1, sy | 0 || 1];\n      }\n    },\n    // Measure text.  This and scale() are the only drawing primitives that\n    // are called before init().\n    //\n    // `font` is the font name typically OCR-A or OCR-B.\n    // `fwidth` and `fheight` are the requested font cell size.  They will\n    // usually be the same, except when the scaling is not symetric.\n    measure: function (str, font, fwidth, fheight) {\n      fwidth = fwidth | 0;\n      fheight = fheight | 0;\n      var fontid = FontLib.lookup(font);\n      var width = 0;\n      var ascent = 0;\n      var descent = 0;\n      for (var i = 0, l = str.length; i < l; i++) {\n        var ch = str.charCodeAt(i);\n        var glyph = FontLib.getglyph(fontid, ch, fwidth, fheight);\n        ascent = Math.max(ascent, glyph.top);\n        descent = Math.max(descent, glyph.height - glyph.top);\n        if (i == l - 1) {\n          width += glyph.left + glyph.width;\n        } else {\n          width += glyph.advance;\n        }\n      }\n      return {\n        width: width,\n        ascent: ascent,\n        descent: descent\n      };\n    },\n    // width and height represent the maximum bounding box the graphics will occupy.\n    // The dimensions are for an unrotated rendering.  Adjust as necessary.\n    init: function (width, height) {\n      // Add in the effects of padding.  These are always set before the\n      // drawing constructor is called.\n      var padl = opts.paddingleft;\n      var padr = opts.paddingright;\n      var padt = opts.paddingtop;\n      var padb = opts.paddingbottom;\n      var rot = opts.rotate || 'N';\n      width += padl + padr;\n      height += padt + padb;\n      if (+opts.sizelimit && +opts.sizelimit < width * height) {\n        throw new Error('Image size over limit');\n      }\n\n      // Transform indexes are: x, y, w, h\n      switch (rot) {\n        // tx = w-y, ty = x\n        case 'R':\n          tx1 = -1;\n          tx2 = 1;\n          ty0 = 1;\n          break;\n        // tx = w-x, ty = h-y\n        case 'I':\n          tx0 = -1;\n          tx2 = 1;\n          ty1 = -1;\n          ty3 = 1;\n          break;\n        // tx = y, ty = h-x\n        case 'L':\n          tx1 = 1;\n          ty0 = -1;\n          ty3 = 1;\n          break;\n        // tx = x, ty = y\n        default:\n          tx0 = ty1 = 1;\n          break;\n      }\n\n      // Setup the graphics state\n      var swap = rot == 'L' || rot == 'R';\n      gs_width = swap ? height : width;\n      gs_height = swap ? width : height;\n      gs_dx = padl;\n      gs_dy = padt;\n      gs_xymap = [];\n      gs_xymap.min = Infinity;\n      gs_xyclip = null;\n      gs_r = gs_g = gs_b = 0;\n\n      // Get the rgba image from the constructor\n      var res = this.image(gs_width, gs_height);\n      gs_image = res.buffer;\n      gs_rowbyte = res.ispng ? 1 : 0;\n    },\n    // Unconnected stroked lines are used to draw the bars in linear barcodes;\n    // and the border around a linear barcode (e.g. ITF-14)\n    // No line cap should be applied.  These lines are always orthogonal.\n    line: function (x0, y0, x1, y1, lw, rgb) {\n      x0 = x0 | 0;\n      y0 = y0 | 0;\n      x1 = x1 | 0;\n      y1 = y1 | 0;\n\n      // Most linear barcodes, the line width will be integral.  The exceptions\n      // are variable width barcodes (e.g. code39) and the postal 4-state codes.\n      lw = Math.round(lw) || 1;\n      if (y1 < y0) {\n        var t = y0;\n        y0 = y1;\n        y1 = t;\n      }\n      if (x1 < x0) {\n        var t = x0;\n        x0 = x1;\n        x1 = t;\n      }\n      gs_r = parseInt(rgb.substr(0, 2), 16);\n      gs_g = parseInt(rgb.substr(2, 2), 16);\n      gs_b = parseInt(rgb.substr(4, 2), 16);\n\n      // Horizontal or vertical line?\n      var w2 = lw / 2 | 0;\n      if (x0 == x1) {\n        // Vertical line\n        x0 = x0 - lw + w2; // big half\n        x1 = x1 + w2 - 1; // small half\n      } else {\n        // Horizontal line (inverted halves)\n        y0 = y0 - w2;\n        y1 = y1 + lw - w2 - 1;\n      }\n      for (var y = y0; y <= y1; y++) {\n        for (var x = x0; x <= x1; x++) {\n          set(x, y, 255);\n        }\n      }\n    },\n    // Polygons are used to draw the connected regions in a 2d barcode.\n    // These will always be unstroked, filled, orthogonal shapes.\n    // \n    // You will see a series of polygon() calls, followed by a fill().\n    polygon: function (pts) {\n      var npts = pts.length;\n      for (var j = npts - 1, i = 0; i < npts; j = i++) {\n        if (pts[j][0] == pts[i][0]) {\n          // Vertical lines do not get their end points. End points\n          // are added by the horizontal line logic.\n          var xj = pts[j][0] | 0; // i or j, doesn't matter\n          var yj = pts[j][1] | 0;\n          var yi = pts[i][1] | 0;\n          if (yj > yi) {\n            for (var y = yi + 1; y < yj; y++) {\n              addPoint(xj, y);\n            }\n          } else {\n            for (var y = yj + 1; y < yi; y++) {\n              addPoint(xj, y);\n            }\n          }\n        } else {\n          var xj = pts[j][0] | 0;\n          var xi = pts[i][0] | 0;\n          var yj = pts[j][1] | 0; // i or j, doesn't matter\n\n          // Horizontal lines are tricky.  As a rule, top lines get filled,\n          // bottom lines do not (similar to how left edges get filled and\n          // right edges do not).\n          //\n          // Where it gets complex is deciding whether the line actually\n          // adds edges.  There are cases where a horizontal line does\n          // not add anything to the scanline plotting.  And it doesn't\n          // actually matter whether the line is a top or bottom edge,\n          // the logic is the same.\n          //\n          // A left edge is added if the edge to its left is below.\n          // A right edge is added if the edge to its right is below.\n          if (xj < xi) {\n            var yl = pts[j == 0 ? npts - 1 : j - 1][1]; // left edge\n            var yr = pts[i == npts - 1 ? 0 : i + 1][1]; // right edge\n            if (yl > yj) {\n              addPoint(xj, yj);\n            }\n            if (yr > yj) {\n              addPoint(xi, yj);\n            }\n          } else {\n            var yl = pts[i == npts - 1 ? 0 : i + 1][1]; // left edge\n            var yr = pts[j == 0 ? npts - 1 : j - 1][1]; // right edge\n            if (yl > yj) {\n              addPoint(xi, yj);\n            }\n            if (yr > yj) {\n              addPoint(xj, yj);\n            }\n          }\n        }\n      }\n    },\n    // An unstroked, filled hexagon used by maxicode.  You can choose to fill\n    // each individually, or wait for the final fill().\n    //\n    // The hexagon is drawn from the top, counter-clockwise.\n    //\n    // The X-coordinate for the top and bottom points on the hexagon is always\n    // .5 pixels.  We draw our hexagons with a 2 pixel flat top.\n    //\n    // All other points of the polygon/hexagon are guaranteed to be integer values.\n    hexagon: function (pts, rgb) {\n      var x = pts[0][0] | 0;\n      var y = pts[0][1] | 0;\n      var qh = pts[1][1] - pts[0][1] | 0; // height of triangle (quarter height)\n      var vh = pts[2][1] - pts[1][1] - 1 | 0; // height of vertical side\n      var xl = pts[2][0] | 0; // left side\n      var xr = pts[4][0] | 0; // right side\n\n      gs_r = parseInt(rgb.substr(0, 2), 16);\n      gs_g = parseInt(rgb.substr(2, 2), 16);\n      gs_b = parseInt(rgb.substr(4, 2), 16);\n      fillSegment(x, x + 1, y++);\n      for (var k = 1; k < qh; k++) {\n        fillSegment(x - 2 * k, x + 1 + 2 * k, y++);\n      }\n      for (var k = 0; k <= vh; k++) {\n        fillSegment(xl, xr, y++);\n      }\n      for (var k = qh - 1; k >= 1; k--) {\n        fillSegment(x - 2 * k, x + 1 + 2 * k, y++);\n      }\n      fillSegment(x, x + 1, y);\n    },\n    // An unstroked, filled ellipse.  Used by dotcode and maxicode at present.\n    // maxicode issues pairs of ellipse calls (one cw, one ccw) followed by a fill()\n    // to create the bullseye rings.  dotcode issues all of its ellipses then a\n    // fill().\n    ellipse: function (x, y, rx, ry, ccw) {\n      drawEllipse(x - rx | 0, y - ry | 0, x + rx | 0, y + ry | 0, ccw);\n    },\n    // PostScript's default fill rule is non-zero but since there are never\n    // intersecting regions, we use the easier to implement even-odd.\n    fill: function (rgb) {\n      gs_r = parseInt(rgb.substr(0, 2), 16);\n      gs_g = parseInt(rgb.substr(2, 2), 16);\n      gs_b = parseInt(rgb.substr(4, 2), 16);\n      evenodd();\n      gs_xymap = [];\n      gs_xymap.min = Infinity;\n    },\n    // Currently only used by swissqrcode.  The `polys` area is an array of\n    // arrays of points.  Each array of points is identical to the `pts`\n    // parameter passed to polygon().  The postscript default clipping rule,\n    // like the fill rule, is even-odd winding.\n    clip: function (polys) {\n      if (!gs_xyclip) {\n        gs_xyclip = [];\n        gs_xyclip.min = Infinity;\n      }\n      // Swap out the xymap for the clip map so addPoint() works on it.\n      var xymap = gs_xymap;\n      gs_xymap = gs_xyclip;\n\n      // Now just use the polygon() logic to fill in the clipping regions.\n      for (var i = 0, l = polys.length; i < l; i++) {\n        this.polygon(polys[i]);\n      }\n\n      // Restore\n      gs_xymap = xymap;\n    },\n    unclip: function () {\n      gs_xyclip = null;\n    },\n    // Draw text with optional inter-character spacing.  `y` is the baseline.\n    // font is an object with properties { name, width, height, dx }\n    // width and height are the font cell size.\n    // dx is extra space requested between characters (usually zero).\n    text: function (x, y, str, rgb, font) {\n      x = x | 0;\n      y = y | 0;\n      gs_r = parseInt(rgb.substr(0, 2), 16);\n      gs_g = parseInt(rgb.substr(2, 2), 16);\n      gs_b = parseInt(rgb.substr(4, 2), 16);\n      var fontid = FontLib.lookup(font.name);\n      var fwidth = font.width | 0;\n      var fheight = font.height | 0;\n      var dx = font.dx | 0;\n      for (var k = 0; k < str.length; k++) {\n        var ch = str.charCodeAt(k);\n        var glyph = FontLib.getglyph(fontid, ch, fwidth, fheight);\n        var gt = y - glyph.top;\n        var gl = glyph.left;\n        var gw = glyph.width;\n        var gh = glyph.height;\n        var gb = glyph.bytes;\n        var go = glyph.offset; // offset into bytes\n\n        for (var i = 0; i < gw; i++) {\n          for (var j = 0; j < gh; j++) {\n            var a = gb[go + j * gw + i];\n            if (a) {\n              set(x + gl + i, gt + j, a);\n            }\n          }\n        }\n        x += glyph.advance + dx;\n      }\n    },\n    // Called after all drawing is complete.\n    end: function () {}\n  };\n\n  // This code is specialized to deal with two types of RGBA buffers:\n  // - canvas style, which is true RGBA\n  // - PNG style, which has a one-byte \"filter code\" prefixing each row.\n  function set(x, y, a) {\n    if (gs_xyclip && clipped(x, y)) {\n      return;\n    }\n    // translate/rotate\n    x += gs_dx;\n    y += gs_dy;\n    var tx = tx0 * x + tx1 * y + tx2 * (gs_width - 1) + tx3 * (gs_height - 1);\n    var ty = ty0 * x + ty1 * y + ty2 * (gs_width - 1) + ty3 * (gs_height - 1);\n\n    // https://en.wikipedia.org/wiki/Alpha_compositing\n    var offs = (ty * gs_width + tx) * 4 + (ty + 1) * gs_rowbyte;\n    var dsta = gs_image[offs + 3] / 255;\n    var srca = a / 255;\n    var inva = (1 - srca) * dsta;\n    var outa = srca + inva;\n    gs_image[offs + 0] = (gs_r * srca + gs_image[offs + 0] * inva) / outa | 0;\n    gs_image[offs + 1] = (gs_g * srca + gs_image[offs + 1] * inva) / outa | 0;\n    gs_image[offs + 2] = (gs_b * srca + gs_image[offs + 2] * inva) / outa | 0;\n    gs_image[offs + 3] = 255 * outa | 0;\n  }\n\n  // Add a point on an edge to the scanline map.\n  function addPoint(x, y) {\n    if (gs_xymap.min > y) gs_xymap.min = y;\n    if (!gs_xymap[y]) {\n      gs_xymap[y] = [x];\n    } else {\n      gs_xymap[y].push(x);\n    }\n  }\n  function fillSegment(x0, x1, y) {\n    while (x0 <= x1) {\n      set(x0++, y, 255);\n    }\n  }\n\n  // even-odd fill\n  //\n  // This implementation is optimized for BWIPP's simple usage.\n  // It is not a general purpose scanline fill.  It relies heavily on\n  // polygon() creating the correct intersections.\n  function evenodd() {\n    var ymin = gs_xymap.min;\n    var ymax = gs_xymap.length - 1;\n    for (var y = ymin; y <= ymax; y++) {\n      var pts = gs_xymap[y];\n      if (!pts) {\n        continue;\n      }\n      pts.sort(function (a, b) {\n        return a - b;\n      });\n      var wn = false;\n      var xl = 0;\n      for (var n = 0, npts = pts.length; n < npts; n++) {\n        var x = pts[n];\n        if (wn) {\n          fillSegment(xl, x - 1, y);\n        } else {\n          xl = x;\n        }\n        wn = !wn;\n      }\n    }\n  }\n  function drawEllipse(x0, y0, x1, y1, dir) {\n    x0 = x0 | 0;\n    y0 = y0 | 0;\n    x1 = x1 | 0;\n    y1 = y1 | 0;\n    var a = Math.abs(x1 - x0);\n    var b = Math.abs(y1 - y0);\n    var b1 = b & 1;\n    var dx = 4 * (1 - a) * b * b;\n    var dy = 4 * (b1 + 1) * a * a;\n    var err = dx + dy + b1 * a * a;\n    var e2;\n\n    // Left and right edges\n    var left = [],\n      right = [];\n    left.min = right.min = Infinity;\n    if (x0 > x1) {\n      x0 = x1;\n      x1 += a;\n    }\n    if (y0 > y1) y0 = y1;\n    y0 += (b + 1) / 2 | 0;\n    y1 = y0 - b1;\n    a *= 8 * a;\n    b1 = 8 * b * b;\n    do {\n      maxedge(right, x1, y0); // 1st quadrant\n      minedge(left, x0, y0); // 2nd quadrant\n      minedge(left, x0, y1); // 3rd quadrant\n      maxedge(right, x1, y1); // 4th quadrant\n      e2 = 2 * err;\n      if (e2 >= dx) {\n        x0++;\n        x1--;\n        dx += b1;\n        err += dx;\n      }\n      if (e2 <= dy) {\n        y0++;\n        y1--;\n        dy += a;\n        err += dy;\n      }\n    } while (x0 <= x1);\n    while (y0 - y1 < b) {\n      // too early stop of flat ellipse\n      maxedge(right, x1 + 1, y0);\n      minedge(left, x0 - 1, y0++);\n      minedge(left, x0 - 1, y1);\n      maxedge(right, x1 + 1, y1--);\n    }\n    for (var y = left.min, max = left.length - 1; y <= max; y++) {\n      addPoint(left[y], y);\n    }\n    // The points we calculated are \"inside\".  The fill algorithm excludes \n    // right edges, so +1 on each x.\n    for (var y = right.min, max = right.length - 1; y <= max; y++) {\n      addPoint(right[y] + 1, y);\n    }\n    function minedge(e, x, y) {\n      if (e.min > y) e.min = y;\n      var ey = e[y];\n      if (ey == null || ey > x) {\n        e[y] = x;\n      }\n    }\n    function maxedge(e, x, y) {\n      if (e.min > y) e.min = y;\n      var ey = e[y];\n      if (ey == null || ey < x) {\n        e[y] = x;\n      }\n    }\n  }\n\n  // Returns true if outside the clipping region.\n  function clipped(x, y) {\n    var pts = gs_xyclip[y];\n    if (!pts) {\n      return true;\n    }\n    if (!pts.sorted) {\n      pts.sort(function (a, b) {\n        return a - b;\n      });\n      pts.sorted = true;\n    }\n    var wn = false;\n    for (var n = 0, npts = pts.length; n < npts; n++) {\n      var xn = pts[n];\n      if (xn > x) {\n        return !wn;\n      } else if (xn == x) {\n        return wn;\n      }\n      wn = !wn;\n    }\n    return true;\n  }\n\n  // Returns 1 if clockwise, -1 if ccw.\n  function polydir(pts) {\n    var xp = 0;\n    for (var i = 0, l = pts.length, j = l - 1; i < l; j = i++) {\n      xp += pts[j][0] * pts[i][1] - pts[i][0] * pts[j][1];\n    }\n    return xp > 0 ? 1 : -1;\n  }\n}\n// drawing-canvas.js\n//\n// `maybe` maybe the canvas, pre v4.0.\nfunction DrawingCanvas(canvas, maybe) {\n  // Pre setops() backward compatibility\n  if (maybe && maybe instanceof HTMLCanvasElement) {\n    canvas = maybe;\n  }\n  var img;\n  var ctx = canvas.getContext('2d', {\n    willReadFrequently: true\n  });\n  var drawing = DrawingBuiltin();\n\n  // Provide our specializations for the builtin drawing\n  drawing.image = image;\n  drawing.end = end;\n\n  // Reflect setopts() into the super\n  var opts;\n  var _setopts = drawing.setopts;\n  drawing.setopts = function (options) {\n    opts = options;\n    _setopts && _setopts.call(drawing, options);\n  };\n  return drawing;\n\n  // Called by DrawingBuiltin.init() to get the ARGB bitmap for rendering.\n  function image(width, height) {\n    canvas.width = width;\n    canvas.height = height;\n\n    // Set background \n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    if (/^[0-9a-fA-F]{6}$/.test('' + opts.backgroundcolor)) {\n      ctx.fillStyle = '#' + opts.backgroundcolor;\n      ctx.fillRect(0, 0, width, height);\n    } else {\n      ctx.clearRect(0, 0, width, height);\n    }\n\n    // Prepare the bitmap \n    img = ctx.getImageData(0, 0, width, height);\n\n    // The return value is designed for both canvas pure-RGBA and PNG RGBA\n    return {\n      buffer: img.data,\n      ispng: false\n    };\n  }\n  function end() {\n    ctx.putImageData(img, 0, 0);\n    return canvas;\n  }\n}\n// drawing-svg.js\n//\n// Converts the drawing primitives into the equivalent SVG.  Linear barcodes\n// are rendered as a series of stroked paths.  2D barcodes are rendered as a \n// series of filled paths.\n//\n// Rotation is handled during drawing.  The resulting SVG will contain the \n// already-rotated barcode without an SVG transform.\n//\n// If the requested barcode image contains text, the glyph paths are \n// extracted from the font file (via the builtin FontLib and stb_truetype.js)\n// and added as filled SVG paths.\n//\nfunction DrawingSVG() {\n  // Unrolled x,y rotate/translate matrix\n  var tx0 = 0,\n    tx1 = 0,\n    tx2 = 0,\n    tx3 = 0;\n  var ty0 = 0,\n    ty1 = 0,\n    ty2 = 0,\n    ty3 = 0;\n  var opts;\n  var svg = '';\n  var path;\n  var clipid = '';\n  var clips = [];\n  var lines = {};\n\n  // Magic number to approximate an ellipse/circle using 4 cubic beziers.\n  var ELLIPSE_MAGIC = 0.55228475 - 0.00045;\n\n  // Global graphics state\n  var gs_width, gs_height; // image size, in pixels\n  var gs_dx, gs_dy; // x,y translate (padding)\n\n  return {\n    // setopts() is called after the options are fixed-up/normalized,\n    // but before calling into BWIPP.\n    // This allows omitting the options in the constructor call.\n    // It is also your last chance to amend the options before usage.\n    setopts(options) {\n      opts = options;\n    },\n    // measure() and scale() are the only drawing primitives that are called before init().\n\n    // Make no adjustments\n    scale(sx, sy) {},\n    // Measure text.\n    // `font` is the font name typically OCR-A or OCR-B.\n    // `fwidth` and `fheight` are the requested font cell size.  They will\n    // usually be the same, except when the scaling is not symetric.\n    measure(str, font, fwidth, fheight) {\n      fwidth = fwidth | 0;\n      fheight = fheight | 0;\n      var fontid = FontLib.lookup(font);\n      var width = 0;\n      var ascent = 0;\n      var descent = 0;\n      for (var i = 0; i < str.length; i++) {\n        var ch = str.charCodeAt(i);\n        var glyph = FontLib.getpaths(fontid, ch, fwidth, fheight);\n        if (!glyph) {\n          continue;\n        }\n        ascent = Math.max(ascent, glyph.ascent);\n        descent = Math.max(descent, -glyph.descent);\n        width += glyph.advance;\n      }\n      return {\n        width,\n        ascent,\n        descent\n      };\n    },\n    // `width` and `height` represent the maximum bounding box the graphics will\n    // occupy.  The dimensions are for an unrotated rendering.  Adjust as necessary.\n    init(width, height) {\n      // Add in the effects of padding.  These are always set before the\n      // drawing constructor is called.\n      var padl = opts.paddingleft;\n      var padr = opts.paddingright;\n      var padt = opts.paddingtop;\n      var padb = opts.paddingbottom;\n      var rot = opts.rotate || 'N';\n      width += padl + padr;\n      height += padt + padb;\n\n      // Transform indexes are: x, y, w, h\n      switch (rot) {\n        // tx = w-y, ty = x\n        case 'R':\n          tx1 = -1;\n          tx2 = 1;\n          ty0 = 1;\n          break;\n        // tx = w-x, ty = h-y\n        case 'I':\n          tx0 = -1;\n          tx2 = 1;\n          ty1 = -1;\n          ty3 = 1;\n          break;\n        // tx = y, ty = h-x\n        case 'L':\n          tx1 = 1;\n          ty0 = -1;\n          ty3 = 1;\n          break;\n        // tx = x, ty = y\n        default:\n          tx0 = ty1 = 1;\n          break;\n      }\n\n      // Setup the graphics state\n      var swap = rot == 'L' || rot == 'R';\n      gs_width = swap ? height : width;\n      gs_height = swap ? width : height;\n      gs_dx = padl;\n      gs_dy = padt;\n    },\n    // Unconnected stroked lines are used to draw the bars in linear barcodes.\n    // No line cap should be applied.  These lines are always orthogonal.\n    line(x0, y0, x1, y1, lw, rgb) {\n      // Try to get non-blurry lines...\n      x0 = x0 | 0;\n      y0 = y0 | 0;\n      x1 = x1 | 0;\n      y1 = y1 | 0;\n      lw = Math.round(lw);\n\n      // Try to keep the lines \"crisp\" by using with the SVG line drawing spec to\n      // our advantage.\n      if (lw & 1) {\n        if (x0 == x1) {\n          x0 += 0.5;\n          x1 += 0.5;\n        }\n        if (y0 == y1) {\n          y0 += 0.5;\n          y1 += 0.5;\n        }\n      }\n\n      // Group together all lines of the same width and emit as single paths.\n      // Dramatically reduces resulting text size.\n      var key = '' + lw + '#' + rgb;\n      if (!lines[key]) {\n        lines[key] = '<path stroke=\"#' + rgb + '\" stroke-width=\"' + lw + '\" d=\"';\n      }\n      lines[key] += 'M' + transform(x0, y0) + 'L' + transform(x1, y1);\n    },\n    // Polygons are used to draw the connected regions in a 2d barcode.\n    // These will always be unstroked, filled, non-intersecting,\n    // orthogonal shapes.\n    // You will see a series of polygon() calls, followed by a fill().\n    polygon(pts) {\n      if (!path) {\n        path = '<path d=\"';\n      }\n      path += 'M' + transform(pts[0][0], pts[0][1]);\n      for (var i = 1, n = pts.length; i < n; i++) {\n        var p = pts[i];\n        path += 'L' + transform(p[0], p[1]);\n      }\n      path += 'Z';\n    },\n    // An unstroked, filled hexagon used by maxicode.  You can choose to fill\n    // each individually, or wait for the final fill().\n    //\n    // The hexagon is drawn from the top, counter-clockwise.\n    hexagon(pts, rgb) {\n      this.polygon(pts); // A hexagon is just a polygon...\n    },\n    // An unstroked, filled ellipse.  Used by dotcode and maxicode at present.\n    // maxicode issues pairs of ellipse calls (one cw, one ccw) followed by a fill()\n    // to create the bullseye rings.  dotcode issues all of its ellipses then a\n    // fill().\n    ellipse(x, y, rx, ry, ccw) {\n      if (!path) {\n        path = '<path d=\"';\n      }\n      var dx = rx * ELLIPSE_MAGIC;\n      var dy = ry * ELLIPSE_MAGIC;\n\n      // Since there are never overlapping regions, we don't worry about cw/ccw.\n      path += 'M' + transform(x - rx, y) + 'C' + transform(x - rx, y - dy) + ' ' + transform(x - dx, y - ry) + ' ' + transform(x, y - ry) + 'C' + transform(x + dx, y - ry) + ' ' + transform(x + rx, y - dy) + ' ' + transform(x + rx, y) + 'C' + transform(x + rx, y + dy) + ' ' + transform(x + dx, y + ry) + ' ' + transform(x, y + ry) + 'C' + transform(x - dx, y + ry) + ' ' + transform(x - rx, y + dy) + ' ' + transform(x - rx, y) + 'Z';\n    },\n    // PostScript's default fill rule is non-zero but there are never intersecting\n    // regions so use even-odd as it is easier to work with.\n    fill(rgb) {\n      if (path) {\n        svg += path + '\" fill=\"#' + rgb + '\" fill-rule=\"evenodd\"' + (clipid ? ' clip-path=\"url(#' + clipid + ')\"' : '') + ' />\\n';\n        path = null;\n      }\n    },\n    // Currently only used by swissqrcode.  The `polys` area is an array of\n    // arrays of points.  Each array of points is identical to the `pts`\n    // parameter passed to polygon().  The clipping rule, like the fill rule,\n    // defaults to non-zero winding.\n    clip: function (polys) {\n      var path = '<clipPath id=\"clip' + clips.length + '\"><path d=\"';\n      for (let j = 0; j < polys.length; j++) {\n        let pts = polys[j];\n        path += 'M' + transform(pts[0][0], pts[0][1]);\n        for (var i = 1, n = pts.length; i < n; i++) {\n          var p = pts[i];\n          path += 'L' + transform(p[0], p[1]);\n        }\n        path += 'Z';\n      }\n      path += '\" clip-rule=\"nonzero\" /></clipPath>';\n      clipid = \"clip\" + clips.length;\n      clips.push(path);\n    },\n    unclip: function () {\n      clipid = '';\n    },\n    // Draw text with optional inter-character spacing.  `y` is the baseline.\n    // font is an object with properties { name, width, height, dx }\n    // width and height are the font cell size.\n    // dx is extra space requested between characters (usually zero).\n    text(x, y, str, rgb, font) {\n      var fontid = FontLib.lookup(font.name);\n      var fwidth = font.width | 0;\n      var fheight = font.height | 0;\n      var dx = font.dx | 0;\n      var path = '';\n      for (var k = 0; k < str.length; k++) {\n        var ch = str.charCodeAt(k);\n        var glyph = FontLib.getpaths(fontid, ch, fwidth, fheight);\n        if (!glyph) {\n          continue;\n        }\n        if (glyph.length) {\n          // A glyph is composed of sequence of curve and line segments.\n          // M is move-to\n          // L is line-to\n          // Q is quadratic bezier curve-to\n          // C is cubic bezier curve-to\n          for (var i = 0, l = glyph.length; i < l; i++) {\n            let seg = glyph[i];\n            if (seg.type == 'M' || seg.type == 'L') {\n              path += seg.type + transform(seg.x + x, y - seg.y);\n            } else if (seg.type == 'Q') {\n              path += seg.type + transform(seg.cx + x, y - seg.cy) + ' ' + transform(seg.x + x, y - seg.y);\n            } else if (seg.type == 'C') {\n              path += seg.type + transform(seg.cx1 + x, y - seg.cy1) + ' ' + transform(seg.cx2 + x, y - seg.cy2) + ' ' + transform(seg.x + x, y - seg.y);\n            }\n          }\n          // Close the shape\n          path += 'Z';\n        }\n        x += glyph.advance + dx;\n      }\n      if (path) {\n        svg += '<path d=\"' + path + '\" fill=\"#' + rgb + '\" />\\n';\n      }\n    },\n    // Called after all drawing is complete.  The return value from this method\n    // will be the return value from `bwipjs.render()`.\n    end() {\n      var linesvg = '';\n      for (var key in lines) {\n        linesvg += lines[key] + '\" />\\n';\n      }\n      var bg = opts.backgroundcolor;\n      return '<svg viewBox=\"0 0 ' + gs_width + ' ' + gs_height + '\" xmlns=\"http://www.w3.org/2000/svg\">\\n' + (clips.length ? '<defs>' + clips.join('') + '</defs>' : '') + (/^[0-9A-Fa-f]{6}$/.test('' + bg) ? '<rect width=\"100%\" height=\"100%\" fill=\"#' + bg + '\" />\\n' : '') + linesvg + svg + '</svg>\\n';\n    }\n  };\n\n  // translate/rotate and return as an SVG coordinate pair\n  function transform(x, y) {\n    x += gs_dx;\n    y += gs_dy;\n    var tx = tx0 * x + tx1 * y + tx2 * (gs_width - 1) + tx3 * (gs_height - 1);\n    var ty = ty0 * x + ty1 * y + ty2 * (gs_width - 1) + ty3 * (gs_height - 1);\n    return '' + ((tx | 0) == tx ? tx : tx.toFixed(2)) + ' ' + ((ty | 0) == ty ? ty : ty.toFixed(2));\n  }\n}\n// fontlib.js\nvar FontLib = function () {\n  var fonts = [];\n  var names = {};\n  var glyphcache = {};\n  var glyphmru = {};\n  var glyphcount = 0;\n\n  // Sentinel to simplify moving entries around in the list.\n  glyphmru.next = glyphmru;\n  glyphmru.prev = glyphmru;\n  return {\n    lookup: lookup,\n    monochrome: monochrome,\n    getglyph: getglyph,\n    getpaths: getpaths,\n    loadFont: loadFont\n  };\n\n  // loadFont(name, data)\n  // loadFont(name, mult, data)\n  // loadFont(name, multy, multx, data)   // note order: y,x\n  // data must be the font data, either a binary or base64 encoded string.\n  function loadFont(name /*...args*/) {\n    var multx = 100;\n    var multy = 100;\n    var data = null;\n    if (arguments.length == 2) {\n      data = arguments[1];\n    } else if (arguments.length == 3) {\n      multx = multy = +arguments[1] || 100;\n      data = arguments[2];\n    } else if (arguments.length == 4) {\n      multy = +arguments[1] || 100;\n      multx = +arguments[2] || 100;\n      data = arguments[3];\n    } else {\n      throw new Error(\"bwipjs: loadFont: invalid number of arguments\");\n    }\n    var font = STBTT.InitFont(toUint8Array(data));\n    font.bwipjs_name = name;\n    font.bwipjs_multx = multx;\n    font.bwipjs_multy = multy;\n    var fontid = fonts.push(font) - 1;\n    names[name.toUpperCase()] = fontid;\n    return fontid;\n  }\n\n  // Always returns a valid font-id (default OCR-B)\n  function lookup(name) {\n    var fontid = names[name.toUpperCase()];\n    return fontid === undefined ? 1 : fontid; // OCR B default\n  }\n\n  // Not supported by stbtt\n  function monochrome(mono) {\n    if (mono) {\n      throw new Error('bwipjs: monochrome fonts not implemented');\n    }\n  }\n  function getglyph(fontid, charcode, width, height) {\n    fontid = fontid | 0;\n    charcode = charcode | 0;\n    width = +width;\n    height = +height;\n    if (!width || width < 8) {\n      width = 8;\n    }\n    if (!height || height < 8) {\n      height = width;\n    }\n    if (fontid < 0 || fontid >= fonts.length) {\n      fontid = 1; // OCR B default\n    }\n    if (!charcode || charcode < 32) {\n      charcode = 32;\n    }\n\n    // In the cache?\n    var cachekey = '' + fontid + 'c' + charcode + 'w' + width + 'h' + height;\n    var glyph = glyphcache[cachekey];\n    if (glyph) {\n      // Unthread from the MRU\n      glyph.prev.next = glyph.next;\n      glyph.next.prev = glyph.prev;\n\n      // Thread back onto the top\n      var sntl = glyphmru;\n      sntl.next.prev = glyph;\n      glyph.next = sntl.next;\n      glyph.prev = sntl;\n      sntl.next = glyph;\n      return glyph;\n    }\n    var font = fonts[fontid];\n    var glyph = STBTT.GetGlyph(font, charcode, width * font.bwipjs_multx / 100, height * font.bwipjs_multy / 100) || STBTT.GetGlyph(font, 0, width * font.bwipjs_multx / 100, height * font.bwipjs_multy / 100);\n    glyph.bytes = glyph.pixels;\n    glyph.cachekey = cachekey;\n    glyph.offset = 0;\n\n    //glyph = {\n    //      top:font.GlyphTop(),\n    //      left:font.GlyphLeft(),\n    //      width:font.GlyphWidth(),\n    //      height:font.GlyphHeight(),\n    //      advance:font.GlyphAdvance(),\n    //      bitmap:font.GlyphBitmap(),\n    //      offset:0,\n    //      cachekey:cachekey,\n    //  };\n\n    // Purge old\n    if (glyphcount > 250) {\n      var sntl = glyphmru;\n      var temp = sntl.prev;\n      temp.prev.next = sntl;\n      sntl.prev = temp.prev;\n      temp.next = temp.prev = null;\n      delete glyphcache[temp.cachekey];\n    } else {\n      glyphcount++;\n    }\n\n    // Add to cache and to the top of the MRU\n    glyphcache[cachekey] = glyph;\n    var sntl = glyphmru;\n    sntl.next.prev = glyph;\n    glyph.next = sntl.next;\n    glyph.prev = sntl;\n    sntl.next = glyph;\n    return glyph;\n  }\n  function getpaths(fontid, charcode, width, height) {\n    fontid = fontid | 0;\n    charcode = charcode | 0;\n    width = +width;\n    height = +height;\n    if (!width || width < 8) {\n      width = 8;\n    }\n    if (!height || height < 8) {\n      height = width;\n    }\n    if (fontid < 0 || fontid >= fonts.length) {\n      fontid = 1; // OCR B default\n    }\n    if (!charcode || charcode < 32) {\n      charcode = 32;\n    }\n    var font = fonts[fontid];\n    return STBTT.GetPaths(font, charcode, width * font.bwipjs_multx / 100, height * font.bwipjs_multy / 100);\n  }\n}();\n\n// This is needed to make the default exports traceable by esbuild\n// during its tree shaking phase.  See issue #298.\nfunction LoadFont() {\n  return FontLib.loadFont.apply(FontLib, Array.prototype.slice.call(arguments));\n}\n\n// bwip-js/stb_trutype.js\n//\n// JavaScript implementation of stb_truetype.h @ https://github.com/nothings/stb.\n//\n// This file is part of the bwip-js project available at:\n//\n//      http://metafloor.github.io/bwip-js\n//\n// Copyright (c) 2019 Mark Warren : MIT LICENSE\n\n// Copyright notice from stb_truetype.h:\n//\n// MIT License\n//\n// Copyright (c) 2017 Sean Barrett\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n// of the Software, and to permit persons to whom the Software is furnished to do\n// so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nvar STBTT = function () {\n  var STBTT_vmove = 1,\n    STBTT_vline = 2,\n    STBTT_vcurve = 3,\n    STBTT_vcubic = 4,\n    STBTT_PLATFORM_ID_UNICODE = 0,\n    STBTT_PLATFORM_ID_MAC = 1,\n    STBTT_PLATFORM_ID_ISO = 2,\n    STBTT_PLATFORM_ID_MICROSOFT = 3,\n    STBTT_UNICODE_EID_UNICODE_1_0 = 0,\n    STBTT_UNICODE_EID_UNICODE_1_1 = 1,\n    STBTT_UNICODE_EID_ISO_10646 = 2,\n    STBTT_UNICODE_EID_UNICODE_2_0_BMP = 3,\n    STBTT_UNICODE_EID_UNICODE_2_0_FULL = 4,\n    STBTT_MS_EID_SYMBOL = 0,\n    STBTT_MS_EID_UNICODE_BMP = 1,\n    STBTT_MS_EID_SHIFTJIS = 2,\n    STBTT_MS_EID_UNICODE_FULL = 10;\n  var floor = Math.floor;\n  var ceil = Math.ceil;\n  var sqrt = Math.sqrt;\n  var abs = Math.abs;\n\n  // Allocate an array of objects - replaces malloc(sizeof struct * n)\n  function oalloc(n) {\n    var o = [];\n    for (var i = 0; i < n; i++) {\n      o.push({});\n    }\n    return o;\n  }\n\n  //static unsigned char stbtt__buf_get8(stbtt__buf * b)\n  function stbtt__buf_get8(b) {\n    return b[b.cursor++] || 0;\n  }\n\n  //static unsigned char stbtt__buf_peek8(stbtt__buf * b)\n  function stbtt__buf_peek8(b) {\n    return b[b.cursor];\n  }\n\n  //static void stbtt__buf_seek(stbtt__buf * b, int o)\n  function stbtt__buf_seek(b, o) {\n    b.cursor = o > b.length || o < 0 ? b.length : o;\n  }\n\n  //static void stbtt__buf_skip(stbtt__buf * b, int o)\n  function stbtt__buf_skip(b, o) {\n    stbtt__buf_seek(b, b.cursor + o);\n  }\n\n  //static unsigned int stbtt__buf_get(stbtt__buf * b, int n)\n  function stbtt__buf_get(b, n) {\n    var v = 0;\n    for (var i = 0; i < n; i++) {\n      v = v << 8 | stbtt__buf_get8(b);\n    }\n    return v;\n  }\n\n  // This function is only called once with a real 'p', all other uses are\n  // for a NULL buffer.  The for real usage, the code is inlined.\n  //static stbtt__buf stbtt__new_buf(const void *p, int size)\n  function stbtt__null_buf() {\n    return {\n      length: 0\n    };\n  }\n\n  //static stbtt__buf stbtt__buf_range(const stbtt__buf * b, int o, int s)\n  function stbtt__buf_range(b, o, s) {\n    if (o < 0 || s < 0 || o > b.length || s > b.length - o) {\n      return stbtt__null_buf();\n    }\n    var r = b.subarray(o, o + s);\n    r.cursor = 0;\n    return r;\n  }\n\n  //static stbtt__buf stbtt__cff_get_index(stbtt__buf * b)\n  function stbtt__cff_get_index(b) {\n    var start = b.cursor;\n    var count = stbtt__buf_get(b, 2);\n    if (count) {\n      var offsize = stbtt__buf_get8(b);\n      stbtt__buf_skip(b, offsize * count);\n      stbtt__buf_skip(b, stbtt__buf_get(b, offsize) - 1);\n    }\n    return stbtt__buf_range(b, start, b.cursor - start);\n  }\n\n  //static unsigned int stbtt__cff_int(stbtt__buf * b)\n  function stbtt__cff_int(b) {\n    var b0 = stbtt__buf_get8(b);\n    if (b0 >= 32 && b0 <= 246) {\n      return b0 - 139;\n    } else if (b0 >= 247 && b0 <= 250) {\n      return (b0 - 247) * 256 + stbtt__buf_get8(b) + 108;\n    } else if (b0 >= 251 && b0 <= 254) {\n      return -(b0 - 251) * 256 - stbtt__buf_get8(b) - 108;\n    } else if (b0 == 28) {\n      return stbtt__buf_get(b, 2);\n    } else if (b0 == 29) {\n      return stbtt__buf_get(b, 4);\n    }\n    return 0;\n  }\n\n  //static void stbtt__cff_skip_operand(stbtt__buf * b)\n  function stbtt__cff_skip_operand(b) {\n    var b0 = stbtt__buf_peek8(b);\n    if (b0 == 30) {\n      stbtt__buf_skip(b, 1);\n      while (b.cursor < b.length) {\n        var v = stbtt__buf_get8(b);\n        if ((v & 0xF) == 0xF || v >> 4 == 0xF) {\n          break;\n        }\n      }\n    } else {\n      stbtt__cff_int(b);\n    }\n  }\n\n  //static stbtt__buf stbtt__dict_get(stbtt__buf * b, int key)\n  function stbtt__dict_get(b, key) {\n    stbtt__buf_seek(b, 0);\n    while (b.cursor < b.length) {\n      var start = b.cursor,\n        end,\n        op;\n      while (stbtt__buf_peek8(b) >= 28) {\n        stbtt__cff_skip_operand(b);\n      }\n      end = b.cursor;\n      op = stbtt__buf_get8(b);\n      if (op == 12) {\n        op = stbtt__buf_get8(b) | 0x100;\n      }\n      if (op == key) {\n        return stbtt__buf_range(b, start, end - start);\n      }\n    }\n    return stbtt__buf_range(b, 0, 0);\n  }\n\n  //static void stbtt__dict_get_ints(stbtt__buf * b, int key, int outcount, unsigned int *out)\n  function stbtt__dict_get_ints(b, key, outcount, out) {\n    var operands = stbtt__dict_get(b, key);\n    for (var i = 0; i < outcount && operands.cursor < operands.length; i++) {\n      out[i] = stbtt__cff_int(operands);\n    }\n  }\n  // single-integer format of above since javascript doesn't have address-of\n  function stbtt__dict_get_int(b, key, out) {\n    var operands = stbtt__dict_get(b, key);\n    if (operands.cursor < operands.length) {\n      out = stbtt__cff_int(operands);\n    }\n    return out;\n  }\n\n  //static int stbtt__cff_index_count(stbtt__buf * b)\n  function stbtt__cff_index_count(b) {\n    stbtt__buf_seek(b, 0);\n    return stbtt__buf_get(b, 2);\n  }\n\n  //static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)\n  function stbtt__cff_index_get(b, i) {\n    var count, offsize, start, end;\n    stbtt__buf_seek(b, 0);\n    count = stbtt__buf_get(b, 2);\n    offsize = stbtt__buf_get8(b);\n    stbtt__buf_skip(b, i * offsize);\n    start = stbtt__buf_get(b, offsize);\n    end = stbtt__buf_get(b, offsize);\n    return stbtt__buf_range(b, 2 + (count + 1) * offsize + start, end - start);\n  }\n\n  // Convert sign-extend a 16-bit integer to JS number\n  function INT16(n) {\n    return n & 0x8000 ? (0xffff0000 | n) >> 0 : n;\n  }\n\n  //static unsigned short ttUSHORT(unsigned char *p)\n  function ttUSHORT(b, o) {\n    return b[o] * 256 + b[o + 1];\n  }\n\n  //static short ttSHORT(unsigned char *p)\n  function ttSHORT(b, o) {\n    var n = b[o] * 256 + b[o + 1];\n    return n & 0x8000 ? (0xffff0000 | n) >> 0 : n;\n  }\n\n  //static unsigned int ttULONG(unsigned char *p)\n  function ttULONG(b, o) {\n    return (b[o] << 24) + (b[o + 1] << 16) + (b[o + 2] << 8) + b[o + 3];\n  }\n\n  //static unsigned int stbtt__find_table(unsigned char *data, unsigned int fontstart, const char *tag)\n  function stbtt__find_table(data, fontstart, tag) {\n    var num_tables = ttUSHORT(data, fontstart + 4);\n    var tabledir = fontstart + 12;\n    for (var i = 0; i < num_tables; ++i) {\n      var loc = tabledir + 16 * i;\n      if (data[loc] == tag[0] && data[loc + 1] == tag[1] && data[loc + 2] == tag[2] && data[loc + 3] == tag[3]) {\n        return ttULONG(data, loc + 8);\n      }\n    }\n    return 0;\n  }\n\n  //static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)\n  function stbtt__get_subrs(cff, fontdict) {\n    var private_loc = [0, 0];\n    stbtt__dict_get_ints(fontdict, 18, 2, private_loc);\n    if (!private_loc[1] || !private_loc[0]) {\n      return stbtt__null_buf();\n    }\n    var pdict = stbtt__buf_range(cff, private_loc[1], private_loc[0]);\n    var subrsoff = stbtt__dict_get_int(pdict, 19, 0);\n    if (!subrsoff) {\n      return stbtt__null_buf();\n    }\n    stbtt__buf_seek(cff, private_loc[1] + subrsoff);\n    return stbtt__cff_get_index(cff);\n  }\n\n  //static int stbtt_InitFont_internal(stbtt_fontinfo * info, unsigned char *data, int fontstart)\n  function stbtt_InitFont_internal(info, data, fontstart) {\n    var cmap, t, i, numTables;\n    info.data = data;\n    info.fontstart = fontstart;\n    info.cff = stbtt__null_buf();\n    cmap = stbtt__find_table(data, fontstart, [99, 109, 97, 112]); //\"cmap\"\n    info.loca = stbtt__find_table(data, fontstart, [108, 111, 99, 97]); //\"loca\"\n    info.head = stbtt__find_table(data, fontstart, [104, 101, 97, 100]); //\"head\"\n    info.glyf = stbtt__find_table(data, fontstart, [103, 108, 121, 102]); //\"glyf\"\n    info.hhea = stbtt__find_table(data, fontstart, [104, 104, 101, 97]); //\"hhea\"\n    info.hmtx = stbtt__find_table(data, fontstart, [104, 109, 116, 120]); //\"hmtx\"\n    info.kern = stbtt__find_table(data, fontstart, [107, 101, 114, 110]); //\"kern\"\n\n    if (!cmap || !info.head || !info.hhea || !info.hmtx) {\n      return 0;\n    }\n    if (info.glyf) {\n      if (!info.loca) {\n        return 0;\n      }\n    } else {\n      var b,\n        topdict,\n        topdictidx,\n        cff,\n        cstype = 2,\n        charstrings = 0,\n        fdarrayoff = 0,\n        fdselectoff = 0;\n      cff = stbtt__find_table(data, fontstart, [67, 70, 70, 32]); //\"CFF \"\n      if (!cff) {\n        return 0;\n      }\n      info.fontdicts = stbtt__null_buf();\n      info.fdselect = stbtt__null_buf();\n      info.cff = data.subarray(cff); //stbtt__new_buf(data + cff, 512 * 1024 * 1024);\n      info.cff.cursor = 0;\n      b = info.cff;\n      stbtt__buf_skip(b, 2);\n      stbtt__buf_seek(b, stbtt__buf_get8(b));\n      stbtt__cff_get_index(b);\n      topdictidx = stbtt__cff_get_index(b);\n      topdict = stbtt__cff_index_get(topdictidx, 0);\n      stbtt__cff_get_index(b);\n      info.gsubrs = stbtt__cff_get_index(b);\n      charstrings = stbtt__dict_get_int(topdict, 17, charstrings);\n      cstype = stbtt__dict_get_int(topdict, 0x100 | 6, cstype);\n      fdarrayoff = stbtt__dict_get_int(topdict, 0x100 | 36, fdarrayoff);\n      fdselectoff = stbtt__dict_get_int(topdict, 0x100 | 37, fdselectoff);\n      info.subrs = stbtt__get_subrs(b, topdict);\n      if (cstype != 2) {\n        return 0;\n      }\n      if (charstrings == 0) {\n        return 0;\n      }\n      if (fdarrayoff) {\n        if (!fdselectoff) {\n          return 0;\n        }\n        stbtt__buf_seek(b, fdarrayoff);\n        info.fontdicts = stbtt__cff_get_index(b);\n        info.fdselect = stbtt__buf_range(b, fdselectoff, b.length - fdselectoff);\n      }\n      stbtt__buf_seek(b, charstrings);\n      info.charstrings = stbtt__cff_get_index(b);\n    }\n    t = stbtt__find_table(data, fontstart, [109, 97, 120, 112]); //\"maxp\"\n    if (t) {\n      info.numGlyphs = ttUSHORT(data, t + 4);\n    } else {\n      info.numGlyphs = 0xffff;\n    }\n    numTables = ttUSHORT(data, cmap + 2);\n    info.index_map = 0;\n    for (i = 0; i < numTables; ++i) {\n      var encoding_record = cmap + 4 + 8 * i;\n      switch (ttUSHORT(data, encoding_record)) {\n        case STBTT_PLATFORM_ID_MICROSOFT:\n          switch (ttUSHORT(data, encoding_record + 2)) {\n            case STBTT_MS_EID_UNICODE_BMP:\n            case STBTT_MS_EID_UNICODE_FULL:\n              info.index_map = cmap + ttULONG(data, encoding_record + 4);\n              break;\n          }\n          break;\n        case STBTT_PLATFORM_ID_UNICODE:\n          info.index_map = cmap + ttULONG(data, encoding_record + 4);\n          break;\n      }\n    }\n    if (info.index_map == 0) {\n      return 0;\n    }\n    info.indexToLocFormat = ttUSHORT(data, info.head + 50);\n    return 1;\n  }\n\n  //extern int stbtt_FindGlyphIndex(const stbtt_fontinfo * info, int unicode_codepoint)\n  function stbtt_FindGlyphIndex(info, unicode_codepoint) {\n    var data = info.data,\n      index_map = info.index_map;\n    var format = ttUSHORT(data, index_map + 0);\n    if (format == 0) {\n      var bytes = ttUSHORT(data, index_map + 2);\n      if (unicode_codepoint < bytes - 6) {\n        return data[index_map + 6 + unicode_codepoint];\n      }\n      return 0;\n    } else if (format == 6) {\n      var first = ttUSHORT(data, index_map + 6),\n        count = ttUSHORT(data, index_map + 8);\n      if (unicode_codepoint >= first && unicode_codepoint < first + count) {\n        return ttUSHORT(data, index_map + 10 + (unicode_codepoint - first) * 2);\n      }\n      return 0;\n    } else if (format == 2) {\n      return 0;\n    } else if (format == 4) {\n      var segcount = ttUSHORT(data, index_map + 6) >> 1,\n        searchRange = ttUSHORT(data, index_map + 8) >> 1,\n        entrySelector = ttUSHORT(data, index_map + 10),\n        rangeShift = ttUSHORT(data, index_map + 12) >> 1,\n        endCount = index_map + 14,\n        search = endCount;\n      if (unicode_codepoint > 0xffff) {\n        return 0;\n      }\n      if (unicode_codepoint >= ttUSHORT(data, search + rangeShift * 2)) {\n        search += rangeShift * 2;\n      }\n      search -= 2;\n      while (entrySelector) {\n        searchRange >>= 1;\n        var end = ttUSHORT(data, search + searchRange * 2);\n        if (unicode_codepoint > end) {\n          search += searchRange * 2;\n        }\n        --entrySelector;\n      }\n      search += 2;\n      var offset,\n        start,\n        item = search - endCount >>> 1;\n      start = ttUSHORT(data, index_map + 14 + segcount * 2 + 2 + 2 * item);\n      if (unicode_codepoint < start) {\n        return 0;\n      }\n      offset = ttUSHORT(data, index_map + 14 + segcount * 6 + 2 + 2 * item);\n      if (offset == 0) {\n        return unicode_codepoint + ttSHORT(data, index_map + 14 + segcount * 4 + 2 + 2 * item);\n      }\n      return ttUSHORT(data, offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item);\n    } else if (format == 12 || format == 13) {\n      var ngroups = ttULONG(data, index_map + 12),\n        low = 0,\n        high = ngroups;\n      while (low < high) {\n        var mid = low + (high - low >> 1);\n        var start_char = ttULONG(data, index_map + 16 + mid * 12);\n        var end_char = ttULONG(data, index_map + 16 + mid * 12 + 4);\n        if (unicode_codepoint < start_char) {\n          high = mid;\n        } else if (unicode_codepoint > end_char) {\n          low = mid + 1;\n        } else {\n          var start_glyph = ttULONG(data, index_map + 16 + mid * 12 + 8);\n          if (format == 12) {\n            return start_glyph + unicode_codepoint - start_char;\n          } else {\n            return start_glyph;\n          }\n        }\n      }\n      return 0;\n    }\n    return 0;\n  }\n\n  //static void stbtt_setvertex(stbtt_vertex * v, unsigned char type, int x, int y, int cx, int cy)\n  function stbtt_setvertex(v, type, x, y, cx, cy) {\n    v.type = type;\n    v.x = x;\n    v.y = y;\n    v.cx = cx;\n    v.cy = cy;\n  }\n\n  //static int stbtt__GetGlyfOffset(const stbtt_fontinfo * info, int glyph_index)\n  function stbtt__GetGlyfOffset(info, glyph_index) {\n    var g1, g2;\n    if (glyph_index >= info.numGlyphs) {\n      return -1;\n    }\n    if (info.indexToLocFormat >= 2) {\n      return -1;\n    }\n    if (info.indexToLocFormat == 0) {\n      g1 = info.glyf + ttUSHORT(info.data, info.loca + glyph_index * 2) * 2;\n      g2 = info.glyf + ttUSHORT(info.data, info.loca + glyph_index * 2 + 2) * 2;\n    } else {\n      g1 = info.glyf + ttULONG(info.data, info.loca + glyph_index * 4);\n      g2 = info.glyf + ttULONG(info.data, info.loca + glyph_index * 4 + 4);\n    }\n    return g1 == g2 ? -1 : g1;\n  }\n\n  //extern int stbtt_GetGlyphBox(const stbtt_fontinfo * info, int glyph_index, int *x0, int *y0, int *x1, int *y1)\n  function stbtt_GetGlyphBox(info, glyph_index, out) {\n    if (info.cff.length) {\n      stbtt__GetGlyphInfoT2(info, glyph_index, out);\n    } else {\n      var g = stbtt__GetGlyfOffset(info, glyph_index);\n      if (g < 0) {\n        return 0;\n      }\n      out.x0 = ttSHORT(info.data, g + 2);\n      out.y0 = ttSHORT(info.data, g + 4);\n      out.x1 = ttSHORT(info.data, g + 6);\n      out.y1 = ttSHORT(info.data, g + 8);\n    }\n    return 1;\n  }\n\n  //static int stbtt__close_shape(stbtt_vertex * vertices, int num_vertices, int was_off,\n  //                   int start_off, int sx, int sy, int scx, int scy, int cx, int cy)\n  function stbtt__close_shape(vertices, num_vertices, was_off, start_off, sx, sy, scx, scy, cx, cy) {\n    if (start_off) {\n      if (was_off) {\n        stbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, cx + scx >> 1, cy + scy >> 1, cx, cy);\n      }\n      stbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, sx, sy, scx, scy);\n    } else {\n      if (was_off) {\n        stbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, sx, sy, cx, cy);\n      } else {\n        stbtt_setvertex(vertices[num_vertices++], STBTT_vline, sx, sy, 0, 0);\n      }\n    }\n    return num_vertices;\n  }\n\n  //static int stbtt__GetGlyphShapeTT(const stbtt_fontinfo * info, int glyph_index, stbtt_vertex ** pvertices)\n  function stbtt__GetGlyphShapeTT(info, glyph_index) {\n    var data = info.data,\n      g = stbtt__GetGlyfOffset(info, glyph_index);\n    if (g < 0) {\n      return null;\n    }\n    var vertices = [];\n    var numberOfContours = ttSHORT(data, g);\n    if (numberOfContours > 0) {\n      var flags = 0,\n        flagcount,\n        i,\n        j = 0,\n        m,\n        n,\n        next_move,\n        was_off = 0,\n        off,\n        start_off = 0,\n        x,\n        y,\n        cx,\n        cy,\n        sx,\n        sy,\n        scx,\n        scy;\n      var endPtsOfContours = g + 10;\n      var ins = ttUSHORT(data, g + 10 + numberOfContours * 2);\n      var points = data.subarray(g + 10 + numberOfContours * 2 + 2 + ins);\n      var ptsoff = 0;\n      n = 1 + ttUSHORT(data, endPtsOfContours + numberOfContours * 2 - 2);\n      m = n + 2 * numberOfContours;\n      vertices = oalloc(m);\n      next_move = 0;\n      flagcount = 0;\n      off = m - n;\n      for (i = 0; i < n; ++i) {\n        if (flagcount == 0) {\n          flags = points[ptsoff++];\n          if (flags & 8) {\n            flagcount = points[ptsoff++];\n          }\n        } else {\n          --flagcount;\n        }\n        vertices[off + i].type = flags;\n      }\n      x = 0;\n      for (i = 0; i < n; ++i) {\n        flags = vertices[off + i].type;\n        if (flags & 2) {\n          var dx = points[ptsoff++];\n          x += flags & 16 ? dx : -dx;\n        } else {\n          if (!(flags & 16)) {\n            x = x + INT16(points[ptsoff] * 256 + points[ptsoff + 1]);\n            ptsoff += 2;\n          }\n        }\n        vertices[off + i].x = x;\n      }\n      y = 0;\n      for (i = 0; i < n; ++i) {\n        flags = vertices[off + i].type;\n        if (flags & 4) {\n          var dy = points[ptsoff++];\n          y += flags & 32 ? dy : -dy;\n        } else {\n          if (!(flags & 32)) {\n            y = y + INT16(points[ptsoff] * 256 + points[ptsoff + 1]);\n            ptsoff += 2;\n          }\n        }\n        vertices[off + i].y = y;\n      }\n      var num_vertices = 0;\n      sx = sy = cx = cy = scx = scy = 0;\n      for (i = 0; i < n; ++i) {\n        flags = vertices[off + i].type;\n        x = vertices[off + i].x;\n        y = vertices[off + i].y;\n        if (next_move == i) {\n          if (i != 0) {\n            num_vertices = stbtt__close_shape(vertices, num_vertices, was_off, start_off, sx, sy, scx, scy, cx, cy);\n          }\n          start_off = !(flags & 1);\n          if (start_off) {\n            scx = x;\n            scy = y;\n            if (!(vertices[off + i + 1].type & 1)) {\n              sx = x + vertices[off + i + 1].x >> 1;\n              sy = y + vertices[off + i + 1].y >> 1;\n            } else {\n              sx = vertices[off + i + 1].x;\n              sy = vertices[off + i + 1].y;\n              ++i;\n            }\n          } else {\n            sx = x;\n            sy = y;\n          }\n          stbtt_setvertex(vertices[num_vertices++], STBTT_vmove, sx, sy, 0, 0);\n          was_off = 0;\n          next_move = 1 + ttUSHORT(data, endPtsOfContours + j * 2);\n          ++j;\n        } else {\n          if (!(flags & 1)) {\n            if (was_off) {\n              stbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, cx + x >> 1, cy + y >> 1, cx, cy);\n            }\n            cx = x;\n            cy = y;\n            was_off = 1;\n          } else {\n            if (was_off) {\n              stbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, x, y, cx, cy);\n            } else {\n              stbtt_setvertex(vertices[num_vertices++], STBTT_vline, x, y, 0, 0);\n            }\n            was_off = 0;\n          }\n        }\n      }\n      vertices.length = stbtt__close_shape(vertices, num_vertices, was_off, start_off, sx, sy, scx, scy, cx, cy);\n    } else if (numberOfContours == -1) {\n      var more = 1;\n      var comp = g + 10;\n      while (more) {\n        var flags,\n          gidx,\n          mtx = [1, 0, 0, 1, 0, 0];\n        flags = ttSHORT(data, comp);\n        comp += 2;\n        gidx = ttSHORT(data, comp);\n        comp += 2;\n        if (flags & 2) {\n          if (flags & 1) {\n            mtx[4] = ttSHORT(data, comp);\n            comp += 2;\n            mtx[5] = ttSHORT(data, comp);\n            comp += 2;\n          } else {\n            mtx[4] = stbtt__buf_get8(data, comp);\n            comp += 1;\n            mtx[5] = stbtt__buf_get8(data, comp);\n            comp += 1;\n          }\n        }\n        if (flags & 1 << 3) {\n          mtx[0] = mtx[3] = ttSHORT(data, comp) / 16384.0;\n          comp += 2;\n          mtx[1] = mtx[2] = 0;\n        } else if (flags & 1 << 6) {\n          mtx[0] = ttSHORT(data, comp) / 16384.0;\n          comp += 2;\n          mtx[1] = mtx[2] = 0;\n          mtx[3] = ttSHORT(data, comp) / 16384.0;\n          comp += 2;\n        } else if (flags & 1 << 7) {\n          mtx[0] = ttSHORT(data, comp) / 16384.0;\n          comp += 2;\n          mtx[1] = ttSHORT(data, comp) / 16384.0;\n          comp += 2;\n          mtx[2] = ttSHORT(data, comp) / 16384.0;\n          comp += 2;\n          mtx[3] = ttSHORT(data, comp) / 16384.0;\n          comp += 2;\n        }\n        var m = sqrt(mtx[0] * mtx[0] + mtx[1] * mtx[1]);\n        var n = sqrt(mtx[2] * mtx[2] + mtx[3] * mtx[3]);\n        var comp_verts = stbtt_GetGlyphShape(info, gidx);\n        if (comp_verts.length > 0) {\n          for (var i = 0, l = comp_verts.length; i < l; ++i) {\n            var v = comp_verts[i],\n              x,\n              y;\n            x = v.x;\n            y = v.y;\n            v.x = floor(m * (mtx[0] * x + mtx[2] * y + mtx[4]));\n            v.y = floor(n * (mtx[1] * x + mtx[3] * y + mtx[5]));\n            x = v.cx;\n            y = v.cy;\n            v.cx = floor(m * (mtx[0] * x + mtx[2] * y + mtx[4]));\n            v.cy = floor(n * (mtx[1] * x + mtx[3] * y + mtx[5]));\n          }\n          vertices = vertices.concat(comp_verts);\n        }\n        more = flags & 1 << 5;\n      }\n    }\n    //console.log('vertices(' + vertices.length + ')');\n    //for (var i = 0; i < vertices.length; i++) {\n    //  var pt = vertices[i];\n    //  console.log(`${i}: ${pt.x},${pt.y} / ${pt.cx},${pt.cy} / ${pt.type}`);\n    //}\n\n    return vertices;\n  }\n\n  //static void stbtt__track_vertex(stbtt__csctx * c, int x, int y)\n  function stbtt__track_vertex(c, x, y) {\n    if (x > c.max_x || !c.started) {\n      c.max_x = x;\n    }\n    if (y > c.max_y || !c.started) {\n      c.max_y = y;\n    }\n    if (x < c.min_x || !c.started) {\n      c.min_x = x;\n    }\n    if (y < c.min_y || !c.started) {\n      c.min_y = y;\n    }\n    c.started = 1;\n  }\n\n  //static void stbtt__csctx_v(stbtt__csctx * c, unsigned char type, int x, int y, int cx, int cy, int cx1, int cy1)\n  function stbtt__csctx_v(c, type, x, y, cx, cy, cx1, cy1) {\n    stbtt__track_vertex(c, x, y);\n    if (type == STBTT_vcubic) {\n      stbtt__track_vertex(c, cx, cy);\n      stbtt__track_vertex(c, cx1, cy1);\n    }\n    var v = {};\n    stbtt_setvertex(v, type, x, y, cx, cy);\n    v.cx1 = cx1;\n    v.cy1 = cy1;\n    c.vertices.push(v);\n  }\n\n  //static void stbtt__csctx_close_shape(stbtt__csctx * ctx)\n  function stbtt__csctx_close_shape(ctx) {\n    if (ctx.first_x != ctx.x || ctx.first_y != ctx.y) {\n      stbtt__csctx_v(ctx, STBTT_vline, ctx.first_x, ctx.first_y, 0, 0, 0, 0);\n    }\n  }\n\n  //static void stbtt__csctx_rmove_to(stbtt__csctx * ctx, float dx, float dy)\n  function stbtt__csctx_rmove_to(ctx, dx, dy) {\n    stbtt__csctx_close_shape(ctx);\n    ctx.first_x = ctx.x = ctx.x + dx;\n    ctx.first_y = ctx.y = ctx.y + dy;\n    stbtt__csctx_v(ctx, STBTT_vmove, ctx.x, ctx.y, 0, 0, 0, 0);\n  }\n\n  //static void stbtt__csctx_rline_to(stbtt__csctx * ctx, float dx, float dy)\n  function stbtt__csctx_rline_to(ctx, dx, dy) {\n    ctx.x += dx;\n    ctx.y += dy;\n    stbtt__csctx_v(ctx, STBTT_vline, ctx.x, ctx.y, 0, 0, 0, 0);\n  }\n\n  //static void stbtt__csctx_rccurve_to(stbtt__csctx * ctx, float dx1, float dy1, float dx2,\n  //                                  float dy2, float dx3, float dy3)\n  function stbtt__csctx_rccurve_to(ctx, dx1, dy1, dx2, dy2, dx3, dy3) {\n    var cx1 = ctx.x + dx1,\n      cy1 = ctx.y + dy1,\n      cx2 = cx1 + dx2,\n      cy2 = cy1 + dy2;\n    ctx.x = cx2 + dx3;\n    ctx.y = cy2 + dy3;\n    stbtt__csctx_v(ctx, STBTT_vcubic, ctx.x, ctx.y, cx1, cy1, cx2, cy2);\n  }\n\n  //static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)\n  function stbtt__get_subr(b, n) {\n    var count = stbtt__cff_index_count(b);\n    var bias = 107;\n    if (count >= 33900) {\n      bias = 32768;\n    } else if (count >= 1240) {\n      bias = 1131;\n    }\n    n += bias;\n    if (n < 0 || n >= count) {\n      return stbtt__null_buf();\n    }\n    return stbtt__cff_index_get(b, n);\n  }\n\n  //static stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo * info, int glyph_index)\n  function stbtt__cid_get_glyph_subrs(info, glyph_index) {\n    var fdselect = info.fdselect;\n    var nranges,\n      start,\n      end,\n      v,\n      fmt,\n      fdselector = -1,\n      i;\n    stbtt__buf_seek(fdselect, 0);\n    fmt = stbtt__buf_get8(fdselect);\n    if (fmt == 0) {\n      stbtt__buf_skip(fdselect, glyph_index);\n      fdselector = stbtt__buf_get8(fdselect);\n    } else if (fmt == 3) {\n      nranges = stbtt__buf_get(fdselect, 2);\n      start = stbtt__buf_get(fdselect, 2);\n      for (i = 0; i < nranges; i++) {\n        v = stbtt__buf_get8(fdselect);\n        end = stbtt__buf_get(fdselect, 2);\n        if (glyph_index >= start && glyph_index < end) {\n          fdselector = v;\n          break;\n        }\n        start = end;\n      }\n    }\n    if (fdselector == -1) {\n      stbtt__null_buf();\n    }\n    return stbtt__get_subrs(info.cff, stbtt__cff_index_get(info.fontdicts, fdselector));\n  }\n\n  //static int stbtt__run_charstring(const stbtt_fontinfo * info, int glyph_index,\n  //                                 stbtt__csctx * c)\n  function stbtt__run_charstring(info, glyph_index, c) {\n    var in_header = 1,\n      maskbits = 0,\n      subr_stack_height = 0,\n      sp = 0,\n      v,\n      i,\n      b0,\n      has_subrs = 0,\n      clear_stack,\n      s = [],\n      subr_stack = [],\n      subrs = info.subrs,\n      b,\n      f;\n    b = stbtt__cff_index_get(info.charstrings, glyph_index);\n    while (b.cursor < b.length) {\n      i = 0;\n      clear_stack = 1;\n      b0 = stbtt__buf_get8(b);\n      switch (b0) {\n        case 0x13:\n        case 0x14:\n          if (in_header) {\n            maskbits += sp / 2 | 0;\n          }\n          in_header = 0;\n          stbtt__buf_skip(b, (maskbits + 7) / 8 | 0);\n          break;\n        case 0x01:\n        case 0x03:\n        case 0x12:\n        case 0x17:\n          maskbits += sp / 2 | 0;\n          break;\n        case 0x15:\n          in_header = 0;\n          if (sp < 2) {\n            return 0;\n          }\n          stbtt__csctx_rmove_to(c, s[sp - 2], s[sp - 1]);\n          break;\n        case 0x04:\n          in_header = 0;\n          if (sp < 1) {\n            return 0;\n          }\n          stbtt__csctx_rmove_to(c, 0, s[sp - 1]);\n          break;\n        case 0x16:\n          in_header = 0;\n          if (sp < 1) {\n            return 0;\n          }\n          stbtt__csctx_rmove_to(c, s[sp - 1], 0);\n          break;\n        case 0x05:\n          if (sp < 2) {\n            return 0;\n          }\n          for (; i + 1 < sp; i += 2) {\n            stbtt__csctx_rline_to(c, s[i], s[i + 1]);\n          }\n          break;\n        case 0x07:\n          if (sp < 1) {\n            return 0;\n          }\n          for (;;) {\n            if (i >= sp) {\n              break;\n            }\n            stbtt__csctx_rline_to(c, 0, s[i]);\n            i++;\n            if (i >= sp) {\n              break;\n            }\n            stbtt__csctx_rline_to(c, s[i], 0);\n            i++;\n          }\n          break;\n        case 0x06:\n          if (sp < 1) {\n            return 0;\n          }\n          for (;;) {\n            if (i >= sp) {\n              break;\n            }\n            stbtt__csctx_rline_to(c, s[i], 0);\n            i++;\n            if (i >= sp) {\n              break;\n            }\n            stbtt__csctx_rline_to(c, 0, s[i]);\n            i++;\n          }\n          break;\n        case 0x1F:\n          if (sp < 4) {\n            return 0;\n          }\n          for (;;) {\n            if (i + 3 >= sp) {\n              break;\n            }\n            stbtt__csctx_rccurve_to(c, s[i], 0, s[i + 1], s[i + 2], sp - i == 5 ? s[i + 4] : 0.0, s[i + 3]);\n            i += 4;\n            if (i + 3 >= sp) {\n              break;\n            }\n            stbtt__csctx_rccurve_to(c, 0, s[i], s[i + 1], s[i + 2], s[i + 3], sp - i == 5 ? s[i + 4] : 0.0);\n            i += 4;\n          }\n          break;\n        case 0x1E:\n          if (sp < 4) {\n            return 0;\n          }\n          for (;;) {\n            if (i + 3 >= sp) {\n              break;\n            }\n            stbtt__csctx_rccurve_to(c, 0, s[i], s[i + 1], s[i + 2], s[i + 3], sp - i == 5 ? s[i + 4] : 0.0);\n            i += 4;\n            if (i + 3 >= sp) {\n              break;\n            }\n            stbtt__csctx_rccurve_to(c, s[i], 0, s[i + 1], s[i + 2], sp - i == 5 ? s[i + 4] : 0.0, s[i + 3]);\n            i += 4;\n          }\n          break;\n        case 0x08:\n          if (sp < 6) {\n            return 0;\n          }\n          for (; i + 5 < sp; i += 6) {\n            stbtt__csctx_rccurve_to(c, s[i], s[i + 1], s[i + 2], s[i + 3], s[i + 4], s[i + 5]);\n          }\n          break;\n        case 0x18:\n          if (sp < 8) {\n            return 0;\n          }\n          for (; i + 5 < sp - 2; i += 6) {\n            stbtt__csctx_rccurve_to(c, s[i], s[i + 1], s[i + 2], s[i + 3], s[i + 4], s[i + 5]);\n          }\n          if (i + 1 >= sp) {\n            return 0;\n          }\n          stbtt__csctx_rline_to(c, s[i], s[i + 1]);\n          break;\n        case 0x19:\n          if (sp < 8) {\n            return 0;\n          }\n          for (; i + 1 < sp - 6; i += 2) {\n            stbtt__csctx_rline_to(c, s[i], s[i + 1]);\n          }\n          if (i + 5 >= sp) {\n            return 0;\n          }\n          stbtt__csctx_rccurve_to(c, s[i], s[i + 1], s[i + 2], s[i + 3], s[i + 4], s[i + 5]);\n          break;\n        case 0x1A:\n        case 0x1B:\n          if (sp < 4) {\n            return 0;\n          }\n          f = 0.0;\n          if (sp & 1) {\n            f = s[i];\n            i++;\n          }\n          for (; i + 3 < sp; i += 4) {\n            if (b0 == 0x1B) {\n              stbtt__csctx_rccurve_to(c, s[i], f, s[i + 1], s[i + 2], s[i + 3], 0.0);\n            } else {\n              stbtt__csctx_rccurve_to(c, f, s[i], s[i + 1], s[i + 2], 0.0, s[i + 3]);\n            }\n            f = 0.0;\n          }\n          break;\n        case 0x0A:\n          if (!has_subrs) {\n            if (info.fdselect.length) {\n              subrs = stbtt__cid_get_glyph_subrs(info, glyph_index);\n            }\n            has_subrs = 1;\n          }\n        case 0x1D:\n          if (sp < 1) {\n            return 0;\n          }\n          v = s[--sp] | 0;\n          if (subr_stack_height >= 10) {\n            return 0;\n          }\n          subr_stack[subr_stack_height++] = b;\n          b = stbtt__get_subr(b0 == 0x0A ? subrs : info.gsubrs, v);\n          if (b.length == 0) {\n            return 0;\n          }\n          b.cursor = 0;\n          clear_stack = 0;\n          break;\n        case 0x0B:\n          if (subr_stack_height <= 0) {\n            return 0;\n          }\n          b = subr_stack[--subr_stack_height];\n          clear_stack = 0;\n          break;\n        case 0x0E:\n          stbtt__csctx_close_shape(c);\n          return 1;\n        case 0x0C:\n          var dx1,\n            dx2,\n            dx3,\n            dx4,\n            dx5,\n            dx6,\n            dy1,\n            dy2,\n            dy3,\n            dy4,\n            dy5,\n            dy6,\n            dx,\n            dy,\n            b1 = stbtt__buf_get8(b);\n          switch (b1) {\n            case 0x22:\n              if (sp < 7) {\n                return 0;\n              }\n              dx1 = s[0];\n              dx2 = s[1];\n              dy2 = s[2];\n              dx3 = s[3];\n              dx4 = s[4];\n              dx5 = s[5];\n              dx6 = s[6];\n              stbtt__csctx_rccurve_to(c, dx1, 0, dx2, dy2, dx3, 0);\n              stbtt__csctx_rccurve_to(c, dx4, 0, dx5, -dy2, dx6, 0);\n              break;\n            case 0x23:\n              if (sp < 13) {\n                return 0;\n              }\n              dx1 = s[0];\n              dy1 = s[1];\n              dx2 = s[2];\n              dy2 = s[3];\n              dx3 = s[4];\n              dy3 = s[5];\n              dx4 = s[6];\n              dy4 = s[7];\n              dx5 = s[8];\n              dy5 = s[9];\n              dx6 = s[10];\n              dy6 = s[11];\n              stbtt__csctx_rccurve_to(c, dx1, dy1, dx2, dy2, dx3, dy3);\n              stbtt__csctx_rccurve_to(c, dx4, dy4, dx5, dy5, dx6, dy6);\n              break;\n            case 0x24:\n              if (sp < 9) {\n                return 0;\n              }\n              dx1 = s[0];\n              dy1 = s[1];\n              dx2 = s[2];\n              dy2 = s[3];\n              dx3 = s[4];\n              dx4 = s[5];\n              dx5 = s[6];\n              dy5 = s[7];\n              dx6 = s[8];\n              stbtt__csctx_rccurve_to(c, dx1, dy1, dx2, dy2, dx3, 0);\n              stbtt__csctx_rccurve_to(c, dx4, 0, dx5, dy5, dx6, -(dy1 + dy2 + dy5));\n              break;\n            case 0x25:\n              if (sp < 11) {\n                return 0;\n              }\n              dx1 = s[0];\n              dy1 = s[1];\n              dx2 = s[2];\n              dy2 = s[3];\n              dx3 = s[4];\n              dy3 = s[5];\n              dx4 = s[6];\n              dy4 = s[7];\n              dx5 = s[8];\n              dy5 = s[9];\n              dx6 = dy6 = s[10];\n              dx = dx1 + dx2 + dx3 + dx4 + dx5;\n              dy = dy1 + dy2 + dy3 + dy4 + dy5;\n              if (abs(dx) > abs(dy)) {\n                dy6 = -dy;\n              } else {\n                dx6 = -dx;\n              }\n              stbtt__csctx_rccurve_to(c, dx1, dy1, dx2, dy2, dx3, dy3);\n              stbtt__csctx_rccurve_to(c, dx4, dy4, dx5, dy5, dx6, dy6);\n              break;\n            default:\n              return 0;\n          }\n          break;\n        default:\n          if (b0 != 255 && b0 != 28 && (b0 < 32 || b0 > 254)) {\n            return 0;\n          }\n          if (b0 == 255) {\n            // f = (float)(stbtt_int32)stbtt__buf_get32(&b) / 0x10000;\n            f = (stbtt__buf_get(b, 4) | 0) / 0x10000;\n          } else {\n            stbtt__buf_skip(b, -1);\n            // f = (float)(stbtt_int16)stbtt__cff_int(&b);\n            f = (stbtt__cff_int(b) << 16 | 0) >> 16;\n          }\n          if (sp >= 48) {\n            return 0;\n          }\n          s[sp++] = f;\n          clear_stack = 0;\n          break;\n      }\n      if (clear_stack) {\n        sp = 0;\n      }\n    }\n    return 0;\n  }\n  function stbtt__csctx_init() {\n    return {\n      started: 0,\n      first_x: 0,\n      first_y: 0,\n      x: 0,\n      y: 0,\n      min_x: 0,\n      max_x: 0,\n      min_y: 0,\n      max_y: 0,\n      vertices: []\n    };\n  }\n\n  //static int stbtt__GetGlyphShapeT2(const stbtt_fontinfo * info, int glyph_index,\n  //                                  stbtt_vertex ** pvertices)\n  function stbtt__GetGlyphShapeT2(info, glyph_index) {\n    var output_ctx = stbtt__csctx_init();\n    if (stbtt__run_charstring(info, glyph_index, output_ctx)) {\n      return output_ctx.vertices;\n    }\n    return null;\n  }\n\n  //static int stbtt__GetGlyphInfoT2(const stbtt_fontinfo * info, int glyph_index, int *x0,\n  //                      int *y0, int *x1, int *y1)\n  function stbtt__GetGlyphInfoT2(info, glyph_index, out) {\n    var c = stbtt__csctx_init();\n    var r = stbtt__run_charstring(info, glyph_index, c);\n    out.x0 = r ? c.min_x : 0;\n    out.y0 = r ? c.min_y : 0;\n    out.x1 = r ? c.max_x : 0;\n    out.y1 = r ? c.max_y : 0;\n    return r && c.vertices ? c.vertices.length : 0;\n  }\n\n  //extern int stbtt_GetGlyphShape(const stbtt_fontinfo * info, int glyph_index,\n  //                               stbtt_vertex ** pvertices)\n  function stbtt_GetGlyphShape(info, glyph_index) {\n    if (!info.cff.length) {\n      return stbtt__GetGlyphShapeTT(info, glyph_index);\n    } else {\n      return stbtt__GetGlyphShapeT2(info, glyph_index);\n    }\n  }\n\n  //extern void stbtt_GetGlyphHMetrics(const stbtt_fontinfo * info, int glyph_index,\n  //                       int *advanceWidth, int *leftSideBearing)\n  function stbtt_GetGlyphHMetrics(info, glyph_index) {\n    var numOfLongHorMetrics = ttUSHORT(info.data, info.hhea + 34);\n    if (glyph_index < numOfLongHorMetrics) {\n      return {\n        advanceWidth: ttSHORT(info.data, info.hmtx + 4 * glyph_index),\n        leftSideBearing: ttSHORT(info.data, info.hmtx + 4 * glyph_index + 2)\n      };\n    } else {\n      return {\n        advanceWidth: ttSHORT(info.data, info.hmtx + 4 * (numOfLongHorMetrics - 1)),\n        leftSideBearing: ttSHORT(info.data, info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics))\n      };\n    }\n  }\n\n  //extern void stbtt_GetCodepointHMetrics(const stbtt_fontinfo * info, int codepoint,\n  //                           int *advanceWidth, int *leftSideBearing)\n  function stbtt_GetCodepointHMetrics(info, codepoint) {\n    return stbtt_GetGlyphHMetrics(info, stbtt_FindGlyphIndex(info, codepoint));\n  }\n\n  //extern void stbtt_GetFontVMetrics(const stbtt_fontinfo * info, int *ascent, int *descent, int *lineGap)\n  function stbtt_GetFontVMetrics(info) {\n    return {\n      ascent: ttSHORT(info.data, info.hhea + 4),\n      descent: ttSHORT(info.data, info.hhea + 6),\n      linegap: ttSHORT(info.data, info.hhea + 8)\n    };\n  }\n\n  //extern void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo * font, int glyph,\n  //                              float scale_x, float scale_y, float shift_x, float shift_y,\n  //                              int *ix0, int *iy0, int *ix1, int *iy1)\n  function stbtt_GetGlyphBitmapBoxSubpixel(font, glyph, scale_x, scale_y, shift_x, shift_y) {\n    var tmp = {};\n    if (!stbtt_GetGlyphBox(font, glyph, tmp)) {\n      return {\n        x0: 0,\n        y0: 0,\n        x1: 0,\n        y1: 0\n      };\n    }\n    return {\n      x0: floor(tmp.x0 * scale_x + shift_x),\n      y0: floor(-tmp.y1 * scale_y + shift_y),\n      x1: ceil(tmp.x1 * scale_x + shift_x),\n      y1: ceil(-tmp.y0 * scale_y + shift_y)\n    };\n  }\n\n  //extern void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo * font,\n  //                                    int codepoint, float scale_x, float scale_y, float shift_x,\n  //                                    float shift_y, int *ix0, int *iy0, int *ix1, int *iy1)\n  function stbtt_GetCodepointBitmapBoxSubpixel(font, codepoint, scale_x, scale_y, shift_x, shift_y) {\n    return stbtt_GetGlyphBitmapBoxSubpixel(font, stbtt_FindGlyphIndex(font, codepoint), scale_x, scale_y, shift_x, shift_y);\n  }\n\n  //extern void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo * font, int codepoint,   float scale_x, float scale_y,\n  //                                      int *ix0, int *iy0, int *ix1, int *iy1)\n  function stbtt_GetCodepointBitmapBox(font, codepoint, scale_x, scale_y) {\n    return stbtt_GetCodepointBitmapBoxSubpixel(font, codepoint, scale_x, scale_y, 0, 0);\n  }\n\n  //static stbtt__active_edge *stbtt__new_active(stbtt__hheap * hh, stbtt__edge * e, int off_x, float start_point, void *userdata)\n  function stbtt__new_active(e, off_x, start_point) {\n    var dxdy = (e.x1 - e.x0) / (e.y1 - e.y0);\n    return {\n      fdx: dxdy,\n      fdy: dxdy != 0.0 ? 1.0 / dxdy : 0.0,\n      fx: e.x0 + dxdy * (start_point - e.y0) - (off_x | 0),\n      direction: e.invert ? 1.0 : -1.0,\n      sy: e.y0,\n      ey: e.y1,\n      next: 0\n    };\n  }\n\n  //static void stbtt__handle_clipped_edge(float *scanline, int x, stbtt__active_edge * e,\n  //                           float x0, float y0, float x1, float y1)\n  function stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x1, y1) {\n    x = x | 0;\n    if (y0 == y1) {\n      return;\n    }\n    if (y0 > e.ey) {\n      return;\n    }\n    if (y1 < e.sy) {\n      return;\n    }\n    if (y0 < e.sy) {\n      x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);\n      y0 = e.sy;\n    }\n    if (y1 > e.ey) {\n      x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);\n      y1 = e.ey;\n    }\n    if (x0 <= x && x1 <= x) {\n      scanline[x] += e.direction * (y1 - y0);\n    } else if (x0 >= x + 1 && x1 >= x + 1) {} else {\n      scanline[x] += e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);\n    }\n  }\n\n  //static void stbtt__fill_active_edges_new(float *scanline, float *scanline_fill, int len,\n  //                             stbtt__active_edge * e, float y_top)\n  // The C implementation passed scanline_fill as a +1 pointer on the call, and then -1 in\n  // places in this function.  That doesn't work with array-views, so we reverse the handling.\n  function stbtt__fill_active_edges_new(scanline, scanline_fill, len, e, y_top) {\n    var y_bottom = y_top + 1;\n    while (e) {\n      if (e.fdx == 0) {\n        var x0 = e.fx;\n        if (x0 < len) {\n          if (x0 >= 0) {\n            stbtt__handle_clipped_edge(scanline, x0, e, x0, y_top, x0, y_bottom);\n            stbtt__handle_clipped_edge(scanline_fill, x0 + 1, e, x0, y_top, x0, y_bottom);\n          } else {\n            stbtt__handle_clipped_edge(scanline_fill, 0, e, x0, y_top, x0, y_bottom);\n          }\n        }\n      } else {\n        var x0 = e.fx,\n          dx = e.fdx,\n          xb = x0 + dx,\n          x_top,\n          x_bottom,\n          sy0,\n          sy1,\n          dy = e.fdy;\n        if (e.sy > y_top) {\n          x_top = x0 + dx * (e.sy - y_top);\n          sy0 = e.sy;\n        } else {\n          x_top = x0;\n          sy0 = y_top;\n        }\n        if (e.ey < y_bottom) {\n          x_bottom = x0 + dx * (e.ey - y_top);\n          sy1 = e.ey;\n        } else {\n          x_bottom = xb;\n          sy1 = y_bottom;\n        }\n        if (x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {\n          if ((x_top | 0) == (x_bottom | 0)) {\n            var height = sy1 - sy0,\n              x = x_top | 0;\n            scanline[x] += e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;\n            scanline_fill[x + 1] += e.direction * height;\n          } else {\n            var t, x, x1, x2, y_crossing, step, sign, area;\n            if (x_top > x_bottom) {\n              sy0 = y_bottom - (sy0 - y_top);\n              sy1 = y_bottom - (sy1 - y_top);\n              t = sy0, sy0 = sy1, sy1 = t;\n              t = x_bottom, x_bottom = x_top, x_top = t;\n              dx = -dx;\n              dy = -dy;\n              t = x0, x0 = xb, xb = t;\n            }\n            x1 = x_top | 0;\n            x2 = x_bottom | 0;\n            y_crossing = (x1 + 1 - x0) * dy + y_top;\n            sign = e.direction;\n            area = sign * (y_crossing - sy0);\n            scanline[x1] += area * (1 - (x_top - x1 + (x1 + 1 - x1)) / 2);\n            step = sign * dy;\n            for (x = x1 + 1; x < x2; ++x) {\n              scanline[x] += area + step / 2;\n              area += step;\n            }\n            y_crossing += dy * (x2 - (x1 + 1));\n            scanline[x2] += area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing);\n            scanline_fill[x2 + 1] += sign * (sy1 - sy0);\n          }\n        } else {\n          for (var x = 0; x < len; ++x) {\n            var y0 = y_top,\n              x1 = x,\n              x2 = x + 1,\n              x3 = xb,\n              y3 = y_bottom,\n              y1 = (x - x0) / dx + y_top,\n              y2 = (x + 1 - x0) / dx + y_top;\n            if (x0 < x1 && x3 > x2) {\n              stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x1, y1);\n              stbtt__handle_clipped_edge(scanline, x, e, x1, y1, x2, y2);\n              stbtt__handle_clipped_edge(scanline, x, e, x2, y2, x3, y3);\n            } else if (x3 < x1 && x0 > x2) {\n              stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x2, y2);\n              stbtt__handle_clipped_edge(scanline, x, e, x2, y2, x1, y1);\n              stbtt__handle_clipped_edge(scanline, x, e, x1, y1, x3, y3);\n            } else if (x0 < x1 && x3 > x1) {\n              stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x1, y1);\n              stbtt__handle_clipped_edge(scanline, x, e, x1, y1, x3, y3);\n            } else if (x3 < x1 && x0 > x1) {\n              stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x1, y1);\n              stbtt__handle_clipped_edge(scanline, x, e, x1, y1, x3, y3);\n            } else if (x0 < x2 && x3 > x2) {\n              stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x2, y2);\n              stbtt__handle_clipped_edge(scanline, x, e, x2, y2, x3, y3);\n            } else if (x3 < x2 && x0 > x2) {\n              stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x2, y2);\n              stbtt__handle_clipped_edge(scanline, x, e, x2, y2, x3, y3);\n            } else {\n              stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x3, y3);\n            }\n          }\n        }\n      }\n      e = e.next;\n    }\n  }\n\n  //static void stbtt__rasterize_sorted_edges(stbtt__bitmap * result, stbtt__edge * e, int n,\n  //                              int vsubsample, int off_x, int off_y, void *userdata)\n  function stbtt__rasterize_sorted_edges(result, edges, nedges, vsubsample, off_x, off_y) {\n    vsubsample |= 0, off_x |= 0, off_y |= 0;\n    var active = null,\n      z;\n    var y = off_y,\n      j = 0,\n      i;\n    var scanline = new Float32Array(result.w * 2 + 1);\n    var scanline2 = scanline.subarray(result.w);\n    var eoff = 0;\n    edges[nedges].y0 = off_y + result.h + 1;\n    while (j < result.h) {\n      var scan_y_top = y + 0.0,\n        scan_y_bottom = y + 1.0,\n        step = active;\n\n      // F'ing IE\n      if (scanline.fill) {\n        scanline.fill(0);\n      } else {\n        for (var $i = 0, $l = scanline.length; $i < $l; $i++) scanline[$i] = 0;\n      }\n      while (step) {\n        z = step;\n        step = z.next;\n        if (z.ey <= scan_y_top) {\n          z.direction = 0;\n        } else {}\n      }\n      while (edges[eoff].y0 <= scan_y_bottom) {\n        if (edges[eoff].y0 != edges[eoff].y1) {\n          z = stbtt__new_active(edges[eoff], off_x, scan_y_top);\n          z.next = active;\n          active = z;\n        }\n        ++eoff;\n      }\n      if (active) {\n        // C implementation passed scanline2+1.  See function for details.\n        stbtt__fill_active_edges_new(scanline, scanline2, result.w, active, scan_y_top);\n      }\n      for (var i = 0, sum = 0; i < result.w; ++i) {\n        var k, m;\n        sum += scanline2[i];\n        k = scanline[i] + sum;\n        k = abs(k) * 255 + 0.5;\n        m = k >>> 0;\n        if (m > 255) {\n          m = 255;\n        }\n        result.pixels[j * result.stride + i] = m;\n      }\n      step = active;\n      while (step) {\n        z = step;\n        z.fx += z.fdx;\n        step = z.next;\n      }\n      ++y;\n      ++j;\n    }\n  }\n\n  //static void stbtt__sort_edges_ins_sort(stbtt__edge * p, int n)\n  function stbtt__sort_edges_ins_sort(p, n) {\n    for (var i = 1; i < n; ++i) {\n      var t = p[i],\n        j = i;\n      while (j > 0 && t.y0 < p[j - 1].y0) {\n        p[j] = p[j - 1];\n        --j;\n      }\n      if (i != j) {\n        p[j] = t;\n      }\n    }\n  }\n\n  //static void stbtt__sort_edges_quicksort(stbtt__edge * p, int n)\n  // The C implementation messed with the p pointer.  JS uses an offset instead.\n  function stbtt__sort_edges_quicksort(p, o, n) {\n    while (n > 12) {\n      var t,\n        c,\n        i,\n        j,\n        z,\n        m = n >> 1,\n        c01 = p[o].y0 < p[o + m].y0,\n        c12 = p[o + m].y0 < p[o + n - 1].y0;\n      if (c01 != c12) {\n        c = p[o].y0 < p[o + n - 11].y0;\n        z = c == c12 ? 0 : n - 1;\n        t = p[o + z];\n        p[o + z] = p[o + m];\n        p[o + m] = t;\n      }\n      t = p[o];\n      p[o] = p[o + m];\n      p[o + m] = t;\n      i = 1;\n      j = n - 1;\n      for (;;) {\n        for (; p[o + i].y0 < p[o].y0; ++i) {}\n        for (; p[o].y0 < p[o + j].y0; --j) {}\n        if (i >= j) {\n          break;\n        }\n        t = p[o + i];\n        p[o + i] = p[o + j];\n        p[o + j] = t;\n        ++i;\n        --j;\n      }\n      if (j < n - i) {\n        stbtt__sort_edges_quicksort(p, o, j);\n        o += i;\n        n -= i;\n      } else {\n        stbtt__sort_edges_quicksort(p, o + i, n - i);\n        n = j;\n      }\n    }\n  }\n\n  //static void stbtt__sort_edges(stbtt__edge * p, int n)\n  function stbtt__sort_edges(p, n) {\n    stbtt__sort_edges_quicksort(p, 0, n);\n    stbtt__sort_edges_ins_sort(p, n);\n  }\n\n  //static void stbtt__rasterize(stbtt__bitmap * result, stbtt__point * pts, int *wcount,\n  //                 int windings, float scale_x, float scale_y, float shift_x,\n  //                 float shift_y, int off_x, int off_y, int invert,\n  //                 void *userdata)\n  function stbtt__rasterize(result, pts, wcount, scale_x, scale_y, shift_x, shift_y, off_x, off_y, invert) {\n    var y_scale_inv = invert ? -scale_y : scale_y,\n      e,\n      n,\n      i,\n      j,\n      k,\n      m,\n      vsubsample = 1;\n    n = 0;\n    for (i = 0; i < wcount.length; ++i) {\n      n += wcount[i];\n    }\n    e = oalloc(n + 1);\n    n = 0;\n    m = 0;\n    for (i = 0; i < wcount.length; ++i) {\n      var p = m;\n      m += wcount[i];\n      j = wcount[i] - 1;\n      for (k = 0; k < wcount[i]; j = k++) {\n        var a = k,\n          b = j;\n        if (pts[p + j].y == pts[p + k].y) {\n          continue;\n        }\n        e[n].invert = 0;\n        if (invert ? pts[p + j].y > pts[p + k].y : pts[p + j].y < pts[p + k].y) {\n          e[n].invert = 1;\n          a = j, b = k;\n        }\n        e[n].x0 = pts[p + a].x * scale_x + shift_x;\n        e[n].y0 = (pts[p + a].y * y_scale_inv + shift_y) * vsubsample;\n        e[n].x1 = pts[p + b].x * scale_x + shift_x;\n        e[n].y1 = (pts[p + b].y * y_scale_inv + shift_y) * vsubsample;\n        ++n;\n      }\n    }\n    stbtt__sort_edges(e, n);\n    stbtt__rasterize_sorted_edges(result, e, n, vsubsample, off_x, off_y);\n  }\n\n  //static int stbtt__tesselate_curve(stbtt__point * points, int *num_points, float x0,\n  //                       float y0, float x1, float y1, float x2, float y2,\n  //                       float objspace_flatness_squared, int n)\n  function stbtt__tesselate_curve(points, x0, y0, x1, y1, x2, y2, objspace_flatness_squared, n) {\n    var mx = (x0 + 2 * x1 + x2) / 4,\n      my = (y0 + 2 * y1 + y2) / 4,\n      dx = (x0 + x2) / 2 - mx,\n      dy = (y0 + y2) / 2 - my;\n    if (n > 16) {\n      return 1;\n    }\n    if (dx * dx + dy * dy > objspace_flatness_squared) {\n      stbtt__tesselate_curve(points, x0, y0, (x0 + x1) / 2.0, (y0 + y1) / 2.0, mx, my, objspace_flatness_squared, n + 1);\n      stbtt__tesselate_curve(points, mx, my, (x1 + x2) / 2.0, (y1 + y2) / 2.0, x2, y2, objspace_flatness_squared, n + 1);\n    } else {\n      points.push({\n        x: x2,\n        y: y2\n      });\n    }\n    return 1;\n  }\n\n  //static void stbtt__tesselate_cubic(stbtt__point * points, int *num_points, float x0,\n  //                       float y0, float x1, float y1, float x2, float y2,\n  //                       float x3, float y3, float objspace_flatness_squared, int n)\n  function stbtt__tesselate_cubic(points, x0, y0, x1, y1, x2, y2, x3, y3, objspace_flatness_squared, n) {\n    var dx0 = x1 - x0,\n      dy0 = y1 - y0,\n      dx1 = x2 - x1,\n      dy1 = y2 - y1,\n      dx2 = x3 - x2,\n      dy2 = y3 - y2,\n      dx = x3 - x0,\n      dy = y3 - y0,\n      longlen = sqrt(dx0 * dx0 + dy0 * dy0) + sqrt(dx1 * dx1 + dy1 * dy1) + sqrt(dx2 * dx2 + dy2 * dy2),\n      shortlen = sqrt(dx * dx + dy * dy),\n      flatness_squared = longlen * longlen - shortlen * shortlen;\n    if (n > 16) {\n      return;\n    }\n    if (flatness_squared > objspace_flatness_squared) {\n      var x01 = (x0 + x1) / 2,\n        y01 = (y0 + y1) / 2,\n        x12 = (x1 + x2) / 2,\n        y12 = (y1 + y2) / 2,\n        x23 = (x2 + x3) / 2,\n        y23 = (y2 + y3) / 2,\n        xa = (x01 + x12) / 2,\n        ya = (y01 + y12) / 2,\n        xb = (x12 + x23) / 2,\n        yb = (y12 + y23) / 2,\n        mx = (xa + xb) / 2,\n        my = (ya + yb) / 2;\n      stbtt__tesselate_cubic(points, x0, y0, x01, y01, xa, ya, mx, my, objspace_flatness_squared, n + 1);\n      stbtt__tesselate_cubic(points, mx, my, xb, yb, x23, y23, x3, y3, objspace_flatness_squared, n + 1);\n    } else {\n      points.push({\n        x: x3,\n        y: y3\n      });\n    }\n  }\n\n  //static stbtt__point *stbtt_FlattenCurves(stbtt_vertex * vertices, int num_verts,\n  //        float objspace_flatness, int **contour_lengths, int *num_contours, void *userdata)\n  function stbtt_FlattenCurves(vertices, objspace_flatness, contour_lengths) {\n    var points = [],\n      objspace_flatness_squared = objspace_flatness * objspace_flatness,\n      n = -1,\n      start = 0,\n      x = 0,\n      y = 0;\n    for (var i = 0, nverts = vertices.length; i < nverts; ++i) {\n      switch (vertices[i].type) {\n        case STBTT_vmove:\n          if (n >= 0) {\n            contour_lengths[n] = points.length - start;\n          }\n          ++n;\n          start = points.length;\n          x = vertices[i].x, y = vertices[i].y;\n          points.push({\n            x: x,\n            y: y\n          });\n          break;\n        case STBTT_vline:\n          x = vertices[i].x, y = vertices[i].y;\n          points.push({\n            x: x,\n            y: y\n          });\n          break;\n        case STBTT_vcurve:\n          stbtt__tesselate_curve(points, x, y, vertices[i].cx, vertices[i].cy, vertices[i].x, vertices[i].y, objspace_flatness_squared, 0);\n          x = vertices[i].x, y = vertices[i].y;\n          break;\n        case STBTT_vcubic:\n          stbtt__tesselate_cubic(points, x, y, vertices[i].cx, vertices[i].cy, vertices[i].cx1, vertices[i].cy1, vertices[i].x, vertices[i].y, objspace_flatness_squared, 0);\n          x = vertices[i].x, y = vertices[i].y;\n          break;\n      }\n    }\n    contour_lengths[n] = points.length - start;\n\n    //console.log(\"--cl(\" + (n+1) + '):');\n    //for (var i = 0; i <= n; i++) {\n    //  console.log(\" %d\", contour_lengths[i]);\n    //}\n    //console.log(\"\\n--pts(\" + points.length + '):');\n    //for (var i = 0; i < points.length; i++) {\n    //  var pt = points[i];\n    //  console.log(i + ': ' + pt.x  + ',' + pt.y);\n    //}\n\n    return points;\n  }\n\n  //extern void stbtt_Rasterize(stbtt__bitmap * result, float flatness_in_pixels,\n  //                stbtt_vertex * vertices, int num_verts, float scale_x,\n  //                float scale_y, float shift_x, float shift_y, int x_off,\n  //                int y_off, int invert, void *userdata)\n  function stbtt_Rasterize(result, flatness_in_pixels, vertices, scale_x, scale_y, shift_x, shift_y, x_off, y_off, invert) {\n    x_off |= 0, y_off |= 0;\n    var scale = scale_x > scale_y ? scale_y : scale_x,\n      wcount = [],\n      windings = stbtt_FlattenCurves(vertices, flatness_in_pixels / scale, wcount);\n    if (windings) {\n      stbtt__rasterize(result, windings, wcount, scale_x, scale_y, shift_x, shift_y, x_off, y_off, invert);\n    }\n  }\n\n  //extern void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo * info,\n  //                              unsigned char *output, int out_w, int out_h,\n  //                              int out_stride, float scale_x, float scale_y,\n  //                              float shift_x, float shift_y, int glyph)\n  function stbtt_MakeGlyphBitmapSubpixel(info, buffer, out_w, out_h, out_stride, scale_x, scale_y, shift_x, shift_y, glyph) {\n    var vertices = stbtt_GetGlyphShape(info, glyph);\n    var gbm = {};\n    var rect = stbtt_GetGlyphBitmapBoxSubpixel(info, glyph, scale_x, scale_y, shift_x, shift_y);\n    gbm.pixels = buffer;\n    gbm.w = out_w | 0;\n    gbm.h = out_h | 0;\n    gbm.stride = out_stride | 0;\n    if (gbm.w && gbm.h) {\n      stbtt_Rasterize(gbm, 0.35, vertices, scale_x, scale_y, shift_x, shift_y, rect.x0, rect.y0, 1);\n    }\n  }\n\n  //extern void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo * info,\n  //                                  unsigned char *output, int out_w,\n  //                                  int out_h, int out_stride, float scale_x,\n  //                                  float scale_y, float shift_x,\n  //                                  float shift_y, int codepoint)\n  function stbtt_MakeCodepointBitmapSubpixel(info, buffer, out_w, out_h, out_stride, scale_x, scale_y, shift_x, shift_y, codepoint) {\n    stbtt_MakeGlyphBitmapSubpixel(info, buffer, out_w, out_h, out_stride, scale_x, scale_y, shift_x, shift_y, stbtt_FindGlyphIndex(info, codepoint));\n  }\n\n  //extern int stbtt_InitFont(stbtt_fontinfo * info, const unsigned char *data, int offset)\n  function stbtt_InitFont(font, data, offset) {\n    return stbtt_InitFont_internal(font, data, offset);\n  }\n  function InitFont(data) {\n    var font = {};\n    if (!stbtt_InitFont_internal(font, data, 0)) {\n      return null;\n    }\n    var vm = stbtt_GetFontVMetrics(font);\n    font.ascent = vm.ascent;\n    font.descent = vm.descent;\n    font.linegap = vm.linegap;\n    return font;\n  }\n  function GetGlyph(font, codepoint, size_x, size_y) {\n    size_y = size_y || size_x;\n    var scale_x = size_x / font.ascent;\n    var scale_y = size_y / font.ascent;\n    var glyph = stbtt_FindGlyphIndex(font, codepoint);\n    if (!glyph && codepoint) {\n      return null;\n    }\n    var vertices = stbtt_GetGlyphShape(font, glyph);\n    var rect = stbtt_GetGlyphBitmapBoxSubpixel(font, glyph, scale_x, scale_y, 0, 0);\n    var width = rect.x1 - rect.x0;\n    var height = rect.y1 - rect.y0;\n    var pixels = null;\n    if (width && height) {\n      var gbm = {\n        pixels: pixels = new Uint8Array(width * height),\n        w: width,\n        h: height,\n        stride: width\n      };\n      stbtt_Rasterize(gbm, 0.35, vertices, scale_x, scale_y, 0, 0, rect.x0, rect.y0, 1);\n    }\n    var hmetrics = stbtt_GetGlyphHMetrics(font, glyph);\n    return {\n      glyph: glyph,\n      pixels: pixels,\n      width: width,\n      height: height,\n      top: -rect.y0,\n      left: rect.x0,\n      advance: floor(hmetrics.advanceWidth * scale_x)\n    };\n  }\n  function GetPaths(font, codepoint, size_x, size_y) {\n    size_y = size_y || size_x;\n    var scale_x = size_x / font.ascent;\n    var scale_y = size_y / font.ascent;\n    var glyph = stbtt_FindGlyphIndex(font, codepoint);\n    if (!glyph && codepoint) {\n      return null;\n    }\n    var vertices = stbtt_GetGlyphShape(font, glyph);\n    var hmetrics = stbtt_GetGlyphHMetrics(font, glyph);\n\n    // The hmetrics just give us advance.  We need ascent and descent as well.\n    var ascent = 0;\n    var descent = 0;\n\n    // Convert to SVG notation\n    var paths = [];\n    if (vertices) {\n      for (var i = 0, l = vertices.length; i < l; i++) {\n        var v = vertices[i];\n        var path;\n        if (v.type == STBTT_vmove) {\n          path = {\n            type: 'M',\n            x: v.x * scale_x,\n            y: v.y * scale_y\n          };\n        } else if (v.type == STBTT_vline) {\n          path = {\n            type: 'L',\n            x: v.x * scale_x,\n            y: v.y * scale_y\n          };\n        } else if (v.type == STBTT_vcurve) {\n          path = {\n            type: 'Q',\n            x: v.x * scale_x,\n            y: v.y * scale_y,\n            cx: v.cx * scale_x,\n            cy: v.cy * scale_y\n          };\n        } else if (v.type == STBTT_vcubic) {\n          path = {\n            type: 'C',\n            x: v.x * scale_x,\n            y: v.y * scale_y,\n            cx1: v.cx * scale_x,\n            cy1: v.cy * scale_y,\n            cx2: v.cx1 * scale_x,\n            cy2: v.cy1 * scale_y\n          };\n        } else {\n          continue;\n        }\n        if (path.y > ascent) ascent = path.y;\n        if (path.y < descent) descent = path.y;\n        paths.push(path);\n      }\n    }\n\n    // Add the glyph metrics to the returned array.\n    paths.advance = hmetrics.advanceWidth * scale_x;\n    paths.ascent = ascent;\n    paths.descent = descent;\n    return paths;\n  }\n\n  // exports\n  return {\n    InitFont: InitFont,\n    GetGlyph: GetGlyph,\n    GetPaths: GetPaths\n  };\n}();\nfunction toUint8Array(data) {\n  if (typeof data == \"string\") {\n    var binary = /[^A-Za-z0-9+\\/=\\s]/.test(data);\n    var bstr = binary ? data : atob(data),\n      len = bstr.length,\n      bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n      bytes[i] = bstr.charCodeAt(i);\n    }\n    return bytes;\n  } else if (data instanceof Uint8Array) {\n    return data;\n  } else if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data);\n  }\n  throw new ReferenceError(\"data must be a binary or base64 encoded string or Uint8Array\");\n}\nFontLib.loadFont(\"OCR-A\", 100, 100, \"\");\nFontLib.loadFont(\"OCR-B\", 96, 100, \"\");\nexport function auspost(opts, dwg) {\n  return _ToAny(bwipp_auspost, opts, dwg);\n}\n;\nexport function azteccode(opts, dwg) {\n  return _ToAny(bwipp_azteccode, opts, dwg);\n}\n;\nexport function azteccodecompact(opts, dwg) {\n  return _ToAny(bwipp_azteccodecompact, opts, dwg);\n}\n;\nexport function aztecrune(opts, dwg) {\n  return _ToAny(bwipp_aztecrune, opts, dwg);\n}\n;\nexport function bc412(opts, dwg) {\n  return _ToAny(bwipp_bc412, opts, dwg);\n}\n;\nexport function channelcode(opts, dwg) {\n  return _ToAny(bwipp_channelcode, opts, dwg);\n}\n;\nexport function codablockf(opts, dwg) {\n  return _ToAny(bwipp_codablockf, opts, dwg);\n}\n;\nexport function code11(opts, dwg) {\n  return _ToAny(bwipp_code11, opts, dwg);\n}\n;\nexport function code128(opts, dwg) {\n  return _ToAny(bwipp_code128, opts, dwg);\n}\n;\nexport function code16k(opts, dwg) {\n  return _ToAny(bwipp_code16k, opts, dwg);\n}\n;\nexport function code2of5(opts, dwg) {\n  return _ToAny(bwipp_code2of5, opts, dwg);\n}\n;\nexport function code32(opts, dwg) {\n  return _ToAny(bwipp_code32, opts, dwg);\n}\n;\nexport function code39(opts, dwg) {\n  return _ToAny(bwipp_code39, opts, dwg);\n}\n;\nexport function code39ext(opts, dwg) {\n  return _ToAny(bwipp_code39ext, opts, dwg);\n}\n;\nexport function code49(opts, dwg) {\n  return _ToAny(bwipp_code49, opts, dwg);\n}\n;\nexport function code93(opts, dwg) {\n  return _ToAny(bwipp_code93, opts, dwg);\n}\n;\nexport function code93ext(opts, dwg) {\n  return _ToAny(bwipp_code93ext, opts, dwg);\n}\n;\nexport function codeone(opts, dwg) {\n  return _ToAny(bwipp_codeone, opts, dwg);\n}\n;\nexport function coop2of5(opts, dwg) {\n  return _ToAny(bwipp_coop2of5, opts, dwg);\n}\n;\nexport function daft(opts, dwg) {\n  return _ToAny(bwipp_daft, opts, dwg);\n}\n;\nexport function databarexpanded(opts, dwg) {\n  return _ToAny(bwipp_databarexpanded, opts, dwg);\n}\n;\nexport function databarexpandedcomposite(opts, dwg) {\n  return _ToAny(bwipp_databarexpandedcomposite, opts, dwg);\n}\n;\nexport function databarexpandedstacked(opts, dwg) {\n  return _ToAny(bwipp_databarexpandedstacked, opts, dwg);\n}\n;\nexport function databarexpandedstackedcomposite(opts, dwg) {\n  return _ToAny(bwipp_databarexpandedstackedcomposite, opts, dwg);\n}\n;\nexport function databarlimited(opts, dwg) {\n  return _ToAny(bwipp_databarlimited, opts, dwg);\n}\n;\nexport function databarlimitedcomposite(opts, dwg) {\n  return _ToAny(bwipp_databarlimitedcomposite, opts, dwg);\n}\n;\nexport function databaromni(opts, dwg) {\n  return _ToAny(bwipp_databaromni, opts, dwg);\n}\n;\nexport function databaromnicomposite(opts, dwg) {\n  return _ToAny(bwipp_databaromnicomposite, opts, dwg);\n}\n;\nexport function databarstacked(opts, dwg) {\n  return _ToAny(bwipp_databarstacked, opts, dwg);\n}\n;\nexport function databarstackedcomposite(opts, dwg) {\n  return _ToAny(bwipp_databarstackedcomposite, opts, dwg);\n}\n;\nexport function databarstackedomni(opts, dwg) {\n  return _ToAny(bwipp_databarstackedomni, opts, dwg);\n}\n;\nexport function databarstackedomnicomposite(opts, dwg) {\n  return _ToAny(bwipp_databarstackedomnicomposite, opts, dwg);\n}\n;\nexport function databartruncated(opts, dwg) {\n  return _ToAny(bwipp_databartruncated, opts, dwg);\n}\n;\nexport function databartruncatedcomposite(opts, dwg) {\n  return _ToAny(bwipp_databartruncatedcomposite, opts, dwg);\n}\n;\nexport function datalogic2of5(opts, dwg) {\n  return _ToAny(bwipp_datalogic2of5, opts, dwg);\n}\n;\nexport function datamatrix(opts, dwg) {\n  return _ToAny(bwipp_datamatrix, opts, dwg);\n}\n;\nexport function datamatrixrectangular(opts, dwg) {\n  return _ToAny(bwipp_datamatrixrectangular, opts, dwg);\n}\n;\nexport function datamatrixrectangularextension(opts, dwg) {\n  return _ToAny(bwipp_datamatrixrectangularextension, opts, dwg);\n}\n;\nexport function dotcode(opts, dwg) {\n  return _ToAny(bwipp_dotcode, opts, dwg);\n}\n;\nexport function ean13(opts, dwg) {\n  return _ToAny(bwipp_ean13, opts, dwg);\n}\n;\nexport function ean13composite(opts, dwg) {\n  return _ToAny(bwipp_ean13composite, opts, dwg);\n}\n;\nexport function ean14(opts, dwg) {\n  return _ToAny(bwipp_ean14, opts, dwg);\n}\n;\nexport function ean2(opts, dwg) {\n  return _ToAny(bwipp_ean2, opts, dwg);\n}\n;\nexport function ean5(opts, dwg) {\n  return _ToAny(bwipp_ean5, opts, dwg);\n}\n;\nexport function ean8(opts, dwg) {\n  return _ToAny(bwipp_ean8, opts, dwg);\n}\n;\nexport function ean8composite(opts, dwg) {\n  return _ToAny(bwipp_ean8composite, opts, dwg);\n}\n;\nexport function flattermarken(opts, dwg) {\n  return _ToAny(bwipp_flattermarken, opts, dwg);\n}\n;\nexport function gs1_128(opts, dwg) {\n  return _ToAny(bwipp_gs1_128, opts, dwg);\n}\n;\nexport function gs1_128composite(opts, dwg) {\n  return _ToAny(bwipp_gs1_128composite, opts, dwg);\n}\n;\nexport function gs1_cc(opts, dwg) {\n  return _ToAny(bwipp_gs1_cc, opts, dwg);\n}\n;\nexport function gs1datamatrix(opts, dwg) {\n  return _ToAny(bwipp_gs1datamatrix, opts, dwg);\n}\n;\nexport function gs1datamatrixrectangular(opts, dwg) {\n  return _ToAny(bwipp_gs1datamatrixrectangular, opts, dwg);\n}\n;\nexport function gs1dldatamatrix(opts, dwg) {\n  return _ToAny(bwipp_gs1dldatamatrix, opts, dwg);\n}\n;\nexport function gs1dlqrcode(opts, dwg) {\n  return _ToAny(bwipp_gs1dlqrcode, opts, dwg);\n}\n;\nexport function gs1dotcode(opts, dwg) {\n  return _ToAny(bwipp_gs1dotcode, opts, dwg);\n}\n;\nexport function gs1northamericancoupon(opts, dwg) {\n  return _ToAny(bwipp_gs1northamericancoupon, opts, dwg);\n}\n;\nexport function gs1qrcode(opts, dwg) {\n  return _ToAny(bwipp_gs1qrcode, opts, dwg);\n}\n;\nexport function hanxin(opts, dwg) {\n  return _ToAny(bwipp_hanxin, opts, dwg);\n}\n;\nexport function hibcazteccode(opts, dwg) {\n  return _ToAny(bwipp_hibcazteccode, opts, dwg);\n}\n;\nexport function hibccodablockf(opts, dwg) {\n  return _ToAny(bwipp_hibccodablockf, opts, dwg);\n}\n;\nexport function hibccode128(opts, dwg) {\n  return _ToAny(bwipp_hibccode128, opts, dwg);\n}\n;\nexport function hibccode39(opts, dwg) {\n  return _ToAny(bwipp_hibccode39, opts, dwg);\n}\n;\nexport function hibcdatamatrix(opts, dwg) {\n  return _ToAny(bwipp_hibcdatamatrix, opts, dwg);\n}\n;\nexport function hibcdatamatrixrectangular(opts, dwg) {\n  return _ToAny(bwipp_hibcdatamatrixrectangular, opts, dwg);\n}\n;\nexport function hibcmicropdf417(opts, dwg) {\n  return _ToAny(bwipp_hibcmicropdf417, opts, dwg);\n}\n;\nexport function hibcpdf417(opts, dwg) {\n  return _ToAny(bwipp_hibcpdf417, opts, dwg);\n}\n;\nexport function hibcqrcode(opts, dwg) {\n  return _ToAny(bwipp_hibcqrcode, opts, dwg);\n}\n;\nexport function iata2of5(opts, dwg) {\n  return _ToAny(bwipp_iata2of5, opts, dwg);\n}\n;\nexport function identcode(opts, dwg) {\n  return _ToAny(bwipp_identcode, opts, dwg);\n}\n;\nexport function industrial2of5(opts, dwg) {\n  return _ToAny(bwipp_industrial2of5, opts, dwg);\n}\n;\nexport function interleaved2of5(opts, dwg) {\n  return _ToAny(bwipp_interleaved2of5, opts, dwg);\n}\n;\nexport function isbn(opts, dwg) {\n  return _ToAny(bwipp_isbn, opts, dwg);\n}\n;\nexport function ismn(opts, dwg) {\n  return _ToAny(bwipp_ismn, opts, dwg);\n}\n;\nexport function issn(opts, dwg) {\n  return _ToAny(bwipp_issn, opts, dwg);\n}\n;\nexport function itf14(opts, dwg) {\n  return _ToAny(bwipp_itf14, opts, dwg);\n}\n;\nexport function jabcode(opts, dwg) {\n  return _ToAny(bwipp_jabcode, opts, dwg);\n}\n;\nexport function japanpost(opts, dwg) {\n  return _ToAny(bwipp_japanpost, opts, dwg);\n}\n;\nexport function kix(opts, dwg) {\n  return _ToAny(bwipp_kix, opts, dwg);\n}\n;\nexport function leitcode(opts, dwg) {\n  return _ToAny(bwipp_leitcode, opts, dwg);\n}\n;\nexport function mailmark(opts, dwg) {\n  return _ToAny(bwipp_mailmark, opts, dwg);\n}\n;\nexport function mands(opts, dwg) {\n  return _ToAny(bwipp_mands, opts, dwg);\n}\n;\nexport function matrix2of5(opts, dwg) {\n  return _ToAny(bwipp_matrix2of5, opts, dwg);\n}\n;\nexport function maxicode(opts, dwg) {\n  return _ToAny(bwipp_maxicode, opts, dwg);\n}\n;\nexport function micropdf417(opts, dwg) {\n  return _ToAny(bwipp_micropdf417, opts, dwg);\n}\n;\nexport function microqrcode(opts, dwg) {\n  return _ToAny(bwipp_microqrcode, opts, dwg);\n}\n;\nexport function msi(opts, dwg) {\n  return _ToAny(bwipp_msi, opts, dwg);\n}\n;\nexport function onecode(opts, dwg) {\n  return _ToAny(bwipp_onecode, opts, dwg);\n}\n;\nexport function pdf417(opts, dwg) {\n  return _ToAny(bwipp_pdf417, opts, dwg);\n}\n;\nexport function pdf417compact(opts, dwg) {\n  return _ToAny(bwipp_pdf417compact, opts, dwg);\n}\n;\nexport function pharmacode(opts, dwg) {\n  return _ToAny(bwipp_pharmacode, opts, dwg);\n}\n;\nexport function pharmacode2(opts, dwg) {\n  return _ToAny(bwipp_pharmacode2, opts, dwg);\n}\n;\nexport function planet(opts, dwg) {\n  return _ToAny(bwipp_planet, opts, dwg);\n}\n;\nexport function plessey(opts, dwg) {\n  return _ToAny(bwipp_plessey, opts, dwg);\n}\n;\nexport function posicode(opts, dwg) {\n  return _ToAny(bwipp_posicode, opts, dwg);\n}\n;\nexport function postnet(opts, dwg) {\n  return _ToAny(bwipp_postnet, opts, dwg);\n}\n;\nexport function pzn(opts, dwg) {\n  return _ToAny(bwipp_pzn, opts, dwg);\n}\n;\nexport function qrcode(opts, dwg) {\n  return _ToAny(bwipp_qrcode, opts, dwg);\n}\n;\nexport function rationalizedCodabar(opts, dwg) {\n  return _ToAny(bwipp_rationalizedCodabar, opts, dwg);\n}\n;\nexport function raw(opts, dwg) {\n  return _ToAny(bwipp_raw, opts, dwg);\n}\n;\nexport function rectangularmicroqrcode(opts, dwg) {\n  return _ToAny(bwipp_rectangularmicroqrcode, opts, dwg);\n}\n;\nexport function royalmail(opts, dwg) {\n  return _ToAny(bwipp_royalmail, opts, dwg);\n}\n;\nexport function sscc18(opts, dwg) {\n  return _ToAny(bwipp_sscc18, opts, dwg);\n}\n;\nexport function swissqrcode(opts, dwg) {\n  return _ToAny(bwipp_swissqrcode, opts, dwg);\n}\n;\nexport function symbol(opts, dwg) {\n  return _ToAny(bwipp_symbol, opts, dwg);\n}\n;\nexport function telepen(opts, dwg) {\n  return _ToAny(bwipp_telepen, opts, dwg);\n}\n;\nexport function telepennumeric(opts, dwg) {\n  return _ToAny(bwipp_telepennumeric, opts, dwg);\n}\n;\nexport function ultracode(opts, dwg) {\n  return _ToAny(bwipp_ultracode, opts, dwg);\n}\n;\nexport function upca(opts, dwg) {\n  return _ToAny(bwipp_upca, opts, dwg);\n}\n;\nexport function upcacomposite(opts, dwg) {\n  return _ToAny(bwipp_upcacomposite, opts, dwg);\n}\n;\nexport function upce(opts, dwg) {\n  return _ToAny(bwipp_upce, opts, dwg);\n}\n;\nexport function upcecomposite(opts, dwg) {\n  return _ToAny(bwipp_upcecomposite, opts, dwg);\n}\n;\nexport { ToCanvas as toCanvas, ToSVG as toSVG, Render as render, LoadFont as loadFont, DrawingCanvas as drawingCanvas, DrawingSVG as drawingSVG, BWIPJS_VERSION, BWIPP_VERSION };\nexport default {\n  toCanvas: ToCanvas,\n  toSVG: ToSVG,\n  render: Render,\n  raw: ToRaw,\n  drawingCanvas: DrawingCanvas,\n  drawingSVG: DrawingSVG,\n  fixupOptions: FixupOptions,\n  loadFont: LoadFont,\n  FontLib,\n  BWIPJS_VERSION,\n  BWIPP_VERSION\n};","map":{"version":3,"names":["bwipp_auspost","bwipp_azteccode","bwipp_azteccodecompact","bwipp_aztecrune","bwipp_bc412","bwipp_channelcode","bwipp_codablockf","bwipp_code11","bwipp_code128","bwipp_code16k","bwipp_code2of5","bwipp_code32","bwipp_code39","bwipp_code39ext","bwipp_code49","bwipp_code93","bwipp_code93ext","bwipp_codeone","bwipp_coop2of5","bwipp_daft","bwipp_databarexpanded","bwipp_databarexpandedcomposite","bwipp_databarexpandedstacked","bwipp_databarexpandedstackedcomposite","bwipp_databarlimited","bwipp_databarlimitedcomposite","bwipp_databaromni","bwipp_databaromnicomposite","bwipp_databarstacked","bwipp_databarstackedcomposite","bwipp_databarstackedomni","bwipp_databarstackedomnicomposite","bwipp_databartruncated","bwipp_databartruncatedcomposite","bwipp_datalogic2of5","bwipp_datamatrix","bwipp_datamatrixrectangular","bwipp_datamatrixrectangularextension","bwipp_dotcode","bwipp_ean13","bwipp_ean13composite","bwipp_ean14","bwipp_ean2","bwipp_ean5","bwipp_ean8","bwipp_ean8composite","bwipp_flattermarken","bwipp_gs1_128","bwipp_gs1_128composite","bwipp_gs1_cc","bwipp_gs1datamatrix","bwipp_gs1datamatrixrectangular","bwipp_gs1dldatamatrix","bwipp_gs1dlqrcode","bwipp_gs1dotcode","bwipp_gs1northamericancoupon","bwipp_gs1qrcode","bwipp_hanxin","bwipp_hibcazteccode","bwipp_hibccodablockf","bwipp_hibccode128","bwipp_hibccode39","bwipp_hibcdatamatrix","bwipp_hibcdatamatrixrectangular","bwipp_hibcmicropdf417","bwipp_hibcpdf417","bwipp_hibcqrcode","bwipp_iata2of5","bwipp_identcode","bwipp_industrial2of5","bwipp_interleaved2of5","bwipp_isbn","bwipp_ismn","bwipp_issn","bwipp_itf14","bwipp_jabcode","bwipp_japanpost","bwipp_kix","bwipp_leitcode","bwipp_mailmark","bwipp_mands","bwipp_matrix2of5","bwipp_maxicode","bwipp_micropdf417","bwipp_microqrcode","bwipp_msi","bwipp_onecode","bwipp_pdf417","bwipp_pdf417compact","bwipp_pharmacode","bwipp_pharmacode2","bwipp_planet","bwipp_plessey","bwipp_posicode","bwipp_postnet","bwipp_pzn","bwipp_qrcode","bwipp_rationalizedCodabar","bwipp_raw","bwipp_rectangularmicroqrcode","bwipp_royalmail","bwipp_sscc18","bwipp_swissqrcode","bwipp_symbol","bwipp_telepen","bwipp_telepennumeric","bwipp_ultracode","bwipp_upca","bwipp_upcacomposite","bwipp_upce","bwipp_upcecomposite","bwipp_lookup","bwipp_encode","BWIPP_VERSION","BWIPJS_VERSION","ToCanvas","cvs","opts","HTMLCanvasElement","tmp","_ToAny","bcid","encoder","drawing","canvas","document","getElementById","querySelector","Error","DrawingCanvas","init","_Render","ToSVG","DrawingSVG","FixupOptions","scale","scaleX","scaleY","paddingleft","padding","paddingwidth","paddingright","paddingtop","paddingheight","paddingbottom","backgroundcolor","bgc","test","c","parseInt","substr","m","y","k","r","Math","floor","toString","g","b","length","a","s","BWIPJS_OPTIONS","text","rotate","Render","options","ReferenceError","setopts","bw","BWIPJS","bwippopts","id","alttext","includetext","height","width","render","ToRaw","arguments","DrawingBuiltin","stack","ids","pixs","pixx","pixy","sbs","bbs","bhs","i","elt","Map","obj","keys","size","next","value","val","get","Array","slice","o","splice","round","ceil","min","max","constructor","gstk","cmds","reset","minx","miny","Infinity","maxx","maxy","prototype","g_tdx","g_tdy","g_tsx","g_tsy","g_posx","g_posy","g_penw","g_path","g_font","g_rgb","g_clip","save","ctx","indexOf","clone","push","v","t","Object","restore","pop","self","unclip","currpos","x","currfont","translate","sxy","setlinewidth","w","selectfont","f","z","FontName","jsstring","FontSize","getfont","Uint8Array","String","fromCharCode","apply","setcolor","setrgbcolor","getRGB","newpath","closepath","path","plen","op","poly","xmin","ymin","xmax","ymax","x0","y0","x1","y1","moveto","rmoveto","lineto","rlineto","arc","sa","ea","ccw","rx","ry","stringwidth","str","tsx","tsy","toUCS2","bbox","measure","h","ascent","descent","d","charpath","sw","pathbbox","llx","lly","urx","ury","rv","transform","pts","pt","stroke","rgb","penw","penh","nlines","npolys","penw2","penh2","j","xj","yj","xi","yi","bigw2","bigh2","remw2","remh2","line","fill","polygon","p","ellipse","clip","polys","maxicode","pix","twidth","mwidth","wgap","hgap","w2","qh","vh","hexagon","replace","code","charCodeAt","show","dx","dy","name","szx","szy","posx","posy","base","l","end","tx0","tx1","tx2","tx3","ty0","ty1","ty2","ty3","gs_image","gs_rowbyte","gs_width","gs_height","gs_dx","gs_dy","gs_r","gs_g","gs_b","gs_xymap","gs_xyclip","sx","sy","font","fwidth","fheight","fontid","FontLib","lookup","ch","glyph","getglyph","top","left","advance","padl","padr","padt","padb","rot","sizelimit","swap","res","image","buffer","ispng","lw","set","npts","addPoint","yl","yr","xl","xr","fillSegment","drawEllipse","evenodd","xymap","gt","gl","gw","gh","gb","bytes","go","offset","clipped","tx","ty","offs","dsta","srca","inva","outa","sort","wn","n","dir","abs","b1","err","e2","right","maxedge","minedge","e","ey","sorted","xn","polydir","xp","maybe","img","getContext","willReadFrequently","_setopts","call","setTransform","fillStyle","fillRect","clearRect","getImageData","data","putImageData","svg","clipid","clips","lines","ELLIPSE_MAGIC","getpaths","key","seg","type","cx","cy","cx1","cy1","cx2","cy2","linesvg","bg","join","toFixed","fonts","names","glyphcache","glyphmru","glyphcount","prev","monochrome","loadFont","multx","multy","STBTT","InitFont","toUint8Array","bwipjs_name","bwipjs_multx","bwipjs_multy","toUpperCase","undefined","mono","charcode","cachekey","sntl","GetGlyph","pixels","temp","GetPaths","LoadFont","STBTT_vmove","STBTT_vline","STBTT_vcurve","STBTT_vcubic","STBTT_PLATFORM_ID_UNICODE","STBTT_PLATFORM_ID_MAC","STBTT_PLATFORM_ID_ISO","STBTT_PLATFORM_ID_MICROSOFT","STBTT_UNICODE_EID_UNICODE_1_0","STBTT_UNICODE_EID_UNICODE_1_1","STBTT_UNICODE_EID_ISO_10646","STBTT_UNICODE_EID_UNICODE_2_0_BMP","STBTT_UNICODE_EID_UNICODE_2_0_FULL","STBTT_MS_EID_SYMBOL","STBTT_MS_EID_UNICODE_BMP","STBTT_MS_EID_SHIFTJIS","STBTT_MS_EID_UNICODE_FULL","sqrt","oalloc","stbtt__buf_get8","cursor","stbtt__buf_peek8","stbtt__buf_seek","stbtt__buf_skip","stbtt__buf_get","stbtt__null_buf","stbtt__buf_range","subarray","stbtt__cff_get_index","start","count","offsize","stbtt__cff_int","b0","stbtt__cff_skip_operand","stbtt__dict_get","stbtt__dict_get_ints","outcount","out","operands","stbtt__dict_get_int","stbtt__cff_index_count","stbtt__cff_index_get","INT16","ttUSHORT","ttSHORT","ttULONG","stbtt__find_table","fontstart","tag","num_tables","tabledir","loc","stbtt__get_subrs","cff","fontdict","private_loc","pdict","subrsoff","stbtt_InitFont_internal","info","cmap","numTables","loca","head","glyf","hhea","hmtx","kern","topdict","topdictidx","cstype","charstrings","fdarrayoff","fdselectoff","fontdicts","fdselect","gsubrs","subrs","numGlyphs","index_map","encoding_record","indexToLocFormat","stbtt_FindGlyphIndex","unicode_codepoint","format","first","segcount","searchRange","entrySelector","rangeShift","endCount","search","item","ngroups","low","high","mid","start_char","end_char","start_glyph","stbtt_setvertex","stbtt__GetGlyfOffset","glyph_index","g1","g2","stbtt_GetGlyphBox","stbtt__GetGlyphInfoT2","stbtt__close_shape","vertices","num_vertices","was_off","start_off","scx","scy","stbtt__GetGlyphShapeTT","numberOfContours","flags","flagcount","next_move","off","endPtsOfContours","ins","points","ptsoff","more","comp","gidx","mtx","comp_verts","stbtt_GetGlyphShape","concat","stbtt__track_vertex","max_x","started","max_y","min_x","min_y","stbtt__csctx_v","stbtt__csctx_close_shape","first_x","first_y","stbtt__csctx_rmove_to","stbtt__csctx_rline_to","stbtt__csctx_rccurve_to","dx1","dy1","dx2","dy2","dx3","dy3","stbtt__get_subr","bias","stbtt__cid_get_glyph_subrs","nranges","fmt","fdselector","stbtt__run_charstring","in_header","maskbits","subr_stack_height","sp","has_subrs","clear_stack","subr_stack","dx4","dx5","dx6","dy4","dy5","dy6","stbtt__csctx_init","stbtt__GetGlyphShapeT2","output_ctx","stbtt_GetGlyphHMetrics","numOfLongHorMetrics","advanceWidth","leftSideBearing","stbtt_GetCodepointHMetrics","codepoint","stbtt_GetFontVMetrics","linegap","stbtt_GetGlyphBitmapBoxSubpixel","scale_x","scale_y","shift_x","shift_y","stbtt_GetCodepointBitmapBoxSubpixel","stbtt_GetCodepointBitmapBox","stbtt__new_active","off_x","start_point","dxdy","fdx","fdy","fx","direction","invert","stbtt__handle_clipped_edge","scanline","stbtt__fill_active_edges_new","scanline_fill","len","y_top","y_bottom","xb","x_top","x_bottom","sy0","sy1","x2","y_crossing","step","sign","area","x3","y3","y2","stbtt__rasterize_sorted_edges","result","edges","nedges","vsubsample","off_y","active","Float32Array","scanline2","eoff","scan_y_top","scan_y_bottom","$i","$l","sum","stride","stbtt__sort_edges_ins_sort","stbtt__sort_edges_quicksort","c01","c12","stbtt__sort_edges","stbtt__rasterize","wcount","y_scale_inv","stbtt__tesselate_curve","objspace_flatness_squared","mx","my","stbtt__tesselate_cubic","dx0","dy0","longlen","shortlen","flatness_squared","x01","y01","x12","y12","x23","y23","xa","ya","yb","stbtt_FlattenCurves","objspace_flatness","contour_lengths","nverts","stbtt_Rasterize","flatness_in_pixels","x_off","y_off","windings","stbtt_MakeGlyphBitmapSubpixel","out_w","out_h","out_stride","gbm","rect","stbtt_MakeCodepointBitmapSubpixel","stbtt_InitFont","vm","size_x","size_y","hmetrics","paths","binary","bstr","atob","ArrayBuffer","auspost","dwg","azteccode","azteccodecompact","aztecrune","bc412","channelcode","codablockf","code11","code128","code16k","code2of5","code32","code39","code39ext","code49","code93","code93ext","codeone","coop2of5","daft","databarexpanded","databarexpandedcomposite","databarexpandedstacked","databarexpandedstackedcomposite","databarlimited","databarlimitedcomposite","databaromni","databaromnicomposite","databarstacked","databarstackedcomposite","databarstackedomni","databarstackedomnicomposite","databartruncated","databartruncatedcomposite","datalogic2of5","datamatrix","datamatrixrectangular","datamatrixrectangularextension","dotcode","ean13","ean13composite","ean14","ean2","ean5","ean8","ean8composite","flattermarken","gs1_128","gs1_128composite","gs1_cc","gs1datamatrix","gs1datamatrixrectangular","gs1dldatamatrix","gs1dlqrcode","gs1dotcode","gs1northamericancoupon","gs1qrcode","hanxin","hibcazteccode","hibccodablockf","hibccode128","hibccode39","hibcdatamatrix","hibcdatamatrixrectangular","hibcmicropdf417","hibcpdf417","hibcqrcode","iata2of5","identcode","industrial2of5","interleaved2of5","isbn","ismn","issn","itf14","jabcode","japanpost","kix","leitcode","mailmark","mands","matrix2of5","micropdf417","microqrcode","msi","onecode","pdf417","pdf417compact","pharmacode","pharmacode2","planet","plessey","posicode","postnet","pzn","qrcode","rationalizedCodabar","raw","rectangularmicroqrcode","royalmail","sscc18","swissqrcode","symbol","telepen","telepennumeric","ultracode","upca","upcacomposite","upce","upcecomposite","toCanvas","toSVG","drawingCanvas","drawingSVG","fixupOptions"],"sources":["/Users/rizvan/Thor/react-apps/BarcodeByLink/BarcodeByLink/node_modules/bwip-js/dist/bwip-js.mjs"],"sourcesContent":["// This file is part of the bwip-js project available at:\n//\n//    http://metafloor.github.io/bwip-js\n//\n// Copyright (c) 2011-2024 Mark Warren\n//\n// This file contains code automatically generated from:\n// Barcode Writer in Pure PostScript - Version 2024-01-03\n// Copyright (c) 2004-2024 Terry Burton\n//\n// The MIT License\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\"use strict\";\n\nimport { bwipp_auspost,bwipp_azteccode,bwipp_azteccodecompact,bwipp_aztecrune,bwipp_bc412,bwipp_channelcode,bwipp_codablockf,bwipp_code11,bwipp_code128,bwipp_code16k,bwipp_code2of5,bwipp_code32,bwipp_code39,bwipp_code39ext,bwipp_code49,bwipp_code93,bwipp_code93ext,bwipp_codeone,bwipp_coop2of5,bwipp_daft,bwipp_databarexpanded,bwipp_databarexpandedcomposite,bwipp_databarexpandedstacked,bwipp_databarexpandedstackedcomposite,bwipp_databarlimited,bwipp_databarlimitedcomposite,bwipp_databaromni,bwipp_databaromnicomposite,bwipp_databarstacked,bwipp_databarstackedcomposite,bwipp_databarstackedomni,bwipp_databarstackedomnicomposite,bwipp_databartruncated,bwipp_databartruncatedcomposite,bwipp_datalogic2of5,bwipp_datamatrix,bwipp_datamatrixrectangular,bwipp_datamatrixrectangularextension,bwipp_dotcode,bwipp_ean13,bwipp_ean13composite,bwipp_ean14,bwipp_ean2,bwipp_ean5,bwipp_ean8,bwipp_ean8composite,bwipp_flattermarken,bwipp_gs1_128,bwipp_gs1_128composite,bwipp_gs1_cc,bwipp_gs1datamatrix,bwipp_gs1datamatrixrectangular,bwipp_gs1dldatamatrix,bwipp_gs1dlqrcode,bwipp_gs1dotcode,bwipp_gs1northamericancoupon,bwipp_gs1qrcode,bwipp_hanxin,bwipp_hibcazteccode,bwipp_hibccodablockf,bwipp_hibccode128,bwipp_hibccode39,bwipp_hibcdatamatrix,bwipp_hibcdatamatrixrectangular,bwipp_hibcmicropdf417,bwipp_hibcpdf417,bwipp_hibcqrcode,bwipp_iata2of5,bwipp_identcode,bwipp_industrial2of5,bwipp_interleaved2of5,bwipp_isbn,bwipp_ismn,bwipp_issn,bwipp_itf14,bwipp_jabcode,bwipp_japanpost,bwipp_kix,bwipp_leitcode,bwipp_mailmark,bwipp_mands,bwipp_matrix2of5,bwipp_maxicode,bwipp_micropdf417,bwipp_microqrcode,bwipp_msi,bwipp_onecode,bwipp_pdf417,bwipp_pdf417compact,bwipp_pharmacode,bwipp_pharmacode2,bwipp_planet,bwipp_plessey,bwipp_posicode,bwipp_postnet,bwipp_pzn,bwipp_qrcode,bwipp_rationalizedCodabar,bwipp_raw,bwipp_rectangularmicroqrcode,bwipp_royalmail,bwipp_sscc18,bwipp_swissqrcode,bwipp_symbol,bwipp_telepen,bwipp_telepennumeric,bwipp_ultracode,bwipp_upca,bwipp_upcacomposite,bwipp_upce,bwipp_upcecomposite,bwipp_lookup,bwipp_encode,BWIPP_VERSION } from './bwipp.mjs';\n\n// exports.js\nconst BWIPJS_VERSION = '4.3.0 (2024-03-12)';\n\n// bwipjs.toCanvas(canvas, options)\n// bwipjs.toCanvas(options, canvas)\n//\n// Uses the built-in canvas drawing.\n//\n// `canvas` can be an HTMLCanvasElement or an ID string or unique selector string.\n// `options` are a bwip-js/BWIPP options object.\n//\n// This function is synchronous and throws on error.\n//\n// Returns the HTMLCanvasElement.\nfunction ToCanvas(cvs, opts) {\n    if (typeof opts == 'string' || opts instanceof HTMLCanvasElement) {\n        let tmp = cvs;\n        cvs = opts;\n        opts = tmp;\n    }\n    return _ToAny(bwipp_lookup(opts.bcid), opts, cvs); \n}\n// Entry point for the symbol-specific exports\n//\n// Polymorphic internal interface\n// _ToAny(encoder, string, opts) : HTMLCanvasElement\n// _ToAny(encoder, HTMLCanvasElement, opts) : HTMLCanvasElement\n// _ToAny(encoder, opts, string) : HTMLCanvasElement\n// _ToAny(encoder, opts, HTMLCanvasElement) : HTMLCanvasElement\n// _ToAny(encoder, opts, drawing) : any\n//\n// 'string` can be either an `id` or query selector returning a single canvas element.\nfunction _ToAny(encoder, opts, drawing) {\n    if (typeof opts == 'string') {\n        var canvas = document.getElementById(opts) || document.querySelector(opts);\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw new Error('bwipjs: `' + opts + '`: not a canvas');\n        }\n        opts = drawing;\n        drawing = DrawingCanvas(canvas);\n    } else if (opts instanceof HTMLCanvasElement) {\n        var canvas = opts;\n        opts = drawing;\n        drawing = DrawingCanvas(canvas);\n    } else if (typeof drawing == 'string') {\n        var canvas = document.getElementById(drawing) || document.querySelector(drawing);\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw new Error('bwipjs: `' + drawing + '`: not a canvas');\n        }\n        drawing = DrawingCanvas(canvas);\n    } else if (drawing instanceof HTMLCanvasElement) {\n        drawing = DrawingCanvas(drawing);\n    } else if (!drawing || typeof drawing != 'object' || !drawing.init) {\n        throw new Error('bwipjs: not a canvas or drawing object');\n    } \n    return _Render(encoder, opts, drawing);\n}\n\n// bwipjs.toSVG(options)\n//\n// Uses the built-in svg drawing interface.\n//\n// `options` are a bwip-js/BWIPP options object.\n//\n// This function is synchronous and throws on error.\n//\n// Returns a string containing a fully qualified SVG definition,\n// including the natural width and height of the image, in pixels:\n//\n//  <svg viewBox=\"0 0 242 200\" xmlns=\"http://www.w3.org/2000/svg\">\n//   ...\n//  </svg>\n//\n// Available on all platforms.\nfunction ToSVG(opts) {\n    return _Render(bwipp_lookup(opts.bcid), opts, DrawingSVG());\n}\n\nfunction FixupOptions(opts) {\n    var scale   = opts.scale || 2;\n    var scaleX  = +opts.scaleX || scale;\n    var scaleY  = +opts.scaleY || scaleX;\n\n    // Fix up padding.\n    opts.paddingleft = padding(opts.paddingleft, opts.paddingwidth, opts.padding, scaleX);\n    opts.paddingright = padding(opts.paddingright, opts.paddingwidth, opts.padding, scaleX);\n    opts.paddingtop = padding(opts.paddingtop, opts.paddingheight, opts.padding, scaleY);\n    opts.paddingbottom = padding(opts.paddingbottom, opts.paddingheight, opts.padding, scaleY);\n\n    // We override BWIPP's background color functionality.  If in CMYK, convert to RRGGBB so\n    // the drawing interface is consistent.  Likewise, if in CSS-style #rgb or #rrggbb.\n    if (opts.backgroundcolor) {\n        var bgc = ''+opts.backgroundcolor;\n        if (/^[0-9a-fA-F]{8}$/.test(bgc)) {\n            var c = parseInt(bgc.substr(0,2), 16) / 255;\n            var m = parseInt(bgc.substr(2,2), 16) / 255;\n            var y = parseInt(bgc.substr(4,2), 16) / 255;\n            var k = parseInt(bgc.substr(6,2), 16) / 255;\n            var r = Math.floor((1-c) * (1-k) * 255).toString(16);\n            var g = Math.floor((1-m) * (1-k) * 255).toString(16);\n            var b = Math.floor((1-y) * (1-k) * 255).toString(16);\n            opts.backgroundcolor = (r.length == 1 ? '0' : '') + r +\n                                   (g.length == 1 ? '0' : '') + g +\n                                   (b.length == 1 ? '0' : '') + b;\n        } else {\n            if (bgc[0] == '#') {\n                bgc = bgc.substr(1);\n            }\n            if (/^[0-9a-fA-F]{6}$/.test(bgc)) {\n                opts.backgroundcolor = bgc;\n            } else if (/^[0-9a-fA-F]{3}$/.test(bgc)) {\n                opts.backgroundcolor = bgc[0] + bgc[0] + bgc[1] + bgc[1] + bgc[2] + bgc[2];\n            } else {\n                throw new Error('bwip-js: invalid backgroundcolor: ' + opts.backgroundcolor);\n            }\n        }\n    }\n\n    return opts;\n\n    function padding(a, b, c, s) {\n        if (a != null) {\n            return a*s;\n        }\n        if (b != null) {\n            return b*s;\n        }\n        return c*s || 0;\n    }\n}\n\nvar BWIPJS_OPTIONS = {\n    bcid:1,\n    text:1,\n    scale:1,\n    scaleX:1,\n    scaleY:1,\n    rotate:1,\n    padding:1,\n    paddingwidth:1,\n    paddingheight:1,\n    paddingtop:1,\n    paddingleft:1,\n    paddingright:1,\n    paddingbottom:1,\n    backgroundcolor:1,\n};\n\n// bwipjs.render(options, drawing)\n//\n// Renders a barcode using the provided drawing object.\n//\n// This function is synchronous and throws on error.\n//\n// Browser and nodejs usage.\nfunction Render(options, drawing) {\n    return _Render(bwipp_lookup(options.bcid), options, drawing);\n}\n\n// Called by the public exports\nfunction _Render(encoder, options, drawing) {\n    var text = options.text;\n    if (!text) {\n        throw new ReferenceError('bwip-js: bar code text not specified.');\n    }\n\n    // setopts() is optional on the drawing object.\n    FixupOptions(options);\n    drawing.setopts && drawing.setopts(options);\n\n    // Set the bwip-js defaults\n    var scale   = options.scale || 2;\n    var scaleX  = +options.scaleX || scale;\n    var scaleY  = +options.scaleY || scaleX;\n    var rotate  = options.rotate || 'N';\n\n    // Create a barcode writer object.  This is the interface between\n    // the low-level BWIPP code, the bwip-js graphics context, and the\n    // drawing interface.\n    var bw = new BWIPJS(drawing);\n\n    // Set the BWIPP options\n    var bwippopts = {};\n    for (var id in options) {\n        if (!BWIPJS_OPTIONS[id]) {\n            bwippopts[id] = options[id];\n        }\n    }\n\n    // Fix a disconnect in the BWIPP rendering logic\n    if (bwippopts.alttext) {\n        bwippopts.includetext = true;\n    }\n    // We use mm rather than inches for height - except pharmacode2 height\n    // which is already in mm.\n    if (+bwippopts.height && encoder != bwipp_pharmacode2) {\n        bwippopts.height = bwippopts.height / 25.4 || 0.5;\n    }\n    // Likewise, width\n    if (+bwippopts.width) {\n        bwippopts.width = bwippopts.width / 25.4 || 0;\n    }\n\n    // Scale the image\n    bw.scale(scaleX, scaleY);\n\n    // Call into the BWIPP cross-compiled code and render the image.\n    bwipp_encode(bw, encoder, text, bwippopts);\n\n    // Returns whatever drawing.end() returns, or `false` if nothing rendered.\n    return bw.render();\n}\n\n// bwipjs.raw(options)\n// bwipjs.raw(bcid, text, opts-string)\n//\n// Invokes the low level BWIPP code and returns the raw encoding data.\n//\n// This function is synchronous and throws on error.\n//\n// Browser and nodejs usage.\nfunction ToRaw(bcid, text, options) {\n    if (arguments.length == 1) {\n        options = bcid;\n        bcid = options.bcid;\n        text = options.text;\n    }\n\n    // The drawing interface is just needed for the pre-init() calls.\n    // Don't need to fixup the options - drawing specific.\n    var drawing = DrawingBuiltin();\n    drawing.setopts(options);\n\n    var bw = new BWIPJS(drawing);\n    var stack = bwipp_encode(bw, bwipp_lookup(bcid), text, options, true);\n\n    // bwip-js uses Maps to emulate PostScript dictionary objects; but Maps\n    // are not a typical/expected return value.  Convert to plain-old-objects.\n    var ids = { pixs:1, pixx:1, pixy:1, sbs:1, bbs:1, bhs:1, width:1, height:1 };\n    for (var i = 0; i < stack.length; i++) {\n        var elt = stack[i];\n        if (elt instanceof Map) {\n            var obj = {};\n            // Could they make Maps any harder to iterate over???\n            for (var keys = elt.keys(), size = elt.size, k = 0; k < size; k++) {\n                var id = keys.next().value;\n                if (ids[id]) {\n                    var val = elt.get(id);\n                    if (val instanceof Array) {\n                        // The postscript arrays have extra named properties\n                        // to emulate array views.  Return cleaned up arrays.\n                        obj[id] = val.b.slice(val.o, val.o + val.length);\n                    } else {\n                        obj[id] = val;\n                    }\n                }\n            }\n            stack[i] = obj;\n        } else {\n            // This should never exec...\n            stack.splice(i--, 1);\n        }\n    }\n    return stack;\n}\n// file : bwipjs.js\n//\n// Graphics-context interface to the BWIPP cross-compiled code\n\nvar BWIPJS = (function() {\n\n// Math.floor(), etc. are notoriously slow.  Caching seems to help.\nvar floor = Math.floor;\nvar round = Math.round;\nvar ceil  = Math.ceil;\nvar min   = Math.min;\nvar max   = Math.max;\n\nfunction BWIPJS(drawing) {\n    if (this.constructor !== BWIPJS) {\n        return new BWIPJS(drawing);\n    }\n    this.gstk    = [];      // Graphics save/restore stack\n    this.cmds    = [];      // Graphics primitives to replay when rendering\n    this.drawing = drawing; // Drawing interface\n\n    this.reset();\n\n    // Drawing surface bounding box\n    this.minx = this.miny = Infinity;\n    this.maxx = this.maxy = -Infinity;\n};\n\n// All graphics state that must be saved/restored is given a prefix of g_\nBWIPJS.prototype.reset = function() {\n    // Current Transform Matrix - since we don't do rotation, we can fake\n    // the matrix math\n    this.g_tdx  = 0;        // CTM x-offset\n    this.g_tdy  = 0;        // CTM y-offset\n    this.g_tsx  = 1;        // CTM x-scale factor\n    this.g_tsy  = 1;        // CTM y-scale factor\n\n    this.g_posx = 0;        // current x position\n    this.g_posy = 0;        // current y position\n    this.g_penw = 1;        // current line/pen width\n    this.g_path = [];       // current path\n    this.g_font = null;     // current font object\n    this.g_rgb  = [0,0,0];  // current color (black)\n    this.g_clip = false;    // clip region active\n};\nBWIPJS.prototype.save = function() {\n    // clone all g_ properties\n    var ctx = {};\n    for (var id in this) {\n        if (id.indexOf('g_') == 0) {\n            ctx[id] = clone(this[id]);\n        }\n    }\n    this.gstk.push(ctx);\n\n    // Perform a deep clone of the graphics state properties\n    function clone(v) {\n        if (v instanceof Array) {\n            var t = [];\n            for (var i = 0; i < v.length; i++)\n                t[i] = clone(v[i]);\n            return t;\n        }\n        if (v instanceof Object) {\n            var t = {};\n            for (var id in v)\n                t[id] = clone(v[id]);\n            return t;\n        }\n        return v;\n    }\n};\nBWIPJS.prototype.restore = function() {\n    if (!this.gstk.length) {\n        throw new Error('grestore: stack underflow');\n    }\n    var ctx  = this.gstk.pop();\n    var self = this;\n    if (this.g_clip && !ctx.g_clip) {\n        this.cmds.push(function() {\n                self.drawing.unclip();\n            });\n    }\n    for (var id in ctx) {\n        this[id] = ctx[id];\n    }\n};\n// Per the postscript spec:\n//  As discussed in Section 4.4.1, Current Path, points entered into a path\n//  are immediately converted to device coordinates by the current\n//  transformation matrix (CTM); subsequent modifications to the CTM do not\n//  affect existing points.  `currentpoint` computes the user space\n//  coordinates corresponding to the current point according to the current\n//  value of the CTM. Thus, if a current point is set and then the CTM is\n//  changed, the coordinates returned by currentpoint will be different\n//  from those that were originally specified for the point. \nBWIPJS.prototype.currpos = function() {\n    return { x:(this.g_posx-this.g_tdx)/this.g_tsx,\n             y:(this.g_posy-this.g_tdy)/this.g_tsy\n        };\n};\nBWIPJS.prototype.currfont = function() {\n    return this.g_font;\n};\nBWIPJS.prototype.translate = function(x, y) {\n    this.g_tdx = this.g_tsx * x;\n    this.g_tdy = this.g_tsy * y;\n};\nBWIPJS.prototype.scale = function(x, y) {\n    this.g_tsx *= x;\n    this.g_tsy *= y;\n    var sxy = this.drawing.scale(this.g_tsx, this.g_tsy);\n    if (sxy && sxy[0] && sxy[1]) {\n        this.g_tsx = sxy[0];\n        this.g_tsy = sxy[1];\n    }\n};\nBWIPJS.prototype.setlinewidth = function(w) {\n    this.g_penw = w;\n};\nBWIPJS.prototype.selectfont = function(f, z) {\n    this.g_font = { FontName:this.jsstring(f), FontSize:+z };\n};\nBWIPJS.prototype.getfont = function() {\n    return this.g_font.FontName;\n};\n// Special function for converting a Uint8Array string to string.\nBWIPJS.prototype.jsstring = function(s) {\n    if (s instanceof Uint8Array) {\n        // Postscript (like C) treats nul-char as end of string.\n        //for (var i = 0, l = s.length; i < l && s[i]; i++);\n        //if (i < l) {\n        //  return String.fromCharCode.apply(null,s.subarray(0, i));\n        //}\n        return String.fromCharCode.apply(null,s)\n    }\n    return ''+s;\n};\n// Special function to replace setanycolor in BWIPP.\n// Converts a string of hex digits either rgb, rrggbb or ccmmyykk.\n// Or CSS-style #rgb and #rrggbb.\nBWIPJS.prototype.setcolor = function(s) {\n    if (s instanceof Uint8Array) {\n        s = this.jsstring(s);\n    }\n    if (!s) {\n        return;\n    }\n    if (!/^(?:#?[0-9a-fA-F]{3}(?:[0-9a-fA-F]{3})?|[0-9a-fA-F]{8})$/.test(s)) {\n        throw new Error('bwip-js: invalid color: ' + s); \n    }\n    if (s[0] == '#') {\n        s = s.substr(1);\n    }\n    if (s.length == 3) {\n        var r = parseInt(s[0], 16);\n        var g = parseInt(s[1], 16);\n        var b = parseInt(s[2], 16);\n        this.g_rgb = [ r<<4|r, g<<4|g, b<<4|b ];\n    } else if (s.length == 6) {\n        var r = parseInt(s.substr(0,2), 16);\n        var g = parseInt(s.substr(2,2), 16);\n        var b = parseInt(s.substr(4,2), 16);\n        this.g_rgb = [ r, g, b ];\n    } else {\n        var c = parseInt(s.substr(0,2), 16) / 255;\n        var m = parseInt(s.substr(2,2), 16) / 255;\n        var y = parseInt(s.substr(4,2), 16) / 255;\n        var k = parseInt(s.substr(6,2), 16) / 255;\n        var r = round((1-c) * (1-k) * 255);\n        var g = round((1-m) * (1-k) * 255);\n        var b = round((1-y) * (1-k) * 255);\n        this.g_rgb = [ r, g, b ];\n    }\n};\n// Used only by swissqrcode\nBWIPJS.prototype.setrgbcolor = function(r,g,b) {\n    this.g_rgb = [ r, g, b ];\n};\n// Returns the current rgb values as a 'RRGGBB'\nBWIPJS.prototype.getRGB = function() {\n    var r = this.g_rgb[0].toString(16);\n    var g = this.g_rgb[1].toString(16);\n    var b = this.g_rgb[2].toString(16);\n    return '00'.substr(r.length) + r + '00'.substr(g.length) + g + '00'.substr(b.length) + b;\n};\nBWIPJS.prototype.newpath = function() {\n    this.g_path = [];\n};\nBWIPJS.prototype.closepath = function() {\n    var path = this.g_path;\n    var plen = path.length;\n    if (!plen) return;\n\n    var f = plen-1;\n    for ( ; f >= 0 && path[f].op == 'l'; f--);\n    f++;\n    if (f < plen-1) {\n        var poly = [];\n        var xmin = Infinity;\n        var ymin = Infinity;\n        var xmax = -Infinity;\n        var ymax = -Infinity;\n        for (var i = f; i < plen; i++) {\n            var a = path[i];\n            poly.push([ a.x0, a.y0 ]);\n            if (xmin > a.x0) xmin = a.x0;\n            if (xmax < a.x0) xmax = a.x0;\n            if (ymin > a.y0) ymin = a.y0;\n            if (ymax < a.y0) ymax = a.y0;\n        }\n        var a = path[plen-1];\n        var b = path[f];\n        if (a.x1 != b.x0 || a.y1 != b.y0) {\n            poly.push([ a.x1, a.y1 ]);\n            if (xmin > a.x1) xmin = a.x1;\n            if (xmax < a.x1) xmax = a.x1;\n            if (ymin > a.y1) ymin = a.y1;\n            if (ymax < a.y1) ymax = a.y1;\n        }\n        path.splice(f, plen-f,\n                    { op:'p', x0:xmin, y0:ymin, x1:xmax, y1:ymax, poly:poly });\n    } else {\n        path.push({ op:'c' });\n    }\n};\nBWIPJS.prototype.moveto = function(x,y) {\n    this.g_posx = this.g_tdx + this.g_tsx * x;\n    this.g_posy = this.g_tdy + this.g_tsy * y;\n};\nBWIPJS.prototype.rmoveto = function(x,y) {\n    this.g_posx += this.g_tsx * x;\n    this.g_posy += this.g_tsy * y;\n};\nBWIPJS.prototype.lineto = function(x,y) {\n    var x0 = round(this.g_posx);\n    var y0 = round(this.g_posy);\n    this.g_posx = this.g_tdx + this.g_tsx * x;\n    this.g_posy = this.g_tdy + this.g_tsy * y;\n    var x1 = round(this.g_posx);\n    var y1 = round(this.g_posy);\n\n    this.g_path.push({ op:'l', x0:x0, y0:y0, x1:x1, y1:y1 });\n};\nBWIPJS.prototype.rlineto = function(x,y) {\n    var x0 = round(this.g_posx);\n    var y0 = round(this.g_posy);\n    this.g_posx += this.g_tsx * x;\n    this.g_posy += this.g_tsy * y;\n    var x1 = round(this.g_posx);\n    var y1 = round(this.g_posy);\n\n    this.g_path.push({ op:'l', x0:x0, y0:y0, x1:x1, y1:y1 });\n};\n// implements both arc and arcn\nBWIPJS.prototype.arc = function(x,y,r,sa,ea,ccw) {\n    if (sa == ea) {\n        return;\n    }\n    // For now, we only implement full circles...\n    if (sa != 0 && sa != 360 || ea != 0 && ea != 360) {\n        throw new Error('arc: not a full circle (' + sa + ',' + ea + ')');\n    }\n\n    x = this.g_tdx + this.g_tsx * x;\n    y = this.g_tdy + this.g_tsy * y;\n\n    // e == ellipse\n    var rx = r * this.g_tsx;\n    var ry = r * this.g_tsy;\n    this.g_path.push({ op:'e', x0:x-rx, y0:y-ry, x1:x+rx, y1:y+ry,\n                                x:x, y:y, rx:rx, ry:ry, sa:sa, ea:ea, ccw:ccw });\n};\nBWIPJS.prototype.stringwidth = function(str) {\n    var tsx  = this.g_tsx;\n    var tsy  = this.g_tsy;\n    var size = +this.g_font.FontSize || 10;\n\n    // The string can be either a uint8-string or regular string\n    str = this.toUCS2(this.jsstring(str));\n\n    var bbox = this.drawing.measure(str, this.g_font.FontName, size*tsx, size*tsy);\n\n    return { w:bbox.width/tsx, h:(bbox.ascent+bbox.descent)/tsy,\n             a:bbox.ascent/tsy, d:bbox.descent/tsy };\n};\nBWIPJS.prototype.charpath = function(str, b) {\n    var sw = this.stringwidth(str);\n\n    // Emulate the char-path by placing a rectangle around it\n    this.rlineto(0, sw.a);\n    this.rlineto(sw.w, 0);\n    this.rlineto(0, -sw.h);\n};\nBWIPJS.prototype.pathbbox = function() {\n    if (!this.g_path.length)    throw new Error('pathbbox: --nocurrentpoint--');\n    var path = this.g_path;\n    var llx = Infinity;\n    var lly = Infinity;\n    var urx = -Infinity;\n    var ury = -Infinity;\n    for (var i = 0; i < path.length; i++) {\n        var a = path[i];\n        if (a.op == 'c') {\n            continue;\n        }\n        if (a.x0 < a.x1) {\n            if (llx > a.x0) llx = a.x0;\n            if (urx < a.x1) urx = a.x1;\n        } else {\n            if (llx > a.x1) llx = a.x1;\n            if (urx < a.x0) urx = a.x0;\n        }\n        if (a.y0 < a.y1) {\n            if (lly > a.y0) lly = a.y0;\n            if (ury < a.y1) ury = a.y1;\n        } else {\n            if (lly > a.y1) lly = a.y1;\n            if (ury < a.y0) ury = a.y0;\n        }\n    }\n\n    // Convert to user-space coordinates\n    var rv = {  llx:(llx-this.g_tdx)/this.g_tsx,\n                lly:(lly-this.g_tdy)/this.g_tsy,\n                urx:(urx-this.g_tdx)/this.g_tsx,\n                ury:(ury-this.g_tdy)/this.g_tsy };\n    return rv;\n};\n// Tranforms the pts array to standard (not y-inverted), unscalled values.\nBWIPJS.prototype.transform = function(pts) {\n    var minx = this.minx;\n    var maxy = this.maxy;\n\n    for (var i = 0; i < pts.length; i++) {\n        var pt = pts[i];\n        pt[0] = pt[0] - minx;\n        pt[1] = maxy - pt[1];\n    }\n};\nBWIPJS.prototype.stroke = function() {\n    var tsx  = this.g_tsx;\n    var tsy  = this.g_tsy;\n    var path = this.g_path;\n    var rgb  = this.getRGB();\n    this.g_path = [];\n\n    // This is a \"super majority\" round i.e. if over .66 round up.\n    var penw = floor(this.g_penw * tsx + 0.66);\n    var penh = floor(this.g_penw * tsy + 0.66);\n\n    // Calculate the bounding boxes\n    var nlines = 0, npolys = 0;\n    for (var i = 0; i < path.length; i++) {\n        var a = path[i];\n        if (a.op == 'l') {\n            // We only stroke vertical and horizontal lines.  Complex shapes are\n            // always filled.\n            if (a.x0 != a.x1 && a.y0 != a.y1) {\n                throw new Error('stroke: --not-orthogonal--');\n            }\n            var x0 = a.x0;\n            var y0 = a.y0;\n            var x1 = a.x1;\n            var y1 = a.y1;\n\n            // Half widths (may be factional)\n            var penw2 = penw/2;\n            var penh2 = penh/2;\n\n            if (x0 > x1) { var t = x0; x0 = x1; x1 = t; }\n            if (y0 > y1) { var t = y0; y0 = y1; y1 = t; }\n            if (x0 == x1) {\n                this.bbox(x0-penw2, y0, x0+penw-penw2-1, y1);   // vertical line\n            } else {\n                this.bbox(x0, y0-penh+penh2+1, x1, y1+penh2);   // horizontal line\n            }\n            nlines++;\n        } else if (a.op == 'p') {\n            // Closed (rectangular) poly (border around the barcode)\n            var minx = Infinity;\n            var miny = Infinity;\n            var maxx = -Infinity;\n            var maxy = -Infinity;\n            var pts  = a.poly;\n            if (pts.length != 4) {\n                throw new Error('stroke: --not-a-rect--');\n            }\n            for (var i = 0, j = pts.length-1; i < pts.length; j = i++) {\n                var xj = pts[j][0];\n                var yj = pts[j][1];\n                var xi = pts[i][0];\n                var yi = pts[i][1];\n\n                if (xi != xj && yi != yj) {\n                    throw new Error('stroke: --not-orthogonal--');\n                }\n\n                if (xi < minx) minx = xi;\n                if (xi > maxx) maxx = xi;\n                if (yi < miny) miny = yi;\n                if (yi > maxy) maxy = yi;\n            }\n\n            // Half widths (integer)\n            var penw2 = ceil(penw/2);\n            var penh2 = ceil(penh/2);\n\n            // We render these as two polygons plus a fill.\n            // When border width is odd, allocate the bigger half to the outside.\n            this.bbox(minx-penw2, miny-penh2, maxx+penw2, maxy+penh2);\n            npolys++;\n        } else {\n            throw new Error('stroke: --not-a-line--');\n        }\n    }\n\n    // Draw the lines\n    var self = this;\n    this.cmds.push(function() {\n        // Half widths (big half and remaining half)\n        var bigw2 = ceil(penw/2);\n        var bigh2 = ceil(penh/2);\n        var remw2 = penw - bigw2;\n        var remh2 = penh - bigh2;\n\n        for (var i = 0; i < path.length; i++) {\n            var a = path[i]\n            if (a.op == 'l') {\n                var pts = [ [ a.x0, a.y0 ], [ a.x1, a.y1 ] ];\n                self.transform(pts);\n                self.drawing.line(pts[0][0], pts[0][1], pts[1][0], pts[1][1],\n                            a.x0 == a.x1 ? penw : penh, rgb);\n                self.fill(rgb);\n            } else {\n                var pts = a.poly;\n                self.transform(pts);\n                var x0 = min(pts[0][0], pts[2][0]);\n                var x1 = max(pts[0][0], pts[2][0]);\n                var y0 = min(pts[0][1], pts[2][1]);\n                var y1 = max(pts[0][1], pts[2][1]);\n\n                // Top and left edges are \"inside\" the polygon.\n                // Bottom and right edges are outside.\n                self.drawing.polygon([\n                        [ x0-bigw2, y0-bigh2 ],\n                        [ x0-bigw2, y1+bigh2+1 ],\n                        [ x1+bigw2+1, y1+bigh2+1 ],\n                        [ x1+bigw2+1, y0-bigh2 ]\n                    ]);\n                self.drawing.polygon([\n                        [ x0+remw2, y0+remh2 ],\n                        [ x0+remw2, y1-remh2+1 ],\n                        [ x1-remw2+1, y1-remh2+1 ],\n                        [ x1-remw2+1, y0+remh2 ],\n                    ]);\n                self.drawing.fill(rgb);\n            }\n        }\n    });\n};\nBWIPJS.prototype.fill = function() {\n    var path = this.g_path;\n    var rgb  = this.getRGB();\n    this.g_path = [];\n\n    // Calculate the bounding boxes\n    for (var p = 0; p < path.length; p++) {\n        var a = path[p];\n        if (a.op == 'p') {  // polygon\n            var minx = Infinity;\n            var miny = Infinity;\n            var maxx = -Infinity;\n            var maxy = -Infinity;\n            var pts  = a.poly;\n            for (var i = 0; i < pts.length; i++) {\n                var xi = pts[i][0];\n                var yi = pts[i][1];\n\n                if (xi < minx) minx = xi;\n                if (xi > maxx) maxx = xi;\n                if (yi < miny) miny = yi;\n                if (yi > maxy) maxy = yi;\n            }\n            // With polygons, the right and bottom edges are \"outside\" and do not\n            // contribute to the bounding box.  But we are in postscript inverted-y\n            // mode.\n            this.bbox(minx, miny+1, maxx-1, maxy);\n        } else if (a.op == 'e') {   // ellipse\n            this.bbox(a.x - a.rx, a.y - a.ry, a.x + a.rx, a.y + a.ry);\n        } else {\n            throw new Error('fill: --not-a-polygon--');\n        }\n    }\n\n    // Render the poly\n    var self = this;\n    this.cmds.push(function() {\n        for (var i = 0; i < path.length; i++) {\n            var a = path[i];\n            if (a.op == 'p') {\n                var pts = a.poly\n                self.transform(pts);\n                self.drawing.polygon(pts);\n            } else if (a.op == 'e') {\n                var pts = [ [ a.x, a.y ] ];\n                self.transform(pts);\n                self.drawing.ellipse(pts[0][0], pts[0][1], a.rx, a.ry, a.ccw);\n            }\n        }\n        self.drawing.fill(rgb);\n    });\n};\nBWIPJS.prototype.clip = function() {\n    var path = this.g_path;\n    this.g_path = [];\n    this.g_clip = true;\n\n    var self = this;\n    this.cmds.push(function() {\n        var polys = [];\n        for (var i = 0; i < path.length; i++) {\n            var a = path[i];\n            if (a.op == 'p') {\n                var pts = a.poly\n                self.transform(pts);\n                polys.push(pts);\n            } else {\n                throw new Error('clip: only polygon regions supported');\n            }\n        }\n        self.drawing.clip(polys);\n    });\n};\n\n// The pix array is in standard (not y-inverted postscript) orientation.\nBWIPJS.prototype.maxicode = function(pix) {\n    var tsx = this.g_tsx;\n    var tsy = this.g_tsy;\n    var rgb = this.getRGB();\n\n    // Module width.  Module height is an integer multiple of tsy.\n    var twidth = 1.04 * tsx * 100;\n    var mwidth = (twidth / 30)|0;\n    if (twidth - (mwidth*30-1) > 9) {\n        mwidth++;\n    }\n\n    // Dimensions needed for plotting the hexagons.  These must be integer values.\n    var w, h, wgap, hgap;\n    // if (opts.??? ) {\n    //  // Create a one or two pixel gap\n    //  wgap = (mwidth & 1) ? 1 : 2;\n    //  hgap = 1;\n    //  w = mwidth - gap;\n    //  h = 4 * tsy;\n    // } else {\n        // Create a 1/8mm gap\n        wgap = (tsx/2)|0;\n        hgap = (tsy/2)|0;\n        w = mwidth - wgap;\n        if (w & 1) {\n            w--;\n        }\n        h = ((4*tsy)|0) - hgap;\n    //}\n\n    // These must be integer values\n    var w2 = w / 2 - 1;         // half width\n    var qh = ((w2+1) / 2)|0;    // quarter height\n    var vh = h - 2 - 2 * qh;    // side height\n\n    // Bounding box\n    this.bbox(0, 0, mwidth*30 - wgap, tsy * 3 * 32 + tsy * 4 - hgap);\n\n    // Render the elements\n    var self = this;\n    this.cmds.push(function() {\n        // Draw the hexagons\n        for (var i = 0; i < pix.length; i++) {\n            var c = pix[i];\n            var x = c % 30;\n            var y = (c / 30)|0;\n\n            // Adjust x,y to the top of hexagon\n            x *= mwidth;\n            x += (y & 1) ? mwidth : mwidth/2;\n            x = x|0;\n\n            y = 33 - y; // invert for postscript notation\n            y *= tsy * 3;\n            y += tsy * 2 - h/2;\n            y = y|0;\n            \n            // Build bottom up so the drawing is top-down.\n            var pts = [ [ x-0.5, y-- ] ]; \n            y -= qh-1;\n            pts.push([x-1-w2, y--]);\n            y -= vh;\n            pts.push([x-1-w2, y--]);\n            y -= qh-1;\n            pts.push([x-0.5, y++]);\n            y += qh-1;\n            pts.push([x+w2, y++]);\n            y += vh;\n            pts.push([x+w2, y++]);\n\n            self.transform(pts);\n            self.drawing.hexagon(pts, rgb);\n        }\n        self.drawing.fill(rgb);\n\n\n        // Draw the rings\n        var x = (14 * mwidth + mwidth/2 + 0.01)|0;\n        var y = ((12 * 4 + 3) * tsy - qh/2 + 0.01)|0;\n        self.drawing.ellipse(x, y, (0.5774*3.5*tsx+0.01)|0, (0.5774*3.5*tsy+0.01)|0, true);\n        self.drawing.ellipse(x, y, (1.3359*3.5*tsx+0.01)|0, (1.3359*3.5*tsy+0.01)|0, false);\n        self.drawing.fill(rgb);\n        self.drawing.ellipse(x, y, (2.1058*3.5*tsx+0.01)|0, (2.1058*3.5*tsy+0.01)|0, true);\n        self.drawing.ellipse(x, y, (2.8644*3.5*tsx+0.01)|0, (2.8644*3.5*tsy+0.01)|0, false);\n        self.drawing.fill(rgb);\n        self.drawing.ellipse(x, y, (3.6229*3.5*tsx+0.01)|0, (3.6229*3.5*tsy+0.01)|0, true);\n        self.drawing.ellipse(x, y, (4.3814*3.5*tsx+0.01)|0, (4.3814*3.5*tsy+0.01)|0, false);\n        self.drawing.fill(rgb);\n\n    });\n};\n// UTF-8 to UCS-2 (no surrogates)\nBWIPJS.prototype.toUCS2 = function(str) {\n    return str.replace(/[\\xc0-\\xdf][\\x80-\\xbf]|[\\xe0-\\xff][\\x80-\\xbf]{2}/g,\n                      function(s) {\n                          var code;\n                          if (s.length == 2) {\n                              code = ((s.charCodeAt(0)&0x1f)<<6)|\n                                     (s.charCodeAt(1)&0x3f);\n                          } else {\n                              code = ((s.charCodeAt(0)&0x0f)<<12)|\n                                     ((s.charCodeAt(1)&0x3f)<<6)|\n                                     (s.charCodeAt(2)&0x3f);\n                          }\n                          return String.fromCharCode(code);\n                      });\n};\n// dx,dy are inter-character gaps\nBWIPJS.prototype.show = function(str, dx, dy) {\n    if (!str.length) {\n        return;\n    }\n\n    // Capture current graphics state\n    var tsx  = this.g_tsx;\n    var tsy  = this.g_tsy;\n    var name = this.g_font.FontName || 'OCR-B';\n    var size = (this.g_font.FontSize || 10);\n    var szx  = size * tsx;\n    var szy  = size * tsy;\n    var posx = this.g_posx;\n    var posy = this.g_posy;\n    var rgb  = this.getRGB();\n\n    // The string can be either a uint8-string or regular string.\n    str = this.toUCS2(this.jsstring(str));\n\n    // Convert dx,dy to device space\n    dx = tsx * dx || 0;\n    dy = tsy * dy || 0;\n\n    // Bounding box.\n    var base = posy + dy;\n    var bbox = this.drawing.measure(str, name, szx, szy);\n    var width = bbox.width + (str.length-1) * dx;\n    this.bbox(posx, base-bbox.descent+1, posx+width-1, base+bbox.ascent);\n    this.g_posx += width;\n\n    var self = this;\n    self.cmds.push(function() {\n        // self.transform()\n        var x = posx - self.minx;\n        var y = self.maxy - posy;\n        self.drawing.text(x, y, str, rgb, { name:name, width:szx, height:szy, dx:dx });\n    });\n};\n// drawing surface bounding box\nBWIPJS.prototype.bbox = function(x0, y0, x1, y1) {\n    if (x0 > x1) { var t = x0; x0 = x1; x1 = t; }\n    if (y0 > y1) { var t = y0; y0 = y1; y1 = t; }\n\n    x0 = floor(x0);\n    y0 = floor(y0);\n    x1 = ceil(x1);\n    y1 = ceil(y1);\n\n    if (this.minx > x0) this.minx = x0;\n    if (this.maxx < x1) this.maxx = x1;\n    if (this.miny > y0) this.miny = y0;\n    if (this.maxy < y1) this.maxy = y1;\n};\nBWIPJS.prototype.render = function() {\n    if (this.minx === Infinity) {\n        // Most likely, `dontdraw` was set in the options\n        return false;\n    }\n    // Draw the image\n    this.drawing.init(this.maxx - this.minx + 1, this.maxy - this.miny + 1,\n                      this.g_tsx, this.g_tsy);\n    for (var i = 0, l = this.cmds.length; i < l; i++) {\n        this.cmds[i]();\n    }\n    return this.drawing.end();\n};\n\nreturn BWIPJS;\n})();   // BWIPJS closure\n// drawing-builtin.js\n//\n// The aliased (except the fonts) graphics used by drawing-canvas.js and\n// drawing-zlibpng.js\n//\n// All x,y and lengths are integer values.\n//\n// For the methods that take a color `rgb` parameter, the value is always a\n// string with format RRGGBB.\nfunction DrawingBuiltin() {\n    var floor = Math.floor;\n\n    // Unrolled x,y rotate/translate matrix\n    var tx0 = 0, tx1 = 0, tx2 = 0, tx3 = 0;\n    var ty0 = 0, ty1 = 0, ty2 = 0, ty3 = 0;\n\n    var opts;                   // see setopts()\n    var gs_image, gs_rowbyte;   // rowbyte will be 1 for png's, 0 for canvas\n    var gs_width, gs_height;    // image size, in pixels\n    var gs_dx, gs_dy;           // x,y translate (padding)\n    var gs_r, gs_g, gs_b;       // rgb\n    var gs_xymap;               // edge map\n    var gs_xyclip;              // clip region map (similar to xymap)\n\n    return {\n        // setopts() is called after the options are fixed-up/normalized,\n        // but before calling into BWIPP.\n        // This method allows omitting the options in the constructor call.\n        // The method is optional.\n        setopts(options) {\n            opts = options;\n        },\n\n        // Ensure compliant bar codes by always using integer scaling factors.\n        scale : function(sx, sy) {\n            // swissqrcode requires clipping and drawing that are not scaled to the\n            // the barcode module size.\n            if (opts.bcid == 'swissqrcode') {\n                return [ sx, sy ];\n            } else {\n                return [ (sx|0)||1, (sy|0)||1 ];\n            }\n        },\n\n        // Measure text.  This and scale() are the only drawing primitives that\n        // are called before init().\n        //\n        // `font` is the font name typically OCR-A or OCR-B.\n        // `fwidth` and `fheight` are the requested font cell size.  They will\n        // usually be the same, except when the scaling is not symetric.\n        measure : function(str, font, fwidth, fheight) {\n            fwidth = fwidth|0;\n            fheight = fheight|0;\n\n            var fontid = FontLib.lookup(font);\n            var width = 0;\n            var ascent = 0;\n            var descent = 0;\n            for (var i = 0, l = str.length; i < l; i++) {\n                var ch = str.charCodeAt(i);\n                var glyph = FontLib.getglyph(fontid, ch, fwidth, fheight);\n\n                ascent  = Math.max(ascent, glyph.top);\n                descent = Math.max(descent, glyph.height - glyph.top);\n\n                if (i == l-1) {\n                    width += glyph.left + glyph.width;\n                } else {\n                    width += glyph.advance;\n                }\n            }\n            return { width:width, ascent:ascent, descent:descent };\n        },\n\n        // width and height represent the maximum bounding box the graphics will occupy.\n        // The dimensions are for an unrotated rendering.  Adjust as necessary.\n        init : function(width, height) {\n            // Add in the effects of padding.  These are always set before the\n            // drawing constructor is called.\n            var padl = opts.paddingleft;\n            var padr = opts.paddingright;\n            var padt = opts.paddingtop;\n            var padb = opts.paddingbottom;\n            var rot  = opts.rotate || 'N';\n\n            width  += padl + padr;\n            height += padt + padb;\n\n            if (+opts.sizelimit && +opts.sizelimit < width * height) {\n                throw new Error('Image size over limit');\n            }\n\n            // Transform indexes are: x, y, w, h\n            switch (rot) {\n            // tx = w-y, ty = x\n            case 'R': tx1 = -1; tx2 = 1; ty0 = 1; break;\n            // tx = w-x, ty = h-y\n            case 'I': tx0 = -1; tx2 = 1; ty1 = -1; ty3 = 1; break;\n            // tx = y, ty = h-x\n            case 'L': tx1 = 1; ty0 = -1; ty3 = 1; break;\n            // tx = x, ty = y\n            default:  tx0 = ty1 = 1; break;\n            }\n\n            // Setup the graphics state\n            var swap = rot == 'L' || rot == 'R';\n            gs_width  = swap ? height : width;\n            gs_height = swap ? width : height;\n            gs_dx = padl;\n            gs_dy = padt;\n            gs_xymap = [];\n            gs_xymap.min = Infinity;\n            gs_xyclip = null;\n            gs_r = gs_g = gs_b = 0;\n\n            // Get the rgba image from the constructor\n            var res = this.image(gs_width, gs_height);\n            gs_image   = res.buffer;\n            gs_rowbyte = res.ispng ? 1 : 0;\n        },\n        // Unconnected stroked lines are used to draw the bars in linear barcodes;\n        // and the border around a linear barcode (e.g. ITF-14)\n        // No line cap should be applied.  These lines are always orthogonal.\n        line : function(x0, y0, x1, y1, lw, rgb) {\n            x0 = x0|0;\n            y0 = y0|0;\n            x1 = x1|0;\n            y1 = y1|0;\n\n            // Most linear barcodes, the line width will be integral.  The exceptions\n            // are variable width barcodes (e.g. code39) and the postal 4-state codes.\n            lw = Math.round(lw) || 1;\n\n            if (y1 < y0) { var t = y0; y0 = y1; y1 = t; }\n            if (x1 < x0) { var t = x0; x0 = x1; x1 = t; }\n\n            gs_r = parseInt(rgb.substr(0,2), 16);\n            gs_g = parseInt(rgb.substr(2,2), 16);\n            gs_b = parseInt(rgb.substr(4,2), 16);\n\n            // Horizontal or vertical line?\n            var w2 = (lw/2)|0;\n            if (x0 == x1) {\n                // Vertical line\n                x0 = x0 - lw + w2;  // big half\n                x1 = x1 + w2 - 1;   // small half\n            } else {\n                // Horizontal line (inverted halves)\n                y0 = y0 - w2;\n                y1 = y1 + lw - w2 - 1;\n            }\n            for (var y = y0; y <= y1; y++) {\n                for (var x = x0; x <= x1; x++) {\n                    set(x, y, 255);\n                }\n            }\n        },\n\n        // Polygons are used to draw the connected regions in a 2d barcode.\n        // These will always be unstroked, filled, orthogonal shapes.\n        // \n        // You will see a series of polygon() calls, followed by a fill().\n        polygon : function(pts) {\n            var npts = pts.length;\n            for (var j = npts-1, i = 0; i < npts; j = i++) {\n                if (pts[j][0] == pts[i][0]) {\n                    // Vertical lines do not get their end points. End points\n                    // are added by the horizontal line logic.\n                    var xj = pts[j][0]|0;   // i or j, doesn't matter\n                    var yj = pts[j][1]|0;\n                    var yi = pts[i][1]|0;\n                    if (yj > yi) {\n                        for (var y = yi+1; y < yj; y++) {\n                            addPoint(xj, y);\n                        }\n                    } else {\n                        for (var y = yj+1; y < yi; y++) {\n                            addPoint(xj, y);\n                        }\n                    }\n                } else {\n                    var xj = pts[j][0]|0;\n                    var xi = pts[i][0]|0;\n                    var yj = pts[j][1]|0;   // i or j, doesn't matter\n\n                    // Horizontal lines are tricky.  As a rule, top lines get filled,\n                    // bottom lines do not (similar to how left edges get filled and\n                    // right edges do not).\n                    //\n                    // Where it gets complex is deciding whether the line actually\n                    // adds edges.  There are cases where a horizontal line does\n                    // not add anything to the scanline plotting.  And it doesn't\n                    // actually matter whether the line is a top or bottom edge,\n                    // the logic is the same.\n                    //\n                    // A left edge is added if the edge to its left is below.\n                    // A right edge is added if the edge to its right is below.\n                    if (xj < xi) {\n                        var yl = pts[j == 0 ? npts-1 : j-1][1]; // left edge\n                        var yr = pts[i == npts-1 ? 0 : i+1][1]; // right edge\n                        if (yl > yj) {\n                            addPoint(xj, yj);\n                        }\n                        if (yr > yj) {\n                            addPoint(xi, yj);\n                        }\n                    } else {\n                        var yl = pts[i == npts-1 ? 0 : i+1][1]; // left edge\n                        var yr = pts[j == 0 ? npts-1 : j-1][1]; // right edge\n                        if (yl > yj) {\n                            addPoint(xi, yj);\n                        }\n                        if (yr > yj) {\n                            addPoint(xj, yj);\n                        }\n                    }\n                }\n            }\n        },\n        // An unstroked, filled hexagon used by maxicode.  You can choose to fill\n        // each individually, or wait for the final fill().\n        //\n        // The hexagon is drawn from the top, counter-clockwise.\n        //\n        // The X-coordinate for the top and bottom points on the hexagon is always\n        // .5 pixels.  We draw our hexagons with a 2 pixel flat top.\n        //\n        // All other points of the polygon/hexagon are guaranteed to be integer values.\n        hexagon : function(pts, rgb) {\n            var x = pts[0][0]|0;\n            var y = pts[0][1]|0;\n            var qh = (pts[1][1] - pts[0][1])|0;     // height of triangle (quarter height)\n            var vh = (pts[2][1] - pts[1][1] - 1)|0; // height of vertical side\n            var xl = (pts[2][0])|0;                 // left side\n            var xr = (pts[4][0])|0;                 // right side\n\n            gs_r = parseInt(rgb.substr(0,2), 16);\n            gs_g = parseInt(rgb.substr(2,2), 16);\n            gs_b = parseInt(rgb.substr(4,2), 16);\n\n            fillSegment(x, x+1, y++);\n            for (var k = 1; k < qh; k++) {\n                fillSegment(x-2*k, x+1+2*k, y++);\n            }\n            for (var k = 0; k <= vh; k++) {\n                fillSegment(xl, xr, y++);\n            }\n            for (var k = qh-1; k >= 1; k--) {\n                fillSegment(x-2*k, x+1+2*k, y++);\n            }\n            fillSegment(x, x+1, y);\n        },\n        // An unstroked, filled ellipse.  Used by dotcode and maxicode at present.\n        // maxicode issues pairs of ellipse calls (one cw, one ccw) followed by a fill()\n        // to create the bullseye rings.  dotcode issues all of its ellipses then a\n        // fill().\n        ellipse : function(x, y, rx, ry, ccw) {\n            drawEllipse((x-rx)|0, (y-ry)|0, (x+rx)|0, (y+ry)|0, ccw);\n        },\n        // PostScript's default fill rule is non-zero but since there are never\n        // intersecting regions, we use the easier to implement even-odd.\n        fill : function(rgb) {\n            gs_r = parseInt(rgb.substr(0,2), 16);\n            gs_g = parseInt(rgb.substr(2,2), 16);\n            gs_b = parseInt(rgb.substr(4,2), 16);\n\n            evenodd();\n            gs_xymap = [];\n            gs_xymap.min = Infinity;\n        },\n        // Currently only used by swissqrcode.  The `polys` area is an array of\n        // arrays of points.  Each array of points is identical to the `pts`\n        // parameter passed to polygon().  The postscript default clipping rule,\n        // like the fill rule, is even-odd winding.\n        clip : function(polys) {\n            if (!gs_xyclip) {\n                gs_xyclip = [];\n                gs_xyclip.min = Infinity;\n            }\n            // Swap out the xymap for the clip map so addPoint() works on it.\n            var xymap = gs_xymap;\n            gs_xymap = gs_xyclip;\n\n            // Now just use the polygon() logic to fill in the clipping regions.\n            for (var i = 0, l = polys.length; i < l; i++) {\n                this.polygon(polys[i]);\n            }\n\n            // Restore\n            gs_xymap = xymap;\n        },\n        unclip : function() {\n            gs_xyclip = null;\n        },\n        // Draw text with optional inter-character spacing.  `y` is the baseline.\n        // font is an object with properties { name, width, height, dx }\n        // width and height are the font cell size.\n        // dx is extra space requested between characters (usually zero).\n        text : function(x, y, str, rgb, font) {\n            x = x|0;\n            y = y|0;\n\n            gs_r = parseInt(rgb.substr(0,2), 16);\n            gs_g = parseInt(rgb.substr(2,2), 16);\n            gs_b = parseInt(rgb.substr(4,2), 16);\n\n            var fontid  = FontLib.lookup(font.name);\n            var fwidth  = font.width|0;\n            var fheight = font.height|0;\n            var dx      = font.dx|0;\n            for (var k = 0; k < str.length; k++) {\n                var ch = str.charCodeAt(k);\n                var glyph = FontLib.getglyph(fontid, ch, fwidth, fheight);\n\n                var gt = y - glyph.top;\n                var gl = glyph.left;\n                var gw = glyph.width;\n                var gh = glyph.height;\n                var gb = glyph.bytes;\n                var go = glyph.offset;      // offset into bytes\n\n                for (var i = 0; i < gw; i++) {\n                    for (var j = 0; j < gh; j++) {\n                        var a = gb[go + j * gw + i];\n                        if (a) {\n                            set(x+gl+i, gt+j, a);\n                        }\n                    }\n                }\n                x += glyph.advance + dx;\n            }\n        },\n        // Called after all drawing is complete.\n        end : function() {\n        },\n    };\n\n    // This code is specialized to deal with two types of RGBA buffers:\n    // - canvas style, which is true RGBA\n    // - PNG style, which has a one-byte \"filter code\" prefixing each row.\n    function set(x, y, a) {\n        if (gs_xyclip && clipped(x, y)) {\n            return;\n        }\n        // translate/rotate\n        x += gs_dx;\n        y += gs_dy;\n        var tx = tx0 * x + tx1 * y + tx2 * (gs_width-1) + tx3 * (gs_height-1);\n        var ty = ty0 * x + ty1 * y + ty2 * (gs_width-1) + ty3 * (gs_height-1);\n\n        // https://en.wikipedia.org/wiki/Alpha_compositing\n        var offs = (ty * gs_width + tx) * 4 + (ty+1) * gs_rowbyte;\n        var dsta = gs_image[offs+3] / 255;\n        var srca = a / 255;\n        var inva = (1 - srca) * dsta;\n        var outa = srca + inva;\n\n        gs_image[offs+0] = ((gs_r * srca + gs_image[offs+0] * inva) / outa)|0;\n        gs_image[offs+1] = ((gs_g * srca + gs_image[offs+1] * inva) / outa)|0;\n        gs_image[offs+2] = ((gs_b * srca + gs_image[offs+2] * inva) / outa)|0;\n        gs_image[offs+3] = (255 * outa)|0;\n    }\n\n    // Add a point on an edge to the scanline map.\n    function addPoint(x, y) {\n        if (gs_xymap.min > y) gs_xymap.min = y;\n        if (!gs_xymap[y]) {\n            gs_xymap[y] = [ x ];\n        } else {\n            gs_xymap[y].push(x);\n        }\n    }\n\n    function fillSegment(x0, x1, y) {\n        while (x0 <= x1) {\n            set(x0++, y, 255);\n        }\n    }\n\n    // even-odd fill\n    //\n    // This implementation is optimized for BWIPP's simple usage.\n    // It is not a general purpose scanline fill.  It relies heavily on\n    // polygon() creating the correct intersections.\n    function evenodd() {\n        var ymin = gs_xymap.min;\n        var ymax = gs_xymap.length-1;\n\n        for (var y = ymin; y <= ymax; y++) {\n            var pts = gs_xymap[y];\n            if (!pts) {\n                continue\n            }\n            pts.sort(function(a, b) { return a - b; });\n\n            var wn = false;\n            var xl = 0;\n            for (var n = 0, npts = pts.length; n < npts; n++) {\n                var x = pts[n];\n                if (wn) {\n                    fillSegment(xl, x-1, y);\n                } else {\n                    xl = x;\n                }\n                wn = !wn;\n            }\n        }\n    }\n\n    function drawEllipse(x0, y0, x1, y1, dir) {\n        x0 = x0|0;\n        y0 = y0|0;\n        x1 = x1|0;\n        y1 = y1|0;\n\n        var a = Math.abs(x1-x0);\n        var b = Math.abs(y1-y0);\n        var b1 = b & 1;\n        var dx = 4*(1-a)*b*b;\n        var dy = 4*(b1+1)*a*a;\n        var err = dx + dy + b1*a*a;\n        var e2;\n\n        // Left and right edges\n        var left = [], right = [];\n        left.min = right.min = Infinity;\n\n        if (x0 > x1) { x0 = x1; x1 += a; }\n        if (y0 > y1) y0 = y1;\n        y0 += ((b+1)/2)|0;\n        y1 = y0 - b1;\n        a *= 8*a; b1 = 8*b*b;\n\n        do {\n            maxedge(right, x1, y0); // 1st quadrant\n            minedge(left, x0, y0);  // 2nd quadrant\n            minedge(left, x0, y1);  // 3rd quadrant\n            maxedge(right, x1, y1); // 4th quadrant\n            e2 = 2*err;\n            if (e2 >= dx) { x0++; x1--; dx += b1; err += dx; }\n            if (e2 <= dy) { y0++; y1--; dy += a;  err += dy; }\n        } while (x0 <= x1);\n\n        while (y0-y1 < b) { // too early stop of flat ellipse\n            maxedge(right, x1+1, y0);\n            minedge(left, x0-1, y0++);\n            minedge(left, x0-1, y1);\n            maxedge(right, x1+1, y1--);\n        }\n\n        for (var y = left.min, max = left.length-1; y <= max; y++) {\n            addPoint(left[y], y);\n        }\n        // The points we calculated are \"inside\".  The fill algorithm excludes \n        // right edges, so +1 on each x.\n        for (var y = right.min, max = right.length-1; y <= max; y++) {\n            addPoint(right[y]+1, y);\n        }\n\n        function minedge(e, x, y) {\n            if (e.min > y) e.min = y;\n            var ey = e[y];\n            if (ey == null || ey > x) {\n                e[y] = x;\n            }\n        }\n\n        function maxedge(e, x, y) {\n            if (e.min > y) e.min = y;\n            var ey = e[y];\n            if (ey == null || ey < x) {\n                e[y] = x;\n            }\n        }\n    }\n\n    // Returns true if outside the clipping region.\n    function clipped(x, y) {\n        var pts = gs_xyclip[y];\n        if (!pts) {\n            return true;\n        }\n        if (!pts.sorted) {\n            pts.sort(function(a, b) { return a - b; });\n            pts.sorted = true;\n        }\n\n        var wn = false;\n        for (var n = 0, npts = pts.length; n < npts; n++) {\n            var xn = pts[n];\n            if (xn > x) {\n                return !wn; \n            } else if (xn == x) {\n                return wn;\n            }\n            wn = !wn;\n        }\n        return true;\n    }\n\n    // Returns 1 if clockwise, -1 if ccw.\n    function polydir(pts) {\n        var xp = 0;\n        for (var i = 0, l = pts.length, j = l-1; i < l; j = i++) {\n            xp += pts[j][0] * pts[i][1] - pts[i][0] * pts[j][1];\n        }\n        return xp > 0 ? 1 : -1;\n    }\n}\n// drawing-canvas.js\n//\n// `maybe` maybe the canvas, pre v4.0.\nfunction DrawingCanvas(canvas, maybe) {\n    // Pre setops() backward compatibility\n    if (maybe && maybe instanceof HTMLCanvasElement) {\n        canvas = maybe;\n    }\n\n    var img;\n    var ctx = canvas.getContext('2d', { willReadFrequently:true });\n    var drawing = DrawingBuiltin();\n\n    // Provide our specializations for the builtin drawing\n    drawing.image = image;\n    drawing.end = end;\n\n    // Reflect setopts() into the super\n    var opts;\n    var _setopts = drawing.setopts;\n    drawing.setopts = function (options) {\n        opts = options;\n        _setopts && _setopts.call(drawing, options);\n    };\n\n    return drawing;\n\n\n    // Called by DrawingBuiltin.init() to get the ARGB bitmap for rendering.\n    function image(width, height) {\n        canvas.width  = width;\n        canvas.height = height;\n\n        // Set background \n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (/^[0-9a-fA-F]{6}$/.test(''+opts.backgroundcolor)) {\n            ctx.fillStyle = '#' + opts.backgroundcolor;\n            ctx.fillRect(0, 0, width, height);\n        } else {\n            ctx.clearRect(0, 0, width, height);\n        }\n\n        // Prepare the bitmap \n        img = ctx.getImageData(0, 0, width, height);\n\n        // The return value is designed for both canvas pure-RGBA and PNG RGBA\n        return { buffer:img.data, ispng:false };\n    }\n\n    function end() {\n        ctx.putImageData(img, 0, 0);\n        return canvas;\n    }\n}\n// drawing-svg.js\n//\n// Converts the drawing primitives into the equivalent SVG.  Linear barcodes\n// are rendered as a series of stroked paths.  2D barcodes are rendered as a \n// series of filled paths.\n//\n// Rotation is handled during drawing.  The resulting SVG will contain the \n// already-rotated barcode without an SVG transform.\n//\n// If the requested barcode image contains text, the glyph paths are \n// extracted from the font file (via the builtin FontLib and stb_truetype.js)\n// and added as filled SVG paths.\n//\nfunction DrawingSVG() {\n    // Unrolled x,y rotate/translate matrix\n    var tx0 = 0, tx1 = 0, tx2 = 0, tx3 = 0;\n    var ty0 = 0, ty1 = 0, ty2 = 0, ty3 = 0;\n\n    var opts;\n    var svg = '';\n    var path;\n    var clipid = '';\n    var clips = [];\n    var lines = {};\n\n    // Magic number to approximate an ellipse/circle using 4 cubic beziers.\n    var ELLIPSE_MAGIC = 0.55228475 - 0.00045;\n\n    // Global graphics state\n    var gs_width, gs_height;    // image size, in pixels\n    var gs_dx, gs_dy;           // x,y translate (padding)\n\n    return {\n        // setopts() is called after the options are fixed-up/normalized,\n        // but before calling into BWIPP.\n        // This allows omitting the options in the constructor call.\n        // It is also your last chance to amend the options before usage.\n        setopts(options) {\n            opts = options;\n        },\n\n        // measure() and scale() are the only drawing primitives that are called before init().\n\n        // Make no adjustments\n        scale(sx, sy) {\n        },\n        // Measure text.\n        // `font` is the font name typically OCR-A or OCR-B.\n        // `fwidth` and `fheight` are the requested font cell size.  They will\n        // usually be the same, except when the scaling is not symetric.\n        measure(str, font, fwidth, fheight) {\n            fwidth = fwidth|0;\n            fheight = fheight|0;\n\n            var fontid = FontLib.lookup(font);\n            var width = 0;\n            var ascent = 0;\n            var descent = 0;\n            for (var i = 0; i < str.length; i++) {\n                var ch = str.charCodeAt(i);\n                var glyph = FontLib.getpaths(fontid, ch, fwidth, fheight);\n                if (!glyph) {\n                    continue;\n                }\n                ascent  = Math.max(ascent, glyph.ascent);\n                descent = Math.max(descent, -glyph.descent);\n                width  += glyph.advance;\n            }\n            return { width, ascent, descent };\n        },\n\n        // `width` and `height` represent the maximum bounding box the graphics will\n        // occupy.  The dimensions are for an unrotated rendering.  Adjust as necessary.\n        init(width, height) {\n            // Add in the effects of padding.  These are always set before the\n            // drawing constructor is called.\n            var padl = opts.paddingleft;\n            var padr = opts.paddingright;\n            var padt = opts.paddingtop;\n            var padb = opts.paddingbottom;\n            var rot  = opts.rotate || 'N';\n\n            width  += padl + padr;\n            height += padt + padb;\n\n            // Transform indexes are: x, y, w, h\n            switch (rot) {\n            // tx = w-y, ty = x\n            case 'R': tx1 = -1; tx2 = 1; ty0 = 1; break;\n            // tx = w-x, ty = h-y\n            case 'I': tx0 = -1; tx2 = 1; ty1 = -1; ty3 = 1; break;\n            // tx = y, ty = h-x\n            case 'L': tx1 = 1; ty0 = -1; ty3 = 1; break;\n            // tx = x, ty = y\n            default:  tx0 = ty1 = 1; break;\n            }\n\n            // Setup the graphics state\n            var swap = rot == 'L' || rot == 'R';\n            gs_width  = swap ? height : width;\n            gs_height = swap ? width : height;\n            gs_dx = padl;\n            gs_dy = padt;\n        },\n        // Unconnected stroked lines are used to draw the bars in linear barcodes.\n        // No line cap should be applied.  These lines are always orthogonal.\n        line(x0, y0, x1, y1, lw, rgb) {\n            // Try to get non-blurry lines...\n            x0 = x0|0;\n            y0 = y0|0;\n            x1 = x1|0;\n            y1 = y1|0;\n            lw = Math.round(lw);\n\n            // Try to keep the lines \"crisp\" by using with the SVG line drawing spec to\n            // our advantage.\n            if (lw & 1) {\n                if (x0 == x1) {\n                    x0 += 0.5;\n                    x1 += 0.5;\n                }\n                if (y0 == y1) {\n                    y0 += 0.5;\n                    y1 += 0.5;\n                }\n            }\n\n            // Group together all lines of the same width and emit as single paths.\n            // Dramatically reduces resulting text size.\n            var key = '' + lw + '#' + rgb;\n            if (!lines[key]) {\n                lines[key] = '<path stroke=\"#' + rgb + '\" stroke-width=\"' + lw + '\" d=\"';\n            }\n            lines[key] += 'M' + transform(x0, y0) + 'L' + transform(x1, y1);\n        },\n        // Polygons are used to draw the connected regions in a 2d barcode.\n        // These will always be unstroked, filled, non-intersecting,\n        // orthogonal shapes.\n        // You will see a series of polygon() calls, followed by a fill().\n        polygon(pts) {\n            if (!path) {\n                path = '<path d=\"';\n            }\n            path += 'M' + transform(pts[0][0], pts[0][1]);\n            for (var i = 1, n = pts.length; i < n; i++) {\n                var p = pts[i];\n                path += 'L' + transform(p[0], p[1]);\n            }\n            path += 'Z';\n        },\n        // An unstroked, filled hexagon used by maxicode.  You can choose to fill\n        // each individually, or wait for the final fill().\n        //\n        // The hexagon is drawn from the top, counter-clockwise.\n        hexagon(pts, rgb) {\n            this.polygon(pts); // A hexagon is just a polygon...\n        },\n        // An unstroked, filled ellipse.  Used by dotcode and maxicode at present.\n        // maxicode issues pairs of ellipse calls (one cw, one ccw) followed by a fill()\n        // to create the bullseye rings.  dotcode issues all of its ellipses then a\n        // fill().\n        ellipse(x, y, rx, ry, ccw) {\n            if (!path) {\n                path = '<path d=\"';\n            }\n            var dx = rx * ELLIPSE_MAGIC;\n            var dy = ry * ELLIPSE_MAGIC;\n\n            // Since there are never overlapping regions, we don't worry about cw/ccw.\n            path += 'M' + transform(x - rx, y) +\n                    'C' + transform(x - rx, y - dy) + ' ' +\n                          transform(x - dx, y - ry) + ' ' +\n                          transform(x,      y - ry) +\n                    'C' + transform(x + dx, y - ry) + ' ' +\n                          transform(x + rx, y - dy) + ' ' +\n                          transform(x + rx, y) + \n                    'C' + transform(x + rx, y + dy) + ' ' +\n                          transform(x + dx, y + ry) + ' ' +\n                          transform(x,      y + ry) +  \n                    'C' + transform(x - dx, y + ry) + ' ' +\n                          transform(x - rx, y + dy) + ' ' +\n                          transform(x - rx, y) + \n                    'Z';\n        },\n        // PostScript's default fill rule is non-zero but there are never intersecting\n        // regions so use even-odd as it is easier to work with.\n        fill(rgb) {\n            if (path) {\n                svg += path + '\" fill=\"#' + rgb + '\" fill-rule=\"evenodd\"' +\n                       (clipid ? ' clip-path=\"url(#' + clipid + ')\"' : '') +\n                       ' />\\n';\n                path = null;\n            }\n        },\n        // Currently only used by swissqrcode.  The `polys` area is an array of\n        // arrays of points.  Each array of points is identical to the `pts`\n        // parameter passed to polygon().  The clipping rule, like the fill rule,\n        // defaults to non-zero winding.\n        clip : function(polys) {\n            var path = '<clipPath id=\"clip' + clips.length + '\"><path d=\"';\n            for (let j = 0; j < polys.length; j++) {\n                let pts = polys[j];\n                path += 'M' + transform(pts[0][0], pts[0][1]);\n                for (var i = 1, n = pts.length; i < n; i++) {\n                    var p = pts[i];\n                    path += 'L' + transform(p[0], p[1]);\n                }\n                path += 'Z';\n            }\n            path += '\" clip-rule=\"nonzero\" /></clipPath>';\n            clipid = \"clip\" + clips.length;\n            clips.push(path);\n        },\n        unclip : function() {\n            clipid = '';\n        },\n        // Draw text with optional inter-character spacing.  `y` is the baseline.\n        // font is an object with properties { name, width, height, dx }\n        // width and height are the font cell size.\n        // dx is extra space requested between characters (usually zero).\n        text(x, y, str, rgb, font) {\n            var fontid  = FontLib.lookup(font.name);\n            var fwidth  = font.width|0;\n            var fheight = font.height|0;\n            var dx      = font.dx|0;\n            var path = '';\n            for (var k = 0; k < str.length; k++) {\n                var ch = str.charCodeAt(k);\n                var glyph = FontLib.getpaths(fontid, ch, fwidth, fheight);\n                if (!glyph) {\n                    continue;\n                }\n                if (glyph.length) {\n                    // A glyph is composed of sequence of curve and line segments.\n                    // M is move-to\n                    // L is line-to\n                    // Q is quadratic bezier curve-to\n                    // C is cubic bezier curve-to\n                    for (var i = 0, l = glyph.length; i < l; i++) {\n                        let seg = glyph[i];\n                        if (seg.type == 'M' || seg.type == 'L') {\n                            path += seg.type + transform(seg.x + x, y - seg.y);\n                        } else if (seg.type == 'Q') {\n                            path += seg.type + transform(seg.cx + x, y - seg.cy) + ' ' +\n                                               transform(seg.x + x,  y - seg.y);\n                        } else if (seg.type == 'C') {\n                            path += seg.type + transform(seg.cx1 + x, y - seg.cy1) + ' ' +\n                                               transform(seg.cx2 + x, y - seg.cy2) + ' ' +\n                                               transform(seg.x + x,   y - seg.y);\n                        }\n                    }\n                    // Close the shape\n                    path += 'Z';\n                }\n                x += glyph.advance + dx;\n            }\n            if (path) {\n                svg += '<path d=\"' + path + '\" fill=\"#' + rgb + '\" />\\n';\n            }\n        },\n        // Called after all drawing is complete.  The return value from this method\n        // will be the return value from `bwipjs.render()`.\n        end() {\n            var linesvg = '';\n            for (var key in lines) {\n                linesvg += lines[key] + '\" />\\n';\n            }\n            var bg = opts.backgroundcolor;\n            return '<svg viewBox=\"0 0 ' + gs_width + ' ' + gs_height + '\" xmlns=\"http://www.w3.org/2000/svg\">\\n' +\n                        (clips.length ? '<defs>' + clips.join('') + '</defs>' : '') +\n                        (/^[0-9A-Fa-f]{6}$/.test(''+bg)\n                            ? '<rect width=\"100%\" height=\"100%\" fill=\"#' + bg + '\" />\\n'\n                            : '') +\n                        linesvg + svg + '</svg>\\n';\n        },\n    };\n\n    // translate/rotate and return as an SVG coordinate pair\n    function transform(x, y) {\n        x += gs_dx;\n        y += gs_dy;\n        var tx = tx0 * x + tx1 * y + tx2 * (gs_width-1) + tx3 * (gs_height-1);\n        var ty = ty0 * x + ty1 * y + ty2 * (gs_width-1) + ty3 * (gs_height-1);\n        return '' + ((tx|0) == tx ? tx : tx.toFixed(2)) + ' ' +\n                    ((ty|0) == ty ? ty : ty.toFixed(2));\n    }\n}\n// fontlib.js\nvar FontLib = (function() {\n    var fonts = [];\n    var names = {};\n    var glyphcache = {};\n    var glyphmru = {};\n    var glyphcount = 0;\n\n    // Sentinel to simplify moving entries around in the list.\n    glyphmru.next = glyphmru;\n    glyphmru.prev = glyphmru;\n\n    return {\n        lookup:lookup,\n        monochrome:monochrome,\n        getglyph:getglyph,\n        getpaths:getpaths,\n        loadFont:loadFont,\n    };\n\n    // loadFont(name, data)\n    // loadFont(name, mult, data)\n    // loadFont(name, multy, multx, data)   // note order: y,x\n    // data must be the font data, either a binary or base64 encoded string.\n    function loadFont(name /*...args*/) {\n        var multx = 100;\n        var multy = 100;\n        var data = null;\n\n        if (arguments.length == 2) {\n            data = arguments[1];\n        } else if (arguments.length == 3) {\n            multx = multy = +arguments[1] || 100;\n            data = arguments[2];\n        } else if (arguments.length == 4) {\n            multy = +arguments[1] || 100;\n            multx = +arguments[2] || 100;\n            data = arguments[3];\n        } else {\n            throw new Error(\"bwipjs: loadFont: invalid number of arguments\");\n        }\n\n        var font = STBTT.InitFont(toUint8Array(data));\n        font.bwipjs_name = name;\n        font.bwipjs_multx = multx;\n        font.bwipjs_multy = multy;\n\n        var fontid = fonts.push(font)-1;\n        names[name.toUpperCase()] = fontid;\n        return fontid;\n    }\n\n    // Always returns a valid font-id (default OCR-B)\n    function lookup(name) {\n        var fontid = names[name.toUpperCase()];\n        return fontid === undefined ? 1 : fontid;       // OCR B default\n    }\n\n    // Not supported by stbtt\n    function monochrome(mono) {\n        if (mono) {\n            throw new Error('bwipjs: monochrome fonts not implemented');\n        }\n    }\n\n    function getglyph(fontid, charcode, width, height) {\n        fontid   = fontid|0;\n        charcode = charcode|0;\n        width    = +width;\n        height   = +height;\n        if (!width || width < 8) {\n            width = 8;\n        }\n        if (!height || height < 8) {\n            height = width;\n        }\n        if (fontid < 0 || fontid >= fonts.length) {\n            fontid = 1;     // OCR B default\n        }\n        if (!charcode || charcode < 32) {\n            charcode = 32;\n        }\n\n        // In the cache?\n        var cachekey = '' + fontid + 'c' + charcode + 'w' + width + 'h' + height; \n        var glyph = glyphcache[cachekey];\n        if (glyph) {\n            // Unthread from the MRU\n            glyph.prev.next = glyph.next;\n            glyph.next.prev = glyph.prev;\n\n            // Thread back onto the top\n            var sntl = glyphmru;\n            sntl.next.prev = glyph;\n            glyph.next = sntl.next;\n            glyph.prev = sntl;\n            sntl.next = glyph;\n            \n            return glyph;\n        }\n\n        var font = fonts[fontid];\n        var glyph = STBTT.GetGlyph(font, charcode, width * font.bwipjs_multx / 100,\n                                                   height * font.bwipjs_multy / 100) ||\n                    STBTT.GetGlyph(font, 0, width * font.bwipjs_multx / 100,\n                                                   height * font.bwipjs_multy / 100);\n        \n        glyph.bytes = glyph.pixels;\n        glyph.cachekey = cachekey;\n        glyph.offset = 0;\n\n        //glyph = {\n        //      top:font.GlyphTop(),\n        //      left:font.GlyphLeft(),\n        //      width:font.GlyphWidth(),\n        //      height:font.GlyphHeight(),\n        //      advance:font.GlyphAdvance(),\n        //      bitmap:font.GlyphBitmap(),\n        //      offset:0,\n        //      cachekey:cachekey,\n        //  };\n\n        // Purge old\n        if (glyphcount > 250) {\n            var sntl = glyphmru;\n            var temp = sntl.prev;\n            temp.prev.next = sntl;\n            sntl.prev = temp.prev;\n            temp.next = temp.prev = null;\n            delete glyphcache[temp.cachekey];\n        } else {\n            glyphcount++;\n        }\n\n        // Add to cache and to the top of the MRU\n        glyphcache[cachekey] = glyph;\n\n        var sntl = glyphmru;\n        sntl.next.prev = glyph;\n        glyph.next = sntl.next;\n        glyph.prev = sntl;\n        sntl.next = glyph;\n\n        return glyph;\n    }\n\n    function getpaths(fontid, charcode, width, height) {\n        fontid   = fontid|0;\n        charcode = charcode|0;\n        width    = +width;\n        height   = +height;\n        if (!width || width < 8) {\n            width = 8;\n        }\n        if (!height || height < 8) {\n            height = width;\n        }\n        if (fontid < 0 || fontid >= fonts.length) {\n            fontid = 1;     // OCR B default\n        }\n        if (!charcode || charcode < 32) {\n            charcode = 32;\n        }\n\n        var font = fonts[fontid];\n        return STBTT.GetPaths(font, charcode, width * font.bwipjs_multx / 100,\n                                              height * font.bwipjs_multy / 100);\n    }\n})();\n\n// This is needed to make the default exports traceable by esbuild\n// during its tree shaking phase.  See issue #298.\nfunction LoadFont() {\n    return FontLib.loadFont.apply(FontLib, Array.prototype.slice.call(arguments));\n}\n\n// bwip-js/stb_trutype.js\n//\n// JavaScript implementation of stb_truetype.h @ https://github.com/nothings/stb.\n//\n// This file is part of the bwip-js project available at:\n//\n//      http://metafloor.github.io/bwip-js\n//\n// Copyright (c) 2019 Mark Warren : MIT LICENSE\n\n// Copyright notice from stb_truetype.h:\n//\n// MIT License\n//\n// Copyright (c) 2017 Sean Barrett\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n// of the Software, and to permit persons to whom the Software is furnished to do\n// so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nvar STBTT = (function () {\n\nvar STBTT_vmove  = 1,\n    STBTT_vline  = 2,\n    STBTT_vcurve = 3,\n    STBTT_vcubic = 4,\n\n    STBTT_PLATFORM_ID_UNICODE   = 0,\n    STBTT_PLATFORM_ID_MAC       = 1,\n    STBTT_PLATFORM_ID_ISO       = 2,\n    STBTT_PLATFORM_ID_MICROSOFT = 3,\n\n    STBTT_UNICODE_EID_UNICODE_1_0       = 0,\n    STBTT_UNICODE_EID_UNICODE_1_1       = 1,\n    STBTT_UNICODE_EID_ISO_10646         = 2,\n    STBTT_UNICODE_EID_UNICODE_2_0_BMP   = 3,\n    STBTT_UNICODE_EID_UNICODE_2_0_FULL  = 4,\n\n    STBTT_MS_EID_SYMBOL         = 0,\n    STBTT_MS_EID_UNICODE_BMP    = 1,\n    STBTT_MS_EID_SHIFTJIS       = 2,\n    STBTT_MS_EID_UNICODE_FULL   = 10;\n\nvar floor = Math.floor;\nvar ceil  = Math.ceil;\nvar sqrt  = Math.sqrt;\nvar abs   = Math.abs;\n\n// Allocate an array of objects - replaces malloc(sizeof struct * n)\nfunction oalloc(n) {\n    var o = [];\n    for (var i = 0; i < n; i++) {\n        o.push({});\n    }\n    return o;\n}\n\n//static unsigned char stbtt__buf_get8(stbtt__buf * b)\nfunction stbtt__buf_get8(b) {\n    return b[b.cursor++]||0;\n}\n\n//static unsigned char stbtt__buf_peek8(stbtt__buf * b)\nfunction stbtt__buf_peek8(b) {\n    return b[b.cursor];\n}\n\n//static void stbtt__buf_seek(stbtt__buf * b, int o)\nfunction stbtt__buf_seek(b, o) {\n    b.cursor = (o > b.length || o < 0) ? b.length : o;\n}\n\n//static void stbtt__buf_skip(stbtt__buf * b, int o)\nfunction stbtt__buf_skip(b, o) {\n    stbtt__buf_seek(b, b.cursor + o);\n}\n\n//static unsigned int stbtt__buf_get(stbtt__buf * b, int n)\nfunction stbtt__buf_get(b, n) {\n    var v = 0;\n    for (var i = 0; i < n; i++) {\n        v = (v << 8) | stbtt__buf_get8(b);\n    }\n    return v;\n}\n\n// This function is only called once with a real 'p', all other uses are\n// for a NULL buffer.  The for real usage, the code is inlined.\n//static stbtt__buf stbtt__new_buf(const void *p, int size)\nfunction stbtt__null_buf() {\n    return { length:0 };\n}\n\n//static stbtt__buf stbtt__buf_range(const stbtt__buf * b, int o, int s)\nfunction stbtt__buf_range(b, o, s) {\n    if (o < 0 || s < 0 || o > b.length || s > b.length - o) {\n        return stbtt__null_buf();\n    }\n    var r = b.subarray(o, o + s);\n    r.cursor = 0;\n    return r;\n}\n\n//static stbtt__buf stbtt__cff_get_index(stbtt__buf * b)\nfunction stbtt__cff_get_index(b) {\n    var start = b.cursor;\n    var count = stbtt__buf_get(b, 2);\n    if (count) {\n        var offsize = stbtt__buf_get8(b);\n        stbtt__buf_skip(b, offsize * count);\n        stbtt__buf_skip(b, stbtt__buf_get(b, offsize) - 1);\n    }\n    return stbtt__buf_range(b, start, b.cursor - start);\n}\n\n//static unsigned int stbtt__cff_int(stbtt__buf * b)\nfunction stbtt__cff_int(b) {\n    var b0 = stbtt__buf_get8(b);\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    } else if (b0 >= 247 && b0 <= 250) {\n        return (b0 - 247) * 256 + stbtt__buf_get8(b) + 108;\n    } else if (b0 >= 251 && b0 <= 254) {\n        return -(b0 - 251) * 256 - stbtt__buf_get8(b) - 108;\n    } else if (b0 == 28) {\n        return stbtt__buf_get(b, 2);\n    } else if (b0 == 29) {\n        return stbtt__buf_get(b, 4);\n    }\n    return 0;\n}\n\n//static void stbtt__cff_skip_operand(stbtt__buf * b)\nfunction stbtt__cff_skip_operand(b) {\n    var b0 = stbtt__buf_peek8(b);\n    if (b0 == 30) {\n        stbtt__buf_skip(b, 1);\n        while (b.cursor < b.length) {\n            var v = stbtt__buf_get8(b);\n            if ((v & 0xF) == 0xF || (v >> 4) == 0xF) {\n                break;\n            }\n        }\n    } else {\n        stbtt__cff_int(b);\n    }\n}\n\n//static stbtt__buf stbtt__dict_get(stbtt__buf * b, int key)\nfunction stbtt__dict_get(b, key) {\n    stbtt__buf_seek(b, 0);\n    while (b.cursor < b.length) {\n        var start = b.cursor, end, op;\n        while (stbtt__buf_peek8(b) >= 28) {\n            stbtt__cff_skip_operand(b);\n        }\n        end = b.cursor;\n        op = stbtt__buf_get8(b);\n        if (op == 12) {\n            op = stbtt__buf_get8(b) | 0x100;\n        }\n        if (op == key) {\n            return stbtt__buf_range(b, start, end - start);\n        }\n    }\n    return stbtt__buf_range(b, 0, 0);\n}\n\n//static void stbtt__dict_get_ints(stbtt__buf * b, int key, int outcount, unsigned int *out)\nfunction stbtt__dict_get_ints(b, key, outcount, out) {\n    var operands = stbtt__dict_get(b, key);\n    for (var i = 0; i < outcount && operands.cursor < operands.length; i++) {\n        out[i] = stbtt__cff_int(operands);\n    }\n}\n// single-integer format of above since javascript doesn't have address-of\nfunction stbtt__dict_get_int(b, key, out) {\n    var operands = stbtt__dict_get(b, key);\n    if (operands.cursor < operands.length) {\n        out = stbtt__cff_int(operands);\n    }\n    return out;\n}\n\n//static int stbtt__cff_index_count(stbtt__buf * b)\nfunction stbtt__cff_index_count(b) {\n    stbtt__buf_seek(b, 0);\n    return stbtt__buf_get(b, 2);\n}\n\n//static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)\nfunction stbtt__cff_index_get(b, i) {\n    var count, offsize, start, end;\n    stbtt__buf_seek(b, 0);\n    count = stbtt__buf_get(b, 2);\n    offsize = stbtt__buf_get8(b);\n    stbtt__buf_skip(b, i * offsize);\n    start = stbtt__buf_get(b, offsize);\n    end = stbtt__buf_get(b, offsize);\n    return stbtt__buf_range(b, 2 + (count + 1) * offsize + start, end - start);\n}\n\n// Convert sign-extend a 16-bit integer to JS number\nfunction INT16(n) {\n    return n & 0x8000 ? (0xffff0000|n)>>0 : n;\n}\n\n//static unsigned short ttUSHORT(unsigned char *p)\nfunction ttUSHORT(b, o) {\n    return b[o] * 256 + b[o+1];\n}\n\n//static short ttSHORT(unsigned char *p)\nfunction ttSHORT(b, o) {\n    var n = b[o] * 256 + b[o+1];\n    return n & 0x8000 ? (0xffff0000|n)>>0 : n;\n}\n\n//static unsigned int ttULONG(unsigned char *p)\nfunction ttULONG(b, o) {\n    return (b[o] << 24) + (b[o+1] << 16) + (b[o+2] << 8) + b[o+3];\n}\n\n//static unsigned int stbtt__find_table(unsigned char *data, unsigned int fontstart, const char *tag)\nfunction stbtt__find_table(data, fontstart, tag) {\n    var num_tables = ttUSHORT(data, fontstart + 4);\n    var tabledir = fontstart + 12;\n    for (var i = 0; i < num_tables; ++i) {\n        var loc = tabledir + 16 * i;\n        if (data[loc] == tag[0] && data[loc+1] == tag[1] && data[loc+2] == tag[2] && data[loc+3] == tag[3]) {\n            return ttULONG(data, loc + 8);\n        }\n    }\n    return 0;\n}\n\n//static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)\nfunction stbtt__get_subrs(cff, fontdict) {\n    var private_loc = [ 0, 0 ];\n    stbtt__dict_get_ints(fontdict, 18, 2, private_loc);\n    if (!private_loc[1] || !private_loc[0]) {\n        return stbtt__null_buf();\n    }\n    var pdict = stbtt__buf_range(cff, private_loc[1], private_loc[0]);\n    var subrsoff = stbtt__dict_get_int(pdict, 19, 0);\n    if (!subrsoff) {\n        return stbtt__null_buf();\n    }\n    stbtt__buf_seek(cff, private_loc[1] + subrsoff);\n    return stbtt__cff_get_index(cff);\n}\n\n//static int stbtt_InitFont_internal(stbtt_fontinfo * info, unsigned char *data, int fontstart)\nfunction stbtt_InitFont_internal(info, data, fontstart) {\n    var cmap, t, i, numTables;\n\n    info.data = data;\n    info.fontstart = fontstart;\n    info.cff = stbtt__null_buf();\n\n    cmap = stbtt__find_table(data, fontstart, [ 99, 109, 97, 112 ]);        //\"cmap\"\n    info.loca = stbtt__find_table(data, fontstart, [ 108, 111, 99, 97 ]);   //\"loca\"\n    info.head = stbtt__find_table(data, fontstart, [ 104, 101, 97, 100 ]);  //\"head\"\n    info.glyf = stbtt__find_table(data, fontstart, [ 103, 108, 121, 102 ]); //\"glyf\"\n    info.hhea = stbtt__find_table(data, fontstart, [ 104, 104, 101, 97 ]);  //\"hhea\"\n    info.hmtx = stbtt__find_table(data, fontstart, [ 104, 109, 116, 120 ]); //\"hmtx\"\n    info.kern = stbtt__find_table(data, fontstart, [ 107, 101, 114, 110 ]); //\"kern\"\n\n    if (!cmap || !info.head || !info.hhea || !info.hmtx) {\n        return 0;\n    }\n    if (info.glyf) {\n        if (!info.loca) {\n            return 0;\n        }\n    } else {\n        var b, topdict, topdictidx, cff,\n            cstype = 2, charstrings = 0, fdarrayoff = 0, fdselectoff = 0;\n\n        cff = stbtt__find_table(data, fontstart, [ 67, 70, 70, 32 ]);   //\"CFF \"\n        if (!cff) {\n            return 0;\n        }\n\n        info.fontdicts = stbtt__null_buf();\n        info.fdselect = stbtt__null_buf();\n\n        info.cff = data.subarray(cff); //stbtt__new_buf(data + cff, 512 * 1024 * 1024);\n        info.cff.cursor = 0;\n        b = info.cff;\n\n        stbtt__buf_skip(b, 2);\n        stbtt__buf_seek(b, stbtt__buf_get8(b));\n\n        stbtt__cff_get_index(b);\n        topdictidx = stbtt__cff_get_index(b);\n        topdict = stbtt__cff_index_get(topdictidx, 0);\n        stbtt__cff_get_index(b);\n        info.gsubrs = stbtt__cff_get_index(b);\n\n        charstrings = stbtt__dict_get_int(topdict, 17, charstrings);\n        cstype = stbtt__dict_get_int(topdict, 0x100 | 6, cstype);\n        fdarrayoff = stbtt__dict_get_int(topdict, 0x100 | 36, fdarrayoff);\n        fdselectoff = stbtt__dict_get_int(topdict, 0x100 | 37, fdselectoff);\n        info.subrs = stbtt__get_subrs(b, topdict);\n\n        if (cstype != 2) {\n            return 0;\n        }\n        if (charstrings == 0) {\n            return 0;\n        }\n\n        if (fdarrayoff) {\n            if (!fdselectoff) {\n                return 0;\n            }\n            stbtt__buf_seek(b, fdarrayoff);\n            info.fontdicts = stbtt__cff_get_index(b);\n            info.fdselect = stbtt__buf_range(b, fdselectoff, b.length - fdselectoff);\n        }\n\n        stbtt__buf_seek(b, charstrings);\n        info.charstrings = stbtt__cff_get_index(b);\n    }\n\n    t = stbtt__find_table(data, fontstart, [ 109, 97, 120, 112 ]);  //\"maxp\"\n    if (t) {\n        info.numGlyphs = ttUSHORT(data, t + 4);\n    }\n    else {\n        info.numGlyphs = 0xffff;\n    }\n\n    numTables = ttUSHORT(data, cmap + 2);\n    info.index_map = 0;\n    for (i = 0; i < numTables; ++i) {\n        var encoding_record = cmap + 4 + 8 * i;\n\n        switch (ttUSHORT(data, encoding_record)) {\n        case STBTT_PLATFORM_ID_MICROSOFT:\n            switch (ttUSHORT(data, encoding_record + 2)) {\n            case STBTT_MS_EID_UNICODE_BMP:\n            case STBTT_MS_EID_UNICODE_FULL:\n                info.index_map = cmap + ttULONG(data, encoding_record + 4);\n                break;\n            }\n            break;\n        case STBTT_PLATFORM_ID_UNICODE:\n            info.index_map = cmap + ttULONG(data, encoding_record + 4);\n            break;\n        }\n    }\n    if (info.index_map == 0) {\n        return 0;\n    }\n\n    info.indexToLocFormat = ttUSHORT(data, info.head + 50);\n    return 1;\n}\n\n//extern int stbtt_FindGlyphIndex(const stbtt_fontinfo * info, int unicode_codepoint)\nfunction stbtt_FindGlyphIndex(info, unicode_codepoint) {\n    var data = info.data, index_map = info.index_map;\n\n    var format = ttUSHORT(data, index_map + 0);\n    if (format == 0) {\n        var bytes = ttUSHORT(data, index_map + 2);\n        if (unicode_codepoint < bytes - 6) {\n            return data[index_map + 6 + unicode_codepoint];\n        }\n        return 0;\n    } else if (format == 6) {\n        var first = ttUSHORT(data, index_map + 6),\n            count = ttUSHORT(data, index_map + 8);\n        if (unicode_codepoint >= first && unicode_codepoint < first + count) {\n            return ttUSHORT(data, index_map + 10 + (unicode_codepoint - first) * 2);\n        }\n        return 0;\n    } else if (format == 2) {\n        return 0;\n    } else if (format == 4) {\n        var segcount = ttUSHORT(data, index_map + 6) >> 1,\n            searchRange = ttUSHORT(data, index_map + 8) >> 1,\n            entrySelector = ttUSHORT(data, index_map + 10),\n            rangeShift = ttUSHORT(data, index_map + 12) >> 1,\n            endCount = index_map + 14,\n            search = endCount;\n\n        if (unicode_codepoint > 0xffff) {\n            return 0;\n        }\n\n        if (unicode_codepoint >= ttUSHORT(data, search + rangeShift * 2)) {\n            search += rangeShift * 2;\n        }\n\n        search -= 2;\n        while (entrySelector) {\n            searchRange >>= 1;\n            var end = ttUSHORT(data, search + searchRange * 2);\n            if (unicode_codepoint > end) {\n                search += searchRange * 2;\n            }\n            --entrySelector;\n        }\n        search += 2;\n\n        var offset, start, item = (search - endCount) >>> 1;\n\n        start = ttUSHORT(data, index_map + 14 + segcount * 2 + 2 + 2 * item);\n        if (unicode_codepoint < start) {\n            return 0;\n        }\n\n        offset = ttUSHORT(data, index_map + 14 + segcount * 6 + 2 + 2 * item);\n        if (offset == 0) {\n            return unicode_codepoint + ttSHORT(data, index_map + 14 + segcount * 4 + 2 + 2 * item);\n        }\n        return ttUSHORT(data, offset + (unicode_codepoint - start) * 2 +\n                                index_map + 14 + segcount * 6 + 2 + 2 * item);\n    } else if (format == 12 || format == 13) {\n        var ngroups = ttULONG(data, index_map + 12),\n            low = 0, high = ngroups;\n         while (low < high) {\n            var mid = low + ((high - low) >> 1);\n            var start_char = ttULONG(data, index_map + 16 + mid * 12);\n            var end_char = ttULONG(data, index_map + 16 + mid * 12 + 4);\n            if (unicode_codepoint < start_char) {\n                high = mid;\n            } else if (unicode_codepoint > end_char) {\n                low = mid + 1;\n            } else {\n                var start_glyph = ttULONG(data, index_map + 16 + mid * 12 + 8);\n                if (format == 12) {\n                    return start_glyph + unicode_codepoint - start_char;\n                } else {\n                    return start_glyph;\n                }\n            }\n        }\n        return 0;\n    }\n    return 0;\n}\n\n//static void stbtt_setvertex(stbtt_vertex * v, unsigned char type, int x, int y, int cx, int cy)\nfunction stbtt_setvertex(v, type, x, y, cx, cy) {\n    v.type = type;\n    v.x = x;\n    v.y = y;\n    v.cx = cx;\n    v.cy = cy;\n}\n\n//static int stbtt__GetGlyfOffset(const stbtt_fontinfo * info, int glyph_index)\nfunction stbtt__GetGlyfOffset(info, glyph_index) {\n    var  g1, g2;\n    if (glyph_index >= info.numGlyphs) {\n        return -1;\n    }\n    if (info.indexToLocFormat >= 2) {\n        return -1;\n    }\n\n    if (info.indexToLocFormat == 0) {\n        g1 = info.glyf + ttUSHORT(info.data, info.loca + glyph_index * 2) * 2;\n        g2 = info.glyf + ttUSHORT(info.data, info.loca + glyph_index * 2 + 2) * 2;\n    } else {\n        g1 = info.glyf + ttULONG(info.data, info.loca + glyph_index * 4);\n        g2 = info.glyf + ttULONG(info.data, info.loca + glyph_index * 4 + 4);\n    }\n\n    return g1 == g2 ? -1 : g1;\n}\n\n//extern int stbtt_GetGlyphBox(const stbtt_fontinfo * info, int glyph_index, int *x0, int *y0, int *x1, int *y1)\nfunction stbtt_GetGlyphBox(info, glyph_index, out) {\n    if (info.cff.length) {\n        stbtt__GetGlyphInfoT2(info, glyph_index, out);\n    } else {\n        var g = stbtt__GetGlyfOffset(info, glyph_index);\n        if (g < 0) {\n            return 0;\n        }\n        out.x0 = ttSHORT(info.data, g + 2);\n        out.y0 = ttSHORT(info.data, g + 4);\n        out.x1 = ttSHORT(info.data, g + 6);\n        out.y1 = ttSHORT(info.data, g + 8);\n    }\n    return 1;\n}\n\n//static int stbtt__close_shape(stbtt_vertex * vertices, int num_vertices, int was_off,\n//                   int start_off, int sx, int sy, int scx, int scy, int cx, int cy)\nfunction stbtt__close_shape(vertices, num_vertices, was_off, start_off, sx, sy, scx, scy, cx, cy) {\n    if (start_off) {\n        if (was_off) {\n            stbtt_setvertex(vertices[num_vertices++], STBTT_vcurve,\n                            (cx + scx) >> 1, (cy + scy) >> 1, cx, cy);\n        }\n        stbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, sx, sy, scx, scy);\n    } else {\n        if (was_off) {\n            stbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, sx, sy, cx, cy);\n        } else {\n            stbtt_setvertex(vertices[num_vertices++], STBTT_vline, sx, sy, 0, 0);\n        }\n    }\n    return num_vertices;\n}\n\n//static int stbtt__GetGlyphShapeTT(const stbtt_fontinfo * info, int glyph_index, stbtt_vertex ** pvertices)\nfunction stbtt__GetGlyphShapeTT(info, glyph_index) {\n    var data = info.data,\n        g = stbtt__GetGlyfOffset(info, glyph_index);\n\n    if (g < 0) {\n        return null;\n    }\n\n    var vertices = [];\n    var numberOfContours = ttSHORT(data, g);\n    if (numberOfContours > 0) {\n        var flags = 0, flagcount,\n            i, j = 0, m, n, next_move, was_off = 0, off, start_off = 0,\n            x, y, cx, cy, sx, sy, scx, scy;\n        var endPtsOfContours = g + 10;\n        var ins = ttUSHORT(data, g + 10 + numberOfContours * 2);\n        var points = data.subarray(g + 10 + numberOfContours * 2 + 2 + ins);\n        var ptsoff = 0;\n\n        n = 1 + ttUSHORT(data, endPtsOfContours + numberOfContours * 2 - 2);\n        m = n + 2 * numberOfContours;\n\n        vertices = oalloc(m);\n        next_move = 0;\n        flagcount = 0;\n        off = m - n;\n\n        for (i = 0; i < n; ++i) {\n            if (flagcount == 0) {\n                flags = points[ptsoff++];\n                if (flags & 8) {\n                    flagcount = points[ptsoff++];\n                }\n            } else {\n                --flagcount;\n            }\n            vertices[off + i].type = flags;\n        }\n\n        x = 0;\n        for (i = 0; i < n; ++i) {\n            flags = vertices[off + i].type;\n            if (flags & 2) {\n                var dx = points[ptsoff++];\n                x += (flags & 16) ? dx : -dx;\n            } else {\n                if (!(flags & 16)) {\n                    x = x + INT16(points[ptsoff] * 256 + points[ptsoff+1]);\n                    ptsoff += 2;\n                }\n            }\n            vertices[off + i].x = x;\n        }\n\n        y = 0;\n        for (i = 0; i < n; ++i) {\n            flags = vertices[off + i].type;\n            if (flags & 4) {\n                var dy = points[ptsoff++];\n                y += (flags & 32) ? dy : -dy;\n            } else {\n                if (!(flags & 32)) {\n                    y = y + INT16(points[ptsoff] * 256 + points[ptsoff+1]);\n                    ptsoff += 2;\n                }\n            }\n            vertices[off + i].y = y;\n        }\n\n        var num_vertices = 0;\n        sx = sy = cx = cy = scx = scy = 0;\n        for (i = 0; i < n; ++i) {\n            flags = vertices[off + i].type;\n            x = vertices[off + i].x;\n            y = vertices[off + i].y;\n\n            if (next_move == i) {\n                if (i != 0) {\n                    num_vertices = stbtt__close_shape(vertices, num_vertices, was_off, start_off,\n                                            sx, sy, scx, scy, cx, cy);\n                }\n                start_off = !(flags & 1);\n                if (start_off) {\n                    scx = x;\n                    scy = y;\n                    if (!(vertices[off + i + 1].type & 1)) {\n                        sx = (x + vertices[off + i + 1].x) >> 1;\n                        sy = (y + vertices[off + i + 1].y) >> 1;\n                    } else {\n                        sx = vertices[off + i + 1].x;\n                        sy = vertices[off + i + 1].y;\n                        ++i;\n                    }\n                } else {\n                    sx = x;\n                    sy = y;\n                }\n                stbtt_setvertex(vertices[num_vertices++], STBTT_vmove, sx, sy, 0, 0);\n                was_off = 0;\n                next_move = 1 + ttUSHORT(data, endPtsOfContours + j * 2);\n                ++j;\n            } else {\n                if (!(flags & 1)) {\n                    if (was_off) {\n                        stbtt_setvertex(vertices[num_vertices++], STBTT_vcurve,\n                                        (cx + x) >> 1, (cy + y) >> 1, cx, cy);\n                    }\n                    cx = x;\n                    cy = y;\n                    was_off = 1;\n                } else {\n                    if (was_off) {\n                        stbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, x, y, cx, cy);\n                    } else {\n                        stbtt_setvertex(vertices[num_vertices++], STBTT_vline, x, y, 0, 0);\n                    }\n                    was_off = 0;\n                }\n            }\n        }\n        vertices.length = stbtt__close_shape(vertices, num_vertices, was_off, start_off,\n                                                sx, sy, scx, scy, cx, cy);\n    } else if (numberOfContours == -1) {\n        var more = 1;\n        var comp = g + 10;\n         while (more) {\n            var flags, gidx, mtx = [ 1, 0, 0, 1, 0, 0 ];\n\n            flags = ttSHORT(data, comp);\n            comp += 2;\n            gidx = ttSHORT(data, comp);\n            comp += 2;\n\n            if (flags & 2) {\n                if (flags & 1) {\n                    mtx[4] = ttSHORT(data, comp);\n                    comp += 2;\n                    mtx[5] = ttSHORT(data, comp);\n                    comp += 2;\n                } else {\n                    mtx[4] = stbtt__buf_get8(data, comp);\n                    comp += 1;\n                    mtx[5] = stbtt__buf_get8(data, comp);\n                    comp += 1;\n                }\n            }\n            if (flags & (1 << 3)) {\n                mtx[0] = mtx[3] = ttSHORT(data, comp) / 16384.0;\n                comp += 2;\n                mtx[1] = mtx[2] = 0;\n            } else if (flags & (1 << 6)) {\n                mtx[0] = ttSHORT(data, comp) / 16384.0;\n                comp += 2;\n                mtx[1] = mtx[2] = 0;\n                mtx[3] = ttSHORT(data, comp) / 16384.0;\n                comp += 2;\n            } else if (flags & (1 << 7)) {\n                mtx[0] = ttSHORT(data, comp) / 16384.0;\n                comp += 2;\n                mtx[1] = ttSHORT(data, comp) / 16384.0;\n                comp += 2;\n                mtx[2] = ttSHORT(data, comp) / 16384.0;\n                comp += 2;\n                mtx[3] = ttSHORT(data, comp) / 16384.0;\n                comp += 2;\n            }\n\n            var m = sqrt(mtx[0] * mtx[0] + mtx[1] * mtx[1]);\n            var n = sqrt(mtx[2] * mtx[2] + mtx[3] * mtx[3]);\n            var comp_verts = stbtt_GetGlyphShape(info, gidx);\n            if (comp_verts.length > 0) {\n                for (var i = 0, l = comp_verts.length; i < l; ++i) {\n                    var v = comp_verts[i], x, y;\n                    x = v.x;\n                    y = v.y;\n                    v.x = floor(m * (mtx[0] * x + mtx[2] * y + mtx[4]));\n                    v.y = floor(n * (mtx[1] * x + mtx[3] * y + mtx[5]));\n                    x = v.cx;\n                    y = v.cy;\n                    v.cx = floor(m * (mtx[0] * x + mtx[2] * y + mtx[4]));\n                    v.cy = floor(n * (mtx[1] * x + mtx[3] * y + mtx[5]));\n                }\n\n                vertices = vertices.concat(comp_verts);\n            }\n            more = flags & (1 << 5);\n        }\n    }\n    //console.log('vertices(' + vertices.length + ')');\n    //for (var i = 0; i < vertices.length; i++) {\n    //  var pt = vertices[i];\n    //  console.log(`${i}: ${pt.x},${pt.y} / ${pt.cx},${pt.cy} / ${pt.type}`);\n    //}\n\n    return vertices;\n}\n\n//static void stbtt__track_vertex(stbtt__csctx * c, int x, int y)\nfunction stbtt__track_vertex(c, x, y) {\n    if (x > c.max_x || !c.started) {\n        c.max_x = x;\n    }\n    if (y > c.max_y || !c.started) {\n        c.max_y = y;\n    }\n    if (x < c.min_x || !c.started) {\n        c.min_x = x;\n    }\n    if (y < c.min_y || !c.started) {\n        c.min_y = y;\n    }\n    c.started = 1;\n}\n\n//static void stbtt__csctx_v(stbtt__csctx * c, unsigned char type, int x, int y, int cx, int cy, int cx1, int cy1)\nfunction stbtt__csctx_v(c, type, x, y, cx, cy, cx1, cy1) {\n    stbtt__track_vertex(c, x, y);\n    if (type == STBTT_vcubic) {\n        stbtt__track_vertex(c, cx, cy);\n        stbtt__track_vertex(c, cx1, cy1);\n    }\n    var v = {};\n    stbtt_setvertex(v, type, x, y, cx, cy);\n    v.cx1 = cx1;\n    v.cy1 = cy1;\n    c.vertices.push(v);\n }\n\n//static void stbtt__csctx_close_shape(stbtt__csctx * ctx)\nfunction stbtt__csctx_close_shape(ctx) {\n    if (ctx.first_x != ctx.x || ctx.first_y != ctx.y) {\n        stbtt__csctx_v(ctx, STBTT_vline, ctx.first_x, ctx.first_y, 0, 0, 0, 0);\n    }\n}\n\n//static void stbtt__csctx_rmove_to(stbtt__csctx * ctx, float dx, float dy)\nfunction stbtt__csctx_rmove_to(ctx, dx, dy) {\n    stbtt__csctx_close_shape(ctx);\n    ctx.first_x = ctx.x = ctx.x + dx;\n    ctx.first_y = ctx.y = ctx.y + dy;\n    stbtt__csctx_v(ctx, STBTT_vmove, ctx.x, ctx.y, 0, 0, 0, 0);\n}\n\n//static void stbtt__csctx_rline_to(stbtt__csctx * ctx, float dx, float dy)\nfunction stbtt__csctx_rline_to(ctx, dx, dy) {\n    ctx.x += dx;\n    ctx.y += dy;\n    stbtt__csctx_v(ctx, STBTT_vline, ctx.x, ctx.y, 0, 0, 0, 0);\n}\n\n//static void stbtt__csctx_rccurve_to(stbtt__csctx * ctx, float dx1, float dy1, float dx2,\n//                                  float dy2, float dx3, float dy3)\nfunction stbtt__csctx_rccurve_to(ctx, dx1, dy1, dx2, dy2, dx3, dy3) {\n    var cx1 = ctx.x + dx1,\n        cy1 = ctx.y + dy1,\n        cx2 = cx1 + dx2,\n        cy2 = cy1 + dy2;\n    ctx.x = cx2 + dx3;\n    ctx.y = cy2 + dy3;\n    stbtt__csctx_v(ctx, STBTT_vcubic, ctx.x, ctx.y, cx1, cy1, cx2, cy2);\n}\n\n//static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)\nfunction stbtt__get_subr(b, n) {\n    var count = stbtt__cff_index_count(b);\n    var bias = 107;\n    if (count >= 33900) {\n        bias = 32768;\n    } else if (count >= 1240) {\n        bias = 1131;\n    }\n    n += bias;\n    if (n < 0 || n >= count) {\n        return stbtt__null_buf();\n    }\n    return stbtt__cff_index_get(b, n);\n}\n\n//static stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo * info, int glyph_index)\nfunction stbtt__cid_get_glyph_subrs(info, glyph_index) {\n    var fdselect = info.fdselect;\n    var nranges, start, end, v, fmt, fdselector = -1, i;\n\n    stbtt__buf_seek(fdselect, 0);\n    fmt = stbtt__buf_get8(fdselect);\n    if (fmt == 0) {\n        stbtt__buf_skip(fdselect, glyph_index);\n        fdselector = stbtt__buf_get8(fdselect);\n    } else if (fmt == 3) {\n        nranges = stbtt__buf_get(fdselect, 2);\n        start = stbtt__buf_get(fdselect, 2);\n        for (i = 0; i < nranges; i++) {\n            v = stbtt__buf_get8(fdselect);\n            end = stbtt__buf_get(fdselect, 2);\n            if (glyph_index >= start && glyph_index < end) {\n                fdselector = v;\n                break;\n            }\n            start = end;\n        }\n    }\n    if (fdselector == -1) {\n        stbtt__null_buf();\n    }\n    return stbtt__get_subrs(info.cff, stbtt__cff_index_get(info.fontdicts, fdselector));\n}\n\n//static int stbtt__run_charstring(const stbtt_fontinfo * info, int glyph_index,\n//                                 stbtt__csctx * c)\nfunction stbtt__run_charstring(info, glyph_index, c) {\n    var in_header = 1, maskbits = 0, subr_stack_height = 0, sp = 0, v, i, b0,\n        has_subrs = 0, clear_stack,\n        s = [], subr_stack = [], subrs = info.subrs, b, f;\n\n    b = stbtt__cff_index_get(info.charstrings, glyph_index);\n    while (b.cursor < b.length) {\n        i = 0;\n        clear_stack = 1;\n        b0 = stbtt__buf_get8(b);\n        switch (b0) {\n        case 0x13:\n        case 0x14:\n            if (in_header) {\n                maskbits += (sp / 2)|0;\n            }\n            in_header = 0;\n            stbtt__buf_skip(b, ((maskbits + 7) / 8)|0);\n            break;\n\n        case 0x01:\n        case 0x03:\n        case 0x12:\n        case 0x17:\n            maskbits += (sp / 2)|0;\n            break;\n\n        case 0x15:\n            in_header = 0;\n            if (sp < 2) {\n                return 0;\n            }\n            stbtt__csctx_rmove_to(c, s[sp - 2], s[sp - 1]);\n            break;\n        case 0x04:\n            in_header = 0;\n            if (sp < 1) {\n                return 0;\n            }\n            stbtt__csctx_rmove_to(c, 0, s[sp - 1]);\n            break;\n        case 0x16:\n            in_header = 0;\n            if (sp < 1) {\n                return 0;\n            }\n            stbtt__csctx_rmove_to(c, s[sp - 1], 0);\n            break;\n\n        case 0x05:\n            if (sp < 2) {\n                return 0;\n            }\n            for (; i + 1 < sp; i += 2) {\n                stbtt__csctx_rline_to(c, s[i], s[i + 1]);\n            }\n            break;\n\n        case 0x07:\n            if (sp < 1) {\n                return 0;\n            }\n            for (;;) {\n                if (i >= sp) {\n                    break;\n                }\n                stbtt__csctx_rline_to(c, 0, s[i]);\n                i++;\n                if (i >= sp) {\n                    break;\n                }\n                stbtt__csctx_rline_to(c, s[i], 0);\n                i++;\n            }\n            break;\n        case 0x06:\n            if (sp < 1) {\n                return 0;\n            }\n            for (;;) {\n                if (i >= sp) {\n                    break;\n                }\n                stbtt__csctx_rline_to(c, s[i], 0);\n                i++;\n                if (i >= sp) {\n                    break;\n                }\n                stbtt__csctx_rline_to(c, 0, s[i]);\n                i++;\n            }\n            break;\n\n        case 0x1F:\n            if (sp < 4) {\n                return 0;\n            }\n            for (;;) {\n                if (i + 3 >= sp) {\n                    break;\n                }\n                stbtt__csctx_rccurve_to(c, s[i], 0, s[i + 1], s[i + 2],\n                                        (sp - i == 5) ? s[i + 4] : 0.0,\n                                        s[i + 3]);\n                i += 4;\n                if (i + 3 >= sp) {\n                    break;\n                }\n                stbtt__csctx_rccurve_to(c, 0, s[i], s[i + 1],\n                                        s[i + 2], s[i + 3],\n                                        (sp - i == 5) ? s[i + 4] : 0.0);\n                i += 4;\n            }\n            break;\n        case 0x1E:\n            if (sp < 4) {\n                return 0;\n            }\n            for (;;) {\n                if (i + 3 >= sp) {\n                    break;\n                }\n                stbtt__csctx_rccurve_to(c, 0, s[i], s[i + 1],\n                                        s[i + 2], s[i + 3],\n                                        (sp - i == 5) ? s[i + 4] : 0.0);\n                i += 4;\n                if (i + 3 >= sp) {\n                    break;\n                }\n                stbtt__csctx_rccurve_to(c, s[i], 0, s[i + 1], s[i + 2],\n                                        (sp - i == 5) ? s[i + 4] : 0.0,\n                                        s[i + 3]);\n                i += 4;\n            }\n            break;\n\n        case 0x08:\n            if (sp < 6) {\n                return 0;\n            }\n            for (; i + 5 < sp; i += 6) {\n                stbtt__csctx_rccurve_to(c, s[i], s[i + 1],\n                                        s[i + 2], s[i + 3],\n                                        s[i + 4], s[i + 5]);\n            }\n            break;\n\n        case 0x18:\n            if (sp < 8) {\n                return 0;\n            }\n            for (; i + 5 < sp - 2; i += 6) {\n                stbtt__csctx_rccurve_to(c, s[i], s[i + 1],\n                                        s[i + 2], s[i + 3],\n                                        s[i + 4], s[i + 5]);\n            }\n            if (i + 1 >= sp) {\n                return 0;\n            }\n            stbtt__csctx_rline_to(c, s[i], s[i + 1]);\n            break;\n\n        case 0x19:\n            if (sp < 8) {\n                return 0;\n            }\n            for (; i + 1 < sp - 6; i += 2) {\n                stbtt__csctx_rline_to(c, s[i], s[i + 1]);\n            }\n            if (i + 5 >= sp) {\n                return 0;\n            }\n            stbtt__csctx_rccurve_to(c, s[i], s[i + 1], s[i + 2],\n                                    s[i + 3], s[i + 4], s[i + 5]);\n            break;\n\n        case 0x1A:\n        case 0x1B:\n            if (sp < 4) {\n                return 0;\n            }\n            f = 0.0;\n            if (sp & 1) {\n                f = s[i];\n                i++;\n            }\n            for (; i + 3 < sp; i += 4) {\n                if (b0 == 0x1B) {\n                    stbtt__csctx_rccurve_to(c, s[i], f,\n                                            s[i + 1],\n                                            s[i + 2],\n                                            s[i + 3], 0.0);\n                } else {\n                    stbtt__csctx_rccurve_to(c, f, s[i],\n                                            s[i + 1],\n                                            s[i + 2], 0.0,\n                                            s[i + 3]);\n                }\n                f = 0.0;\n            }\n            break;\n\n        case 0x0A:\n            if (!has_subrs) {\n                if (info.fdselect.length) {\n                    subrs = stbtt__cid_get_glyph_subrs(info, glyph_index);\n                }\n                has_subrs = 1;\n            }\n\n        case 0x1D:\n            if (sp < 1) {\n                return 0;\n            }\n            v = s[--sp]|0;\n            if (subr_stack_height >= 10) {\n                return 0;\n            }\n            subr_stack[subr_stack_height++] = b;\n            b = stbtt__get_subr(b0 == 0x0A ? subrs : info.gsubrs, v);\n            if (b.length == 0) {\n                return 0;\n            }\n            b.cursor = 0;\n            clear_stack = 0;\n            break;\n\n        case 0x0B:\n            if (subr_stack_height <= 0) {\n                return 0;\n            }\n            b = subr_stack[--subr_stack_height];\n            clear_stack = 0;\n            break;\n\n        case 0x0E:\n            stbtt__csctx_close_shape(c);\n            return 1;\n\n        case 0x0C:\n            var dx1, dx2, dx3, dx4, dx5, dx6, dy1, dy2, dy3, dy4, dy5, dy6,\n                dx, dy, b1 = stbtt__buf_get8(b);\n            switch (b1) {\n            case 0x22:\n                if (sp < 7) {\n                    return 0;\n                }\n                dx1 = s[0];\n                dx2 = s[1];\n                dy2 = s[2];\n                dx3 = s[3];\n                dx4 = s[4];\n                dx5 = s[5];\n                dx6 = s[6];\n                stbtt__csctx_rccurve_to(c, dx1, 0, dx2, dy2, dx3, 0);\n                stbtt__csctx_rccurve_to(c, dx4, 0, dx5, -dy2, dx6, 0);\n                break;\n\n            case 0x23:\n                if (sp < 13) {\n                    return 0;\n                }\n                dx1 = s[0];\n                dy1 = s[1];\n                dx2 = s[2];\n                dy2 = s[3];\n                dx3 = s[4];\n                dy3 = s[5];\n                dx4 = s[6];\n                dy4 = s[7];\n                dx5 = s[8];\n                dy5 = s[9];\n                dx6 = s[10];\n                dy6 = s[11];\n\n                stbtt__csctx_rccurve_to(c, dx1, dy1, dx2, dy2, dx3, dy3);\n                stbtt__csctx_rccurve_to(c, dx4, dy4, dx5, dy5, dx6, dy6);\n                break;\n\n            case 0x24:\n                if (sp < 9) {\n                    return 0;\n                }\n                dx1 = s[0];\n                dy1 = s[1];\n                dx2 = s[2];\n                dy2 = s[3];\n                dx3 = s[4];\n                dx4 = s[5];\n                dx5 = s[6];\n                dy5 = s[7];\n                dx6 = s[8];\n                stbtt__csctx_rccurve_to(c, dx1, dy1, dx2, dy2, dx3, 0);\n                stbtt__csctx_rccurve_to(c, dx4, 0, dx5, dy5, dx6, -(dy1 + dy2 + dy5));\n                break;\n\n            case 0x25:\n                if (sp < 11) {\n                    return 0;\n                }\n                dx1 = s[0];\n                dy1 = s[1];\n                dx2 = s[2];\n                dy2 = s[3];\n                dx3 = s[4];\n                dy3 = s[5];\n                dx4 = s[6];\n                dy4 = s[7];\n                dx5 = s[8];\n                dy5 = s[9];\n                dx6 = dy6 = s[10];\n                dx = dx1 + dx2 + dx3 + dx4 + dx5;\n                dy = dy1 + dy2 + dy3 + dy4 + dy5;\n                if (abs(dx) > abs(dy)) {\n                    dy6 = -dy;\n                } else {\n                    dx6 = -dx;\n                }\n                stbtt__csctx_rccurve_to(c, dx1, dy1, dx2, dy2, dx3, dy3);\n                stbtt__csctx_rccurve_to(c, dx4, dy4, dx5, dy5, dx6, dy6);\n                break;\n\n            default:\n                return 0;\n            }\n            break;\n\n        default:\n            if (b0 != 255 && b0 != 28 && (b0 < 32 || b0 > 254)) {\n                return 0;\n            }\n            if (b0 == 255) {\n                // f = (float)(stbtt_int32)stbtt__buf_get32(&b) / 0x10000;\n                f = (stbtt__buf_get(b, 4)|0) / 0x10000;\n            } else {\n                stbtt__buf_skip(b, -1);\n                // f = (float)(stbtt_int16)stbtt__cff_int(&b);\n                f = ((stbtt__cff_int(b)<<16)|0)>>16;\n            }\n            if (sp >= 48) {\n                return 0;\n            }\n            s[sp++] = f;\n            clear_stack = 0;\n            break;\n        }\n        if (clear_stack) {\n            sp = 0;\n        }\n    }\n    return 0;\n}\n\nfunction stbtt__csctx_init() {\n    return { started:0, first_x:0, first_y:0, x:0, y:0,\n            min_x:0, max_x:0, min_y:0, max_y:0,\n            vertices:[]\n        };\n}\n\n//static int stbtt__GetGlyphShapeT2(const stbtt_fontinfo * info, int glyph_index,\n//                                  stbtt_vertex ** pvertices)\nfunction stbtt__GetGlyphShapeT2(info, glyph_index) {\n    var output_ctx = stbtt__csctx_init();\n    if (stbtt__run_charstring(info, glyph_index, output_ctx)) {\n        return output_ctx.vertices;\n    }\n    return null;\n}\n\n//static int stbtt__GetGlyphInfoT2(const stbtt_fontinfo * info, int glyph_index, int *x0,\n//                      int *y0, int *x1, int *y1)\nfunction stbtt__GetGlyphInfoT2(info, glyph_index, out) {\n    var c = stbtt__csctx_init();\n    var r = stbtt__run_charstring(info, glyph_index, c);\n    out.x0 = r ? c.min_x : 0;\n    out.y0 = r ? c.min_y : 0;\n    out.x1 = r ? c.max_x : 0;\n    out.y1 = r ? c.max_y : 0;\n    return r && c.vertices ? c.vertices.length : 0;\n}\n\n//extern int stbtt_GetGlyphShape(const stbtt_fontinfo * info, int glyph_index,\n//                               stbtt_vertex ** pvertices)\nfunction stbtt_GetGlyphShape(info, glyph_index) {\n    if (!info.cff.length) {\n        return stbtt__GetGlyphShapeTT(info, glyph_index);\n    } else {\n        return stbtt__GetGlyphShapeT2(info, glyph_index);\n    }\n}\n\n//extern void stbtt_GetGlyphHMetrics(const stbtt_fontinfo * info, int glyph_index,\n//                       int *advanceWidth, int *leftSideBearing)\nfunction stbtt_GetGlyphHMetrics(info, glyph_index) {\n    var numOfLongHorMetrics = ttUSHORT(info.data, info.hhea + 34);\n    if (glyph_index < numOfLongHorMetrics) {\n        return {\n                advanceWidth:   ttSHORT(info.data, info.hmtx + 4 * glyph_index),\n                leftSideBearing:ttSHORT(info.data, info.hmtx + 4 * glyph_index + 2)\n            };\n    } else {\n        return {\n                advanceWidth:   ttSHORT(info.data, info.hmtx + 4 * (numOfLongHorMetrics - 1)),\n                leftSideBearing:ttSHORT(info.data, info.hmtx + 4 * numOfLongHorMetrics +\n                                            2 * (glyph_index - numOfLongHorMetrics))\n            };\n    }\n}\n\n//extern void stbtt_GetCodepointHMetrics(const stbtt_fontinfo * info, int codepoint,\n//                           int *advanceWidth, int *leftSideBearing)\nfunction stbtt_GetCodepointHMetrics(info, codepoint) {\n     return stbtt_GetGlyphHMetrics(info, stbtt_FindGlyphIndex(info, codepoint));\n}\n\n//extern void stbtt_GetFontVMetrics(const stbtt_fontinfo * info, int *ascent, int *descent, int *lineGap)\nfunction stbtt_GetFontVMetrics(info) {\n    return {\n        ascent: ttSHORT(info.data, info.hhea + 4),\n        descent:ttSHORT(info.data, info.hhea + 6),\n        linegap:ttSHORT(info.data, info.hhea + 8),\n    };\n}\n\n//extern void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo * font, int glyph,\n//                              float scale_x, float scale_y, float shift_x, float shift_y,\n//                              int *ix0, int *iy0, int *ix1, int *iy1)\nfunction stbtt_GetGlyphBitmapBoxSubpixel(font, glyph, scale_x, scale_y, shift_x, shift_y) {\n    var tmp = {};\n    if (!stbtt_GetGlyphBox(font, glyph, tmp)) {\n        return { x0:0, y0:0, x1:0, y1:0 };\n    }\n    return {\n            x0:floor(tmp.x0 * scale_x + shift_x),\n            y0:floor(-tmp.y1 * scale_y + shift_y),\n            x1:ceil(tmp.x1 * scale_x + shift_x),\n            y1:ceil(-tmp.y0 * scale_y + shift_y),\n        };\n}\n\n//extern void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo * font,\n//                                    int codepoint, float scale_x, float scale_y, float shift_x,\n//                                    float shift_y, int *ix0, int *iy0, int *ix1, int *iy1)\nfunction stbtt_GetCodepointBitmapBoxSubpixel(font, codepoint, scale_x, scale_y, shift_x, shift_y) {\n    return stbtt_GetGlyphBitmapBoxSubpixel(font, stbtt_FindGlyphIndex(font, codepoint),\n                                            scale_x, scale_y, shift_x, shift_y);\n}\n\n//extern void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo * font, int codepoint,   float scale_x, float scale_y,\n//                                      int *ix0, int *iy0, int *ix1, int *iy1)\nfunction stbtt_GetCodepointBitmapBox(font, codepoint, scale_x, scale_y) {\n    return stbtt_GetCodepointBitmapBoxSubpixel(font, codepoint, scale_x, scale_y, 0, 0);\n}\n\n//static stbtt__active_edge *stbtt__new_active(stbtt__hheap * hh, stbtt__edge * e, int off_x, float start_point, void *userdata)\nfunction stbtt__new_active(e, off_x, start_point) {\n    var dxdy = (e.x1 - e.x0) / (e.y1 - e.y0);\n    return {\n        fdx:dxdy,\n        fdy:dxdy != 0.0 ? (1.0 / dxdy) : 0.0,\n        fx:(e.x0 + dxdy * (start_point - e.y0)) - (off_x|0),\n        direction:e.invert ? 1.0 : -1.0,\n        sy:e.y0,\n        ey:e.y1,\n        next:0,\n    };\n}\n\n//static void stbtt__handle_clipped_edge(float *scanline, int x, stbtt__active_edge * e,\n//                           float x0, float y0, float x1, float y1)\nfunction stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x1, y1) {\n    x = x|0;\n    if (y0 == y1) {\n        return;\n    }\n    if (y0 > e.ey) {\n        return;\n    }\n    if (y1 < e.sy) {\n        return;\n    }\n    if (y0 < e.sy) {\n        x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);\n        y0 = e.sy;\n    }\n    if (y1 > e.ey) {\n        x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);\n        y1 = e.ey;\n    }\n\n    if (x0 <= x && x1 <= x) {\n        scanline[x] += e.direction * (y1 - y0);\n    } else if (x0 >= x + 1 && x1 >= x + 1) {\n\n    } else {\n        scanline[x] += e.direction * (y1 - y0) * (1 - ((x0 - x) + (x1 - x)) / 2);\n    }\n}\n\n//static void stbtt__fill_active_edges_new(float *scanline, float *scanline_fill, int len,\n//                             stbtt__active_edge * e, float y_top)\n// The C implementation passed scanline_fill as a +1 pointer on the call, and then -1 in\n// places in this function.  That doesn't work with array-views, so we reverse the handling.\nfunction stbtt__fill_active_edges_new(scanline, scanline_fill, len, e, y_top) {\n    var y_bottom = y_top + 1;\n    while (e) {\n        if (e.fdx == 0) {\n            var x0 = e.fx;\n            if (x0 < len) {\n                if (x0 >= 0) {\n                    stbtt__handle_clipped_edge(scanline, x0, e, x0, y_top, x0, y_bottom);\n                    stbtt__handle_clipped_edge(scanline_fill, x0+1, e, x0, y_top, x0, y_bottom);\n                } else {\n                    stbtt__handle_clipped_edge(scanline_fill, 0, e, x0, y_top, x0, y_bottom);\n                }\n            }\n        } else {\n            var x0 = e.fx,\n                dx = e.fdx,\n                xb = x0 + dx,\n                x_top, x_bottom,\n                sy0, sy1,\n                dy = e.fdy;\n\n            if (e.sy > y_top) {\n                x_top = x0 + dx * (e.sy - y_top);\n                sy0 = e.sy;\n            } else {\n                x_top = x0;\n                sy0 = y_top;\n            }\n            if (e.ey < y_bottom) {\n                x_bottom = x0 + dx * (e.ey - y_top);\n                sy1 = e.ey;\n            } else {\n                x_bottom = xb;\n                sy1 = y_bottom;\n            }\n\n            if (x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {\n                if ((x_top|0) == (x_bottom|0)) {\n                    var height = sy1 - sy0,\n                        x = x_top|0;\n                    scanline[x] += e.direction * (1 - ((x_top - x) + (x_bottom - x)) / 2) * height;\n                    scanline_fill[x+1] += e.direction * height;\n                } else {\n                    var t, x, x1, x2, y_crossing, step, sign, area;\n                    if (x_top > x_bottom) {\n                        sy0 = y_bottom - (sy0 - y_top);\n                        sy1 = y_bottom - (sy1 - y_top);\n                        t = sy0, sy0 = sy1, sy1 = t;\n                        t = x_bottom, x_bottom = x_top, x_top = t;\n                        dx = -dx;\n                        dy = -dy;\n                        t = x0, x0 = xb, xb = t;\n                    }\n\n                    x1 = x_top|0;\n                    x2 = x_bottom|0;\n                    y_crossing = (x1 + 1 - x0) * dy + y_top;\n                    sign = e.direction;\n                    area = sign * (y_crossing - sy0);\n\n                    scanline[x1] += area * (1 - ((x_top - x1) + (x1 + 1 - x1)) / 2);\n\n                    step = sign * dy;\n                    for (x = x1 + 1; x < x2; ++x) {\n                        scanline[x] += area + step / 2;\n                        area += step;\n                    }\n                    y_crossing += dy * (x2 - (x1 + 1));\n\n                    scanline[x2] += area + sign * (1 - ((x2 - x2) + (x_bottom - x2)) / 2) *\n                                                (sy1 - y_crossing);\n                    scanline_fill[x2+1] += sign * (sy1 - sy0);\n                }\n            } else {\n                for (var x = 0; x < len; ++x) {\n                    var y0 = y_top,\n                        x1 = x,\n                        x2 = x + 1,\n                        x3 = xb,\n                        y3 = y_bottom,\n                        y1 = (x - x0) / dx + y_top,\n                        y2 = (x + 1 - x0) / dx + y_top;\n\n                    if (x0 < x1 && x3 > x2) {\n                        stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x1, y1);\n                        stbtt__handle_clipped_edge(scanline, x, e, x1, y1, x2, y2);\n                        stbtt__handle_clipped_edge(scanline, x, e, x2, y2, x3, y3);\n                    } else if (x3 < x1 && x0 > x2) {\n                        stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x2, y2);\n                        stbtt__handle_clipped_edge(scanline, x, e, x2, y2, x1, y1);\n                        stbtt__handle_clipped_edge(scanline, x, e, x1, y1, x3, y3);\n                    } else if (x0 < x1 && x3 > x1) {\n                        stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x1, y1);\n                        stbtt__handle_clipped_edge(scanline, x, e, x1, y1, x3, y3);\n                    } else if (x3 < x1 && x0 > x1) {\n                        stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x1, y1);\n                        stbtt__handle_clipped_edge(scanline, x, e, x1, y1, x3, y3);\n                    } else if (x0 < x2 && x3 > x2) {\n                        stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x2, y2);\n                        stbtt__handle_clipped_edge(scanline, x, e, x2, y2, x3, y3);\n                    } else if (x3 < x2 && x0 > x2) {\n                        stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x2, y2);\n                        stbtt__handle_clipped_edge(scanline, x, e, x2, y2, x3, y3);\n                    } else {\n                        stbtt__handle_clipped_edge(scanline, x, e, x0, y0, x3, y3);\n                    }\n                }\n            }\n        }\n        e = e.next;\n    }\n}\n\n//static void stbtt__rasterize_sorted_edges(stbtt__bitmap * result, stbtt__edge * e, int n,\n//                              int vsubsample, int off_x, int off_y, void *userdata)\nfunction stbtt__rasterize_sorted_edges(result, edges, nedges, vsubsample, off_x, off_y) {\n    vsubsample |= 0, off_x |= 0, off_y |= 0;\n    var active = null, z;\n    var y = off_y, j = 0, i;\n    var scanline = new Float32Array(result.w * 2 + 1);\n    var scanline2 = scanline.subarray(result.w);\n    var eoff = 0;\n\n    edges[nedges].y0 = off_y + result.h + 1;\n    while (j < result.h) {\n        var scan_y_top = y + 0.0,\n            scan_y_bottom = y + 1.0,\n            step = active;\n\n        // F'ing IE\n        if (scanline.fill) { scanline.fill(0); }\n        else { for (var $i = 0, $l = scanline.length; $i < $l; $i++) scanline[$i] = 0; }\n\n        while (step) {\n            z = step;\n            step = z.next;\n            if (z.ey <= scan_y_top) {\n                z.direction = 0;\n            } else {\n            }\n        }\n\n        while (edges[eoff].y0 <= scan_y_bottom) {\n            if (edges[eoff].y0 != edges[eoff].y1) {\n                z = stbtt__new_active(edges[eoff], off_x, scan_y_top);\n                z.next = active;\n                active = z;\n            }\n            ++eoff;\n        }\n\n        if (active) {\n            // C implementation passed scanline2+1.  See function for details.\n            stbtt__fill_active_edges_new(scanline, scanline2, result.w, active, scan_y_top);\n        }\n        for (var i = 0, sum = 0; i < result.w; ++i) {\n            var k, m;\n            sum += scanline2[i];\n            k = scanline[i] + sum;\n            k = abs(k) * 255 + 0.5;\n            m = k>>>0;\n            if (m > 255) {\n                m = 255;\n            }\n            result.pixels[j * result.stride + i] = m;\n        }\n\n        step = active;\n        while (step) {\n            z = step;\n            z.fx += z.fdx;\n            step = z.next;\n        }\n        ++y;\n        ++j;\n    }\n}\n\n//static void stbtt__sort_edges_ins_sort(stbtt__edge * p, int n)\nfunction stbtt__sort_edges_ins_sort(p, n) {\n    for (var i = 1; i < n; ++i) {\n        var t = p[i], j = i;\n        while (j > 0 && t.y0 < p[j-1].y0) {\n             p[j] = p[j - 1];\n            --j;\n        }\n        if (i != j) {\n            p[j] = t;\n        }\n    }\n}\n\n//static void stbtt__sort_edges_quicksort(stbtt__edge * p, int n)\n// The C implementation messed with the p pointer.  JS uses an offset instead.\nfunction stbtt__sort_edges_quicksort(p, o, n) {\n    while (n > 12) {\n        var t, c, i, j, z,\n            m = n >> 1,\n            c01 = p[o].y0 < p[o+m].y0,\n            c12 = p[o+m].y0 < p[o+n-1].y0;\n\n        if (c01 != c12) {\n            c = p[o].y0 < p[o+n-11].y0;\n            z = (c == c12) ? 0 : n - 1;\n            t = p[o+z];\n            p[o+z] = p[o+m];\n            p[o+m] = t;\n        }\n\n        t = p[o];\n        p[o] = p[o+m];\n        p[o+m] = t;\n\n        i = 1;\n        j = n - 1;\n        for (;;) {\n            for ( ; p[o+i].y0 < p[o].y0; ++i) {\n            }\n            for ( ; p[o].y0 < p[o+j].y0; --j) {\n            }\n            if (i >= j) {\n                break;\n            }\n            t = p[o+i];\n            p[o+i] = p[o+j];\n            p[o+j] = t;\n\n            ++i;\n            --j;\n        }\n\n        if (j < n - i) {\n            stbtt__sort_edges_quicksort(p, o, j);\n            o += i;\n            n -= i;\n        } else {\n            stbtt__sort_edges_quicksort(p, o + i, n - i);\n            n = j;\n        }\n    }\n}\n\n//static void stbtt__sort_edges(stbtt__edge * p, int n)\nfunction stbtt__sort_edges(p, n) {\n    stbtt__sort_edges_quicksort(p, 0, n);\n    stbtt__sort_edges_ins_sort(p, n);\n}\n\n//static void stbtt__rasterize(stbtt__bitmap * result, stbtt__point * pts, int *wcount,\n//                 int windings, float scale_x, float scale_y, float shift_x,\n//                 float shift_y, int off_x, int off_y, int invert,\n//                 void *userdata)\nfunction stbtt__rasterize(result, pts, wcount, scale_x, scale_y, shift_x, shift_y, off_x, off_y, invert) {\n    var y_scale_inv = invert ? -scale_y : scale_y,\n        e, n, i, j, k, m,\n        vsubsample = 1;\n\n    n = 0;\n    for (i = 0; i < wcount.length; ++i) {\n        n += wcount[i];\n    }\n\n    e = oalloc(n + 1);\n    n = 0;\n    m = 0;\n    for (i = 0; i < wcount.length; ++i) {\n        var p = m;\n        m += wcount[i];\n        j = wcount[i] - 1;\n        for (k = 0; k < wcount[i]; j = k++) {\n            var a = k, b = j;\n            if (pts[p+j].y == pts[p+k].y) {\n                continue;\n            }\n\n            e[n].invert = 0;\n            if (invert ? pts[p+j].y > pts[p+k].y : pts[p+j].y < pts[p+k].y) {\n                e[n].invert = 1;\n                a = j, b = k;\n            }\n            e[n].x0 = pts[p+a].x * scale_x + shift_x;\n            e[n].y0 = (pts[p+a].y * y_scale_inv + shift_y) * vsubsample;\n            e[n].x1 = pts[p+b].x * scale_x + shift_x;\n            e[n].y1 = (pts[p+b].y * y_scale_inv + shift_y) * vsubsample;\n            ++n;\n        }\n    }\n\n    stbtt__sort_edges(e, n);\n    stbtt__rasterize_sorted_edges(result, e, n, vsubsample, off_x, off_y);\n }\n\n//static int stbtt__tesselate_curve(stbtt__point * points, int *num_points, float x0,\n//                       float y0, float x1, float y1, float x2, float y2,\n//                       float objspace_flatness_squared, int n)\nfunction stbtt__tesselate_curve(points, x0, y0, x1, y1, x2, y2, objspace_flatness_squared, n) {\n    var mx = (x0 + 2 * x1 + x2) / 4,\n        my = (y0 + 2 * y1 + y2) / 4,\n        dx = (x0 + x2) / 2 - mx,\n        dy = (y0 + y2) / 2 - my;\n    if (n > 16) {\n        return 1;\n    }\n    if (dx * dx + dy * dy > objspace_flatness_squared) {\n        stbtt__tesselate_curve(points, x0, y0, (x0 + x1) / 2.0, (y0 + y1) / 2.0, mx, my,\n                               objspace_flatness_squared, n + 1);\n        stbtt__tesselate_curve(points, mx, my, (x1 + x2) / 2.0, (y1 + y2) / 2.0, x2, y2,\n                               objspace_flatness_squared, n + 1);\n    } else {\n        points.push({ x:x2, y:y2 });\n    }\n    return 1;\n}\n\n//static void stbtt__tesselate_cubic(stbtt__point * points, int *num_points, float x0,\n//                       float y0, float x1, float y1, float x2, float y2,\n//                       float x3, float y3, float objspace_flatness_squared, int n)\nfunction stbtt__tesselate_cubic(points, x0, y0, x1, y1, x2, y2, x3, y3, objspace_flatness_squared, n) {\n    var dx0 = x1 - x0,\n        dy0 = y1 - y0,\n        dx1 = x2 - x1,\n        dy1 = y2 - y1,\n        dx2 = x3 - x2,\n        dy2 = y3 - y2,\n        dx = x3 - x0,\n        dy = y3 - y0,\n        longlen = sqrt(dx0 * dx0 + dy0 * dy0) +\n                  sqrt(dx1 * dx1 + dy1 * dy1) +\n                  sqrt(dx2 * dx2 + dy2 * dy2),\n        shortlen = sqrt(dx * dx + dy * dy),\n        flatness_squared = longlen * longlen - shortlen * shortlen;\n    if (n > 16) {\n        return;\n    }\n\n    if (flatness_squared > objspace_flatness_squared) {\n        var x01 = (x0 + x1) / 2,\n            y01 = (y0 + y1) / 2,\n            x12 = (x1 + x2) / 2,\n            y12 = (y1 + y2) / 2,\n            x23 = (x2 + x3) / 2,\n            y23 = (y2 + y3) / 2,\n            xa = (x01 + x12) / 2,\n            ya = (y01 + y12) / 2,\n            xb = (x12 + x23) / 2,\n            yb = (y12 + y23) / 2,\n            mx = (xa + xb) / 2,\n            my = (ya + yb) / 2;\n\n        stbtt__tesselate_cubic(points, x0, y0, x01, y01, xa, ya, mx, my,\n                                objspace_flatness_squared, n + 1);\n        stbtt__tesselate_cubic(points, mx, my, xb, yb, x23, y23, x3, y3,\n                                objspace_flatness_squared, n + 1);\n    } else {\n        points.push({ x:x3, y:y3 });\n    }\n}\n\n//static stbtt__point *stbtt_FlattenCurves(stbtt_vertex * vertices, int num_verts,\n//        float objspace_flatness, int **contour_lengths, int *num_contours, void *userdata)\nfunction stbtt_FlattenCurves(vertices, objspace_flatness, contour_lengths) {\n    var points = [],\n        objspace_flatness_squared = objspace_flatness * objspace_flatness,\n        n = -1, start = 0,\n        x = 0, y = 0;\n    for (var i = 0, nverts = vertices.length; i < nverts; ++i) {\n        switch (vertices[i].type) {\n        case STBTT_vmove:\n            if (n >= 0) {\n                contour_lengths[n] = points.length - start;\n            }\n            ++n;\n            start = points.length;\n            x = vertices[i].x, y = vertices[i].y;\n            points.push({ x:x, y:y });\n            break;\n        case STBTT_vline:\n            x = vertices[i].x, y = vertices[i].y;\n            points.push({ x:x, y:y });\n            break;\n        case STBTT_vcurve:\n            stbtt__tesselate_curve(points, x, y, vertices[i].cx, vertices[i].cy,\n                                   vertices[i].x, vertices[i].y, objspace_flatness_squared, 0);\n            x = vertices[i].x, y = vertices[i].y;\n            break;\n        case STBTT_vcubic:\n            stbtt__tesselate_cubic(points, x, y, vertices[i].cx, vertices[i].cy,\n                                   vertices[i].cx1, vertices[i].cy1, vertices[i].x, vertices[i].y,\n                                   objspace_flatness_squared, 0);\n            x = vertices[i].x, y = vertices[i].y;\n            break;\n        }\n    }\n    contour_lengths[n] = points.length - start;\n\n    //console.log(\"--cl(\" + (n+1) + '):');\n    //for (var i = 0; i <= n; i++) {\n    //  console.log(\" %d\", contour_lengths[i]);\n    //}\n    //console.log(\"\\n--pts(\" + points.length + '):');\n    //for (var i = 0; i < points.length; i++) {\n    //  var pt = points[i];\n    //  console.log(i + ': ' + pt.x  + ',' + pt.y);\n    //}\n\n    return points;\n}\n\n//extern void stbtt_Rasterize(stbtt__bitmap * result, float flatness_in_pixels,\n//                stbtt_vertex * vertices, int num_verts, float scale_x,\n//                float scale_y, float shift_x, float shift_y, int x_off,\n//                int y_off, int invert, void *userdata)\nfunction stbtt_Rasterize(result, flatness_in_pixels, vertices, scale_x, scale_y, shift_x, shift_y,\n                         x_off, y_off, invert) {\n    x_off |= 0, y_off |= 0;\n    var scale = scale_x > scale_y ? scale_y : scale_x,\n        wcount = [],\n        windings = stbtt_FlattenCurves(vertices, flatness_in_pixels / scale, wcount);\n    if (windings) {\n        stbtt__rasterize(result, windings, wcount, scale_x, scale_y,\n                         shift_x, shift_y, x_off, y_off, invert);\n    }\n}\n\n//extern void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo * info,\n//                              unsigned char *output, int out_w, int out_h,\n//                              int out_stride, float scale_x, float scale_y,\n//                              float shift_x, float shift_y, int glyph)\nfunction stbtt_MakeGlyphBitmapSubpixel(info, buffer, out_w, out_h, out_stride,\n                                    scale_x, scale_y, shift_x, shift_y, glyph) {\n    var vertices = stbtt_GetGlyphShape(info, glyph);\n    var gbm = {};\n    var rect = stbtt_GetGlyphBitmapBoxSubpixel(info, glyph, scale_x, scale_y, shift_x, shift_y);\n    gbm.pixels = buffer;\n    gbm.w = out_w|0;\n    gbm.h = out_h|0;\n    gbm.stride = out_stride|0;\n\n    if (gbm.w && gbm.h) {\n        stbtt_Rasterize(gbm, 0.35, vertices, scale_x, scale_y, shift_x, shift_y, rect.x0, rect.y0, 1);\n    }\n}\n\n//extern void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo * info,\n//                                  unsigned char *output, int out_w,\n//                                  int out_h, int out_stride, float scale_x,\n//                                  float scale_y, float shift_x,\n//                                  float shift_y, int codepoint)\nfunction stbtt_MakeCodepointBitmapSubpixel(info, buffer, out_w, out_h, out_stride,\n                                    scale_x, scale_y, shift_x, shift_y, codepoint) {\n    stbtt_MakeGlyphBitmapSubpixel(info, buffer, out_w, out_h, out_stride,\n                                  scale_x, scale_y, shift_x, shift_y,\n                                  stbtt_FindGlyphIndex(info, codepoint));\n}\n\n//extern int stbtt_InitFont(stbtt_fontinfo * info, const unsigned char *data, int offset)\nfunction stbtt_InitFont(font, data, offset) {\n    return stbtt_InitFont_internal(font, data, offset);\n}\n\n\nfunction InitFont(data) {\n    var font = {};\n    if (!stbtt_InitFont_internal(font, data, 0)) {\n        return null;\n    }\n\n    var vm = stbtt_GetFontVMetrics(font);\n\n    font.ascent = vm.ascent;\n    font.descent = vm.descent;\n    font.linegap = vm.linegap;\n\n    return font;\n}\n\nfunction GetGlyph(font, codepoint, size_x, size_y) {\n    size_y = size_y || size_x;\n    var scale_x = size_x / font.ascent;\n    var scale_y = size_y / font.ascent;\n\n    var glyph = stbtt_FindGlyphIndex(font, codepoint);\n    if (!glyph && codepoint) {\n        return null;\n    }\n\n    var vertices = stbtt_GetGlyphShape(font, glyph);\n    var rect = stbtt_GetGlyphBitmapBoxSubpixel(font, glyph, scale_x, scale_y, 0, 0);\n    var width = rect.x1 - rect.x0;\n    var height = rect.y1 - rect.y0;\n    var pixels = null;\n\n    if (width && height) {\n        var gbm = {\n            pixels : (pixels = new Uint8Array(width * height)),\n            w : width,\n            h : height,\n            stride : width,\n        }\n        stbtt_Rasterize(gbm, 0.35, vertices, scale_x, scale_y, 0, 0, rect.x0, rect.y0, 1);\n    }\n\n    var hmetrics = stbtt_GetGlyphHMetrics(font, glyph);\n    return {\n        glyph:glyph, pixels:pixels, width:width, height:height, top:-rect.y0, left:rect.x0,\n        advance:floor(hmetrics.advanceWidth * scale_x),\n    }\n}\nfunction GetPaths(font, codepoint, size_x, size_y) {\n    size_y = size_y || size_x;\n    var scale_x = size_x / font.ascent;\n    var scale_y = size_y / font.ascent;\n\n    var glyph = stbtt_FindGlyphIndex(font, codepoint);\n    if (!glyph && codepoint) {\n        return null;\n    }\n    var vertices = stbtt_GetGlyphShape(font, glyph);\n    var hmetrics = stbtt_GetGlyphHMetrics(font, glyph);\n\n    // The hmetrics just give us advance.  We need ascent and descent as well.\n    var ascent = 0;\n    var descent = 0;\n\n    // Convert to SVG notation\n    var paths = [];\n    if (vertices) {\n        for (var i = 0, l = vertices.length; i < l; i++) {\n            var v = vertices[i];\n            var path;\n            if (v.type == STBTT_vmove) {\n                path = { type:'M', x:v.x * scale_x, y:v.y * scale_y };\n            } else if (v.type == STBTT_vline) {\n                path = { type:'L', x:v.x * scale_x, y:v.y * scale_y };\n            } else if (v.type == STBTT_vcurve) {\n                path = { type:'Q', x:v.x * scale_x, y:v.y * scale_y,\n                                  cx:v.cx * scale_x, cy:v.cy * scale_y };\n            } else if (v.type == STBTT_vcubic) {\n                path = { type:'C', x:v.x * scale_x, y:v.y * scale_y,\n                                 cx1:v.cx * scale_x, cy1:v.cy * scale_y,\n                                 cx2:v.cx1 * scale_x, cy2:v.cy1 * scale_y };\n            } else {\n                continue;\n            }\n            if (path.y > ascent)  ascent  = path.y;\n            if (path.y < descent) descent = path.y;\n            paths.push(path);\n        }\n    }\n\n    // Add the glyph metrics to the returned array.\n    paths.advance = hmetrics.advanceWidth * scale_x;\n    paths.ascent  = ascent;\n    paths.descent = descent;\n    return paths;\n}\n\n\n// exports\nreturn {\n    InitFont:   InitFont,\n    GetGlyph:   GetGlyph,\n    GetPaths:   GetPaths,\n}\n\n})();\nfunction toUint8Array(data) {\n    if (typeof data == \"string\") {\n        var binary = /[^A-Za-z0-9+\\/=\\s]/.test(data);\n        var bstr = binary ? data : atob(data),\n            len = bstr.length,\n            bytes = new Uint8Array(len);\n        for (var i = 0; i < len; i++) {\n            bytes[i] = bstr.charCodeAt(i);\n        }\n        return bytes;\n    } else if (data instanceof Uint8Array) {\n        return data;\n    } else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    throw new ReferenceError(\"data must be a binary or base64 encoded string or Uint8Array\");\n}\n\nFontLib.loadFont(\"OCR-A\", 100, 100, \"\");\nFontLib.loadFont(\"OCR-B\", 96, 100, \"\");\nexport function auspost(opts,dwg) { return _ToAny(bwipp_auspost,opts,dwg); };\nexport function azteccode(opts,dwg) { return _ToAny(bwipp_azteccode,opts,dwg); };\nexport function azteccodecompact(opts,dwg) { return _ToAny(bwipp_azteccodecompact,opts,dwg); };\nexport function aztecrune(opts,dwg) { return _ToAny(bwipp_aztecrune,opts,dwg); };\nexport function bc412(opts,dwg) { return _ToAny(bwipp_bc412,opts,dwg); };\nexport function channelcode(opts,dwg) { return _ToAny(bwipp_channelcode,opts,dwg); };\nexport function codablockf(opts,dwg) { return _ToAny(bwipp_codablockf,opts,dwg); };\nexport function code11(opts,dwg) { return _ToAny(bwipp_code11,opts,dwg); };\nexport function code128(opts,dwg) { return _ToAny(bwipp_code128,opts,dwg); };\nexport function code16k(opts,dwg) { return _ToAny(bwipp_code16k,opts,dwg); };\nexport function code2of5(opts,dwg) { return _ToAny(bwipp_code2of5,opts,dwg); };\nexport function code32(opts,dwg) { return _ToAny(bwipp_code32,opts,dwg); };\nexport function code39(opts,dwg) { return _ToAny(bwipp_code39,opts,dwg); };\nexport function code39ext(opts,dwg) { return _ToAny(bwipp_code39ext,opts,dwg); };\nexport function code49(opts,dwg) { return _ToAny(bwipp_code49,opts,dwg); };\nexport function code93(opts,dwg) { return _ToAny(bwipp_code93,opts,dwg); };\nexport function code93ext(opts,dwg) { return _ToAny(bwipp_code93ext,opts,dwg); };\nexport function codeone(opts,dwg) { return _ToAny(bwipp_codeone,opts,dwg); };\nexport function coop2of5(opts,dwg) { return _ToAny(bwipp_coop2of5,opts,dwg); };\nexport function daft(opts,dwg) { return _ToAny(bwipp_daft,opts,dwg); };\nexport function databarexpanded(opts,dwg) { return _ToAny(bwipp_databarexpanded,opts,dwg); };\nexport function databarexpandedcomposite(opts,dwg) { return _ToAny(bwipp_databarexpandedcomposite,opts,dwg); };\nexport function databarexpandedstacked(opts,dwg) { return _ToAny(bwipp_databarexpandedstacked,opts,dwg); };\nexport function databarexpandedstackedcomposite(opts,dwg) { return _ToAny(bwipp_databarexpandedstackedcomposite,opts,dwg); };\nexport function databarlimited(opts,dwg) { return _ToAny(bwipp_databarlimited,opts,dwg); };\nexport function databarlimitedcomposite(opts,dwg) { return _ToAny(bwipp_databarlimitedcomposite,opts,dwg); };\nexport function databaromni(opts,dwg) { return _ToAny(bwipp_databaromni,opts,dwg); };\nexport function databaromnicomposite(opts,dwg) { return _ToAny(bwipp_databaromnicomposite,opts,dwg); };\nexport function databarstacked(opts,dwg) { return _ToAny(bwipp_databarstacked,opts,dwg); };\nexport function databarstackedcomposite(opts,dwg) { return _ToAny(bwipp_databarstackedcomposite,opts,dwg); };\nexport function databarstackedomni(opts,dwg) { return _ToAny(bwipp_databarstackedomni,opts,dwg); };\nexport function databarstackedomnicomposite(opts,dwg) { return _ToAny(bwipp_databarstackedomnicomposite,opts,dwg); };\nexport function databartruncated(opts,dwg) { return _ToAny(bwipp_databartruncated,opts,dwg); };\nexport function databartruncatedcomposite(opts,dwg) { return _ToAny(bwipp_databartruncatedcomposite,opts,dwg); };\nexport function datalogic2of5(opts,dwg) { return _ToAny(bwipp_datalogic2of5,opts,dwg); };\nexport function datamatrix(opts,dwg) { return _ToAny(bwipp_datamatrix,opts,dwg); };\nexport function datamatrixrectangular(opts,dwg) { return _ToAny(bwipp_datamatrixrectangular,opts,dwg); };\nexport function datamatrixrectangularextension(opts,dwg) { return _ToAny(bwipp_datamatrixrectangularextension,opts,dwg); };\nexport function dotcode(opts,dwg) { return _ToAny(bwipp_dotcode,opts,dwg); };\nexport function ean13(opts,dwg) { return _ToAny(bwipp_ean13,opts,dwg); };\nexport function ean13composite(opts,dwg) { return _ToAny(bwipp_ean13composite,opts,dwg); };\nexport function ean14(opts,dwg) { return _ToAny(bwipp_ean14,opts,dwg); };\nexport function ean2(opts,dwg) { return _ToAny(bwipp_ean2,opts,dwg); };\nexport function ean5(opts,dwg) { return _ToAny(bwipp_ean5,opts,dwg); };\nexport function ean8(opts,dwg) { return _ToAny(bwipp_ean8,opts,dwg); };\nexport function ean8composite(opts,dwg) { return _ToAny(bwipp_ean8composite,opts,dwg); };\nexport function flattermarken(opts,dwg) { return _ToAny(bwipp_flattermarken,opts,dwg); };\nexport function gs1_128(opts,dwg) { return _ToAny(bwipp_gs1_128,opts,dwg); };\nexport function gs1_128composite(opts,dwg) { return _ToAny(bwipp_gs1_128composite,opts,dwg); };\nexport function gs1_cc(opts,dwg) { return _ToAny(bwipp_gs1_cc,opts,dwg); };\nexport function gs1datamatrix(opts,dwg) { return _ToAny(bwipp_gs1datamatrix,opts,dwg); };\nexport function gs1datamatrixrectangular(opts,dwg) { return _ToAny(bwipp_gs1datamatrixrectangular,opts,dwg); };\nexport function gs1dldatamatrix(opts,dwg) { return _ToAny(bwipp_gs1dldatamatrix,opts,dwg); };\nexport function gs1dlqrcode(opts,dwg) { return _ToAny(bwipp_gs1dlqrcode,opts,dwg); };\nexport function gs1dotcode(opts,dwg) { return _ToAny(bwipp_gs1dotcode,opts,dwg); };\nexport function gs1northamericancoupon(opts,dwg) { return _ToAny(bwipp_gs1northamericancoupon,opts,dwg); };\nexport function gs1qrcode(opts,dwg) { return _ToAny(bwipp_gs1qrcode,opts,dwg); };\nexport function hanxin(opts,dwg) { return _ToAny(bwipp_hanxin,opts,dwg); };\nexport function hibcazteccode(opts,dwg) { return _ToAny(bwipp_hibcazteccode,opts,dwg); };\nexport function hibccodablockf(opts,dwg) { return _ToAny(bwipp_hibccodablockf,opts,dwg); };\nexport function hibccode128(opts,dwg) { return _ToAny(bwipp_hibccode128,opts,dwg); };\nexport function hibccode39(opts,dwg) { return _ToAny(bwipp_hibccode39,opts,dwg); };\nexport function hibcdatamatrix(opts,dwg) { return _ToAny(bwipp_hibcdatamatrix,opts,dwg); };\nexport function hibcdatamatrixrectangular(opts,dwg) { return _ToAny(bwipp_hibcdatamatrixrectangular,opts,dwg); };\nexport function hibcmicropdf417(opts,dwg) { return _ToAny(bwipp_hibcmicropdf417,opts,dwg); };\nexport function hibcpdf417(opts,dwg) { return _ToAny(bwipp_hibcpdf417,opts,dwg); };\nexport function hibcqrcode(opts,dwg) { return _ToAny(bwipp_hibcqrcode,opts,dwg); };\nexport function iata2of5(opts,dwg) { return _ToAny(bwipp_iata2of5,opts,dwg); };\nexport function identcode(opts,dwg) { return _ToAny(bwipp_identcode,opts,dwg); };\nexport function industrial2of5(opts,dwg) { return _ToAny(bwipp_industrial2of5,opts,dwg); };\nexport function interleaved2of5(opts,dwg) { return _ToAny(bwipp_interleaved2of5,opts,dwg); };\nexport function isbn(opts,dwg) { return _ToAny(bwipp_isbn,opts,dwg); };\nexport function ismn(opts,dwg) { return _ToAny(bwipp_ismn,opts,dwg); };\nexport function issn(opts,dwg) { return _ToAny(bwipp_issn,opts,dwg); };\nexport function itf14(opts,dwg) { return _ToAny(bwipp_itf14,opts,dwg); };\nexport function jabcode(opts,dwg) { return _ToAny(bwipp_jabcode,opts,dwg); };\nexport function japanpost(opts,dwg) { return _ToAny(bwipp_japanpost,opts,dwg); };\nexport function kix(opts,dwg) { return _ToAny(bwipp_kix,opts,dwg); };\nexport function leitcode(opts,dwg) { return _ToAny(bwipp_leitcode,opts,dwg); };\nexport function mailmark(opts,dwg) { return _ToAny(bwipp_mailmark,opts,dwg); };\nexport function mands(opts,dwg) { return _ToAny(bwipp_mands,opts,dwg); };\nexport function matrix2of5(opts,dwg) { return _ToAny(bwipp_matrix2of5,opts,dwg); };\nexport function maxicode(opts,dwg) { return _ToAny(bwipp_maxicode,opts,dwg); };\nexport function micropdf417(opts,dwg) { return _ToAny(bwipp_micropdf417,opts,dwg); };\nexport function microqrcode(opts,dwg) { return _ToAny(bwipp_microqrcode,opts,dwg); };\nexport function msi(opts,dwg) { return _ToAny(bwipp_msi,opts,dwg); };\nexport function onecode(opts,dwg) { return _ToAny(bwipp_onecode,opts,dwg); };\nexport function pdf417(opts,dwg) { return _ToAny(bwipp_pdf417,opts,dwg); };\nexport function pdf417compact(opts,dwg) { return _ToAny(bwipp_pdf417compact,opts,dwg); };\nexport function pharmacode(opts,dwg) { return _ToAny(bwipp_pharmacode,opts,dwg); };\nexport function pharmacode2(opts,dwg) { return _ToAny(bwipp_pharmacode2,opts,dwg); };\nexport function planet(opts,dwg) { return _ToAny(bwipp_planet,opts,dwg); };\nexport function plessey(opts,dwg) { return _ToAny(bwipp_plessey,opts,dwg); };\nexport function posicode(opts,dwg) { return _ToAny(bwipp_posicode,opts,dwg); };\nexport function postnet(opts,dwg) { return _ToAny(bwipp_postnet,opts,dwg); };\nexport function pzn(opts,dwg) { return _ToAny(bwipp_pzn,opts,dwg); };\nexport function qrcode(opts,dwg) { return _ToAny(bwipp_qrcode,opts,dwg); };\nexport function rationalizedCodabar(opts,dwg) { return _ToAny(bwipp_rationalizedCodabar,opts,dwg); };\nexport function raw(opts,dwg) { return _ToAny(bwipp_raw,opts,dwg); };\nexport function rectangularmicroqrcode(opts,dwg) { return _ToAny(bwipp_rectangularmicroqrcode,opts,dwg); };\nexport function royalmail(opts,dwg) { return _ToAny(bwipp_royalmail,opts,dwg); };\nexport function sscc18(opts,dwg) { return _ToAny(bwipp_sscc18,opts,dwg); };\nexport function swissqrcode(opts,dwg) { return _ToAny(bwipp_swissqrcode,opts,dwg); };\nexport function symbol(opts,dwg) { return _ToAny(bwipp_symbol,opts,dwg); };\nexport function telepen(opts,dwg) { return _ToAny(bwipp_telepen,opts,dwg); };\nexport function telepennumeric(opts,dwg) { return _ToAny(bwipp_telepennumeric,opts,dwg); };\nexport function ultracode(opts,dwg) { return _ToAny(bwipp_ultracode,opts,dwg); };\nexport function upca(opts,dwg) { return _ToAny(bwipp_upca,opts,dwg); };\nexport function upcacomposite(opts,dwg) { return _ToAny(bwipp_upcacomposite,opts,dwg); };\nexport function upce(opts,dwg) { return _ToAny(bwipp_upce,opts,dwg); };\nexport function upcecomposite(opts,dwg) { return _ToAny(bwipp_upcecomposite,opts,dwg); };\nexport { ToCanvas as toCanvas, ToSVG as toSVG, Render as render, LoadFont as loadFont,\n         DrawingCanvas as drawingCanvas, DrawingSVG as drawingSVG,\n         BWIPJS_VERSION, BWIPP_VERSION,\n};\nexport default {\n    toCanvas:ToCanvas, toSVG:ToSVG, render:Render, raw:ToRaw,\n    drawingCanvas:DrawingCanvas, drawingSVG:DrawingSVG,\n    fixupOptions:FixupOptions, loadFont:LoadFont, FontLib, BWIPJS_VERSION, BWIPP_VERSION,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,SAASA,aAAa,EAACC,eAAe,EAACC,sBAAsB,EAACC,eAAe,EAACC,WAAW,EAACC,iBAAiB,EAACC,gBAAgB,EAACC,YAAY,EAACC,aAAa,EAACC,aAAa,EAACC,cAAc,EAACC,YAAY,EAACC,YAAY,EAACC,eAAe,EAACC,YAAY,EAACC,YAAY,EAACC,eAAe,EAACC,aAAa,EAACC,cAAc,EAACC,UAAU,EAACC,qBAAqB,EAACC,8BAA8B,EAACC,4BAA4B,EAACC,qCAAqC,EAACC,oBAAoB,EAACC,6BAA6B,EAACC,iBAAiB,EAACC,0BAA0B,EAACC,oBAAoB,EAACC,6BAA6B,EAACC,wBAAwB,EAACC,iCAAiC,EAACC,sBAAsB,EAACC,+BAA+B,EAACC,mBAAmB,EAACC,gBAAgB,EAACC,2BAA2B,EAACC,oCAAoC,EAACC,aAAa,EAACC,WAAW,EAACC,oBAAoB,EAACC,WAAW,EAACC,UAAU,EAACC,UAAU,EAACC,UAAU,EAACC,mBAAmB,EAACC,mBAAmB,EAACC,aAAa,EAACC,sBAAsB,EAACC,YAAY,EAACC,mBAAmB,EAACC,8BAA8B,EAACC,qBAAqB,EAACC,iBAAiB,EAACC,gBAAgB,EAACC,4BAA4B,EAACC,eAAe,EAACC,YAAY,EAACC,mBAAmB,EAACC,oBAAoB,EAACC,iBAAiB,EAACC,gBAAgB,EAACC,oBAAoB,EAACC,+BAA+B,EAACC,qBAAqB,EAACC,gBAAgB,EAACC,gBAAgB,EAACC,cAAc,EAACC,eAAe,EAACC,oBAAoB,EAACC,qBAAqB,EAACC,UAAU,EAACC,UAAU,EAACC,UAAU,EAACC,WAAW,EAACC,aAAa,EAACC,eAAe,EAACC,SAAS,EAACC,cAAc,EAACC,cAAc,EAACC,WAAW,EAACC,gBAAgB,EAACC,cAAc,EAACC,iBAAiB,EAACC,iBAAiB,EAACC,SAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}