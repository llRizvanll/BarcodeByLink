{"ast":null,"code":"var _jsxFileName = \"/Users/rizvan/Thor/react-apps/BarcodeByLink/BarcodeByLink/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport BWIPJS from \"bwip-js\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport BarcodeModal from \"./components/BarcodeModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledInput = styled.input`\n  padding: 10px;\n  margin: 10px 0;\n  box-shadow: 0 0 8px rgba(0,0,0,0.2);\n  border-color: #3f51b5;\n  border-radius: 4px;\n  width: 70%;\n  box-sizing: border-box;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n_c = StyledInput;\nconst StyledButton = styled.button`\n  background-color: #3f51b5;\n  color: #fff;\n  padding: 10px 20px;\n  margin: 10px 0;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 25%;\n  box-sizing: border-box;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n_c2 = StyledButton;\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c3 = Container;\nconst App = () => {\n  _s();\n  const [link, setLink] = useState(\"\");\n  const [barcodeSrc, setBarcodeSrc] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const generateBarcode = () => {\n    console.log(link);\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 400; // Set the canvas width\n    canvas.height = 400; // Set the canvas height\n    BWIPJS.toCanvas(canvas, {\n      bcid: \"qrcode\",\n      // Barcode type\n      text: link,\n      // Text to encode\n      // Adjust the scale to fit the barcode within the canvas\n      // Bar height, in millimeters\n      includetext: true,\n      // Show human-readable text\n      textxalign: \"center\" // Always good to set this\n    }, err => {\n      if (err) {\n        // 'err' may be a string or Error object\n        console.error(err);\n      } else {}\n    });\n    const src = canvas.toDataURL(\"image/png\");\n    console.log(src);\n    setBarcodeSrc(src);\n    console.log(\"Barcode generated\");\n    handleShow();\n  };\n  const styles = {\n    container: {\n      flex: 1,\n      alignContent: \"center\",\n      height: 200,\n      width: 200,\n      padding: 20\n    },\n    image: {\n      height: 300,\n      width: \"auto\"\n    },\n    input: {\n      padding: \"10px\",\n      margin: \"10px 0\",\n      boxShadow: \"0 0 8px rgba(0,0,0,0.2)\",\n      borderColor: \"#3f51b5\",\n      borderRadius: \"4px\",\n      width: \"70%\",\n      boxSizing: \"border-box\",\n      '@media (max-width: 768px)': {\n        width: '100%'\n      }\n    },\n    button: {\n      backgroundColor: \"#3f51b5\",\n      color: \"#fff\",\n      padding: \"10px 20px\",\n      margin: \"10px 0\",\n      boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n      border: \"none\",\n      borderRadius: \"4px\",\n      cursor: \"pointer\",\n      width: \"25%\",\n      boxSizing: \"border-box\",\n      '@media (max-width: 768px)': {\n        width: '100%'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"50%\",\n        margin: \"0 auto\",\n        '@media (max-width: 768px)': {\n          maxWidth: '90%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          marginBottom: \"20px\",\n          '@media (max-width: 768px)': {\n            flexDirection: 'column'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n          type: \"text\",\n          value: link,\n          onChange: e => setLink(e.target.value),\n          placeholder: \"Enter text or link to generate barcode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: generateBarcode,\n          children: \"Instant Barcode Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), barcodeSrc && /*#__PURE__*/_jsxDEV(BarcodeModal, {\n      show: show,\n      handleClose: handleClose,\n      barcodeSrc: barcodeSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vhGwfKIMcJBc+gekBABnGuBVDw0=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"StyledButton\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","BWIPJS","Modal","Button","styled","BarcodeModal","jsxDEV","_jsxDEV","StyledInput","input","_c","StyledButton","button","_c2","Container","div","_c3","App","_s","link","setLink","barcodeSrc","setBarcodeSrc","show","setShow","handleClose","handleShow","generateBarcode","console","log","canvas","document","createElement","width","height","toCanvas","bcid","text","includetext","textxalign","err","error","src","toDataURL","styles","container","flex","alignContent","padding","image","margin","boxShadow","borderColor","borderRadius","boxSizing","backgroundColor","color","border","cursor","className","children","style","maxWidth","display","alignItems","justifyContent","marginBottom","flexDirection","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c4","$RefreshReg$"],"sources":["/Users/rizvan/Thor/react-apps/BarcodeByLink/BarcodeByLink/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport BWIPJS from \"bwip-js\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport BarcodeModal from \"./components/BarcodeModal\";\n\nconst StyledInput = styled.input`\n  padding: 10px;\n  margin: 10px 0;\n  box-shadow: 0 0 8px rgba(0,0,0,0.2);\n  border-color: #3f51b5;\n  border-radius: 4px;\n  width: 70%;\n  box-sizing: border-box;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledButton = styled.button`\n  background-color: #3f51b5;\n  color: #fff;\n  padding: 10px 20px;\n  margin: 10px 0;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 25%;\n  box-sizing: border-box;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\nconst App = () => {\n  const [link, setLink] = useState(\"\");\n  const [barcodeSrc, setBarcodeSrc] = useState(\"\");\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const generateBarcode = () => {\n    console.log(link);\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 400; // Set the canvas width\n    canvas.height = 400; // Set the canvas height\n    BWIPJS.toCanvas(\n      canvas,\n      {\n        bcid: \"qrcode\", // Barcode type\n        text: link, // Text to encode\n        // Adjust the scale to fit the barcode within the canvas\n        // Bar height, in millimeters\n        includetext: true, // Show human-readable text\n        textxalign: \"center\", // Always good to set this\n      },\n      (err) => {\n        if (err) {\n          // 'err' may be a string or Error object\n          console.error(err);\n        } else {\n        }\n      }\n    );\n    const src = canvas.toDataURL(\"image/png\");\n    console.log(src);\n    setBarcodeSrc(src);\n    console.log(\"Barcode generated\");\n    handleShow();\n  };\n  const styles = {\n    container: {\n      flex: 1,\n      alignContent: \"center\",\n      height: 200,\n      width: 200,\n      padding: 20,\n    },\n    image: {\n      height: 300,\n      width: \"auto\",\n    },\n    input: {\n      padding: \"10px\",\n      margin: \"10px 0\",\n      boxShadow: \"0 0 8px rgba(0,0,0,0.2)\",\n      borderColor: \"#3f51b5\",\n      borderRadius: \"4px\",\n      width: \"70%\",\n      boxSizing: \"border-box\",\n      '@media (max-width: 768px)': {\n        width: '100%',\n      },\n    },\n    button: {\n      backgroundColor: \"#3f51b5\",\n      color: \"#fff\",\n      padding: \"10px 20px\",\n      margin: \"10px 0\",\n      boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n      border: \"none\",\n      borderRadius: \"4px\",\n      cursor: \"pointer\",\n      width: \"25%\",\n      boxSizing: \"border-box\",\n      '@media (max-width: 768px)': {\n        width: '100%',\n      },\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          maxWidth: \"50%\",\n          margin: \"0 auto\",\n          '@media (max-width: 768px)': {\n            maxWidth: '90%',\n          },\n        }}\n      >\n        <Container\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            marginBottom: \"20px\",\n            '@media (max-width: 768px)': {\n              flexDirection: 'column',\n            },\n          }}\n        >\n          <StyledInput\n            type=\"text\"\n            value={link}\n            onChange={(e) => setLink(e.target.value)}\n            placeholder=\"Enter text or link to generate barcode\"\n          />\n\n          <StyledButton onClick={generateBarcode}>\n            Instant Barcode Image\n          </StyledButton>\n        </Container>\n      </div>\n\n      {barcodeSrc && (\n        <BarcodeModal\n        show={show}\n        handleClose={handleClose}\n        barcodeSrc={barcodeSrc}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}